{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":false,"distro_crate":true,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/parallels/Repos/rust","program":"/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc","arguments":["--edition=2018","--crate-name","proc_macro","src/libproc_macro/lib.rs","--error-format=json","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","opt-level=2","-C","debuginfo=0","-C","metadata=cef68ba883c877ec","-C","extra-filename=-cef68ba883c877ec","--out-dir","/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps","--target","x86_64-unknown-linux-gnu","-L","dependency=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps","-L","dependency=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/release/deps","--extern","std=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-2a388c8dece56ad2.so","--extern","std=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-2a388c8dece56ad2.rlib","-Zexternal-macro-backtrace","-Clink-args=-Wl,-rpath,$ORIGIN/../lib","-Wrust_2018_idioms","-Wunused_lifetimes","-Dwarnings","-Zsave-analysis","-Cprefer-dynamic","-Zbinary-dep-depinfo","-L","native=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/build/compiler_builtins-24f467101ff50fdb/out","-L","native=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/build/backtrace-sys-d34d1240ad0e5dd7/out","--sysroot","/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1","-C","debug-assertions=n","-Z","force-unstable-if-unmarked"],"output":"/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libproc_macro-cef68ba883c877ec.rmeta"},"prelude":{"crate_id":{"name":"proc_macro","disambiguator":[2332973319858074125,1151842544323666318]},"crate_root":"src/libproc_macro","external_crates":[{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":1,"id":{"name":"std","disambiguator":[8351601584793648127,8632876857349748754]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":2,"id":{"name":"core","disambiguator":[2287588329603175230,1743550078670421849]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16198930258126787141,2971708547737336037]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3116599134721608169,2545038524027594738]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[243425455527795567,14247343443062235522]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13663888671738731919,13285117080101152490]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14319211042394114398,5961666531870325507]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12941178827736332585,9358125570039724409]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15494534350792829017,10938457346761435199]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[18141683569186961164,7640898060583599078]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[17290228952750182064,17527858984789957720]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8682897892229156887,8286894810744069291]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3628186424607178785,4863834672057698992]}},{"file_name":"/home/parallels/Repos/rust/src/libproc_macro/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2781593605296020309,1527240366433185842]}}],"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":0,"byte_end":42988,"line_start":1,"line_end":1111,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51353,"byte_end":51365,"line_start":202,"line_end":202,"column_start":14,"column_end":26},"alias_span":null,"name":"PanicMessage","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1380,"byte_end":1390,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"alias_span":null,"name":"Diagnostic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2849},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1392,"byte_end":1397,"line_start":39,"line_end":39,"column_start":34,"column_end":39},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1399,"byte_end":1408,"line_start":39,"line_end":39,"column_start":41,"column_end":50},"alias_span":null,"name":"MultiSpan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":665},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4825,"byte_end":4830,"line_start":133,"line_end":133,"column_start":17,"column_end":22},"alias_span":null,"name":"quote","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4832,"byte_end":4842,"line_start":133,"line_end":133,"column_start":24,"column_end":34},"alias_span":null,"name":"quote_span","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":0,"byte_end":42988,"line_start":1,"line_end":1111,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/libproc_macro/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":553},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":2958},{"krate":0,"index":2963},{"krate":0,"index":2961},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":685},{"krate":0,"index":2972},{"krate":0,"index":2986},{"krate":0,"index":2984},{"krate":0,"index":2982},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":2992},{"krate":0,"index":3005},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":3012},{"krate":0,"index":3031},{"krate":0,"index":3029},{"krate":0,"index":3027},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":718},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":3037},{"krate":0,"index":3052},{"krate":0,"index":3050},{"krate":0,"index":3048},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":734},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":746},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777}],"decl_id":null,"docs":" A support library for macro authors when defining new macros.","sig":null,"attributes":[{"value":"! A support library for macro authors when defining new macros.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library, provided by the standard distribution, provides the types","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":70,"byte_end":145,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! consumed in the interfaces of procedurally defined macro definitions such as","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":146,"byte_end":226,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"! function-like macros `#[proc_macro]`, macro attributes `#[proc_macro_attribute]` and","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":227,"byte_end":315,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"! custom derive attributes`#[proc_macro_derive]`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":316,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":368,"byte_end":371,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! See [the book] for more.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":372,"byte_end":400,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":401,"byte_end":404,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [the book]: ../book/ch19-06-macros.html#procedural-macros-for-generating-code-from-attributes","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":405,"byte_end":502,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"stable(feature = \"proc_macro_lib\", since = \"1.15.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":504,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"deny(missing_docs)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":561,"byte_end":583,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"feature(nll)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":908,"byte_end":924,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"feature(staged_api)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":925,"byte_end":948,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"feature(allow_internal_unstable)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":949,"byte_end":985,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"feature(decl_macro)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":986,"byte_end":1009,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"feature(extern_types)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1010,"byte_end":1035,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"feature(in_band_lifetimes)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1036,"byte_end":1066,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"feature(optin_builtin_traits)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1067,"byte_end":1100,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"feature(rustc_attrs)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1101,"byte_end":1125,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"feature(specialization)","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1126,"byte_end":1153,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"recursion_limit = \"256\"","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1154,"byte_end":1181,"line_start":30,"line_end":30,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bridge","qualname":"::bridge","value":"src/libproc_macro/bridge/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":98},{"krate":0,"index":174},{"krate":0,"index":206},{"krate":0,"index":247},{"krate":0,"index":354},{"krate":0,"index":411},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":2586},{"krate":0,"index":2615},{"krate":0,"index":2611},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2591},{"krate":0,"index":510},{"krate":0,"index":515},{"krate":0,"index":520},{"krate":0,"index":525},{"krate":0,"index":530},{"krate":0,"index":534},{"krate":0,"index":538},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2701},{"krate":0,"index":2718},{"krate":0,"index":2735},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2769},{"krate":0,"index":2780},{"krate":0,"index":2797},{"krate":0,"index":539},{"krate":0,"index":546},{"krate":0,"index":2803},{"krate":0,"index":2824}],"decl_id":null,"docs":" Internal interface for communicating between a `proc_macro` client\n (a proc macro crate) and a `proc_macro` server (a compiler front-end).","sig":null,"attributes":[{"value":"unstable(feature = \"proc_macro_internals\", issue = \"27812\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1183,"byte_end":1245,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"! Internal interface for communicating between a `proc_macro` client","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":42990,"byte_end":43060,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"! (a proc macro crate) and a `proc_macro` server (a compiler front-end).","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43061,"byte_end":43135,"line_start":2,"line_end":2,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43136,"byte_end":43139,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Serialization (with C ABI buffers) and unique integer handles are employed","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43140,"byte_end":43218,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! to allow safely interfacing between two copies of `proc_macro` built","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43219,"byte_end":43291,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! (from the same source) by different compilers with potentially mismatching","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43292,"byte_end":43370,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! Rust ABIs (e.g., stage0/bin/rustc vs stage1/bin/rustc during bootstrap).","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43371,"byte_end":43447,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"deny(unsafe_code)","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":43449,"byte_end":43470,"line_start":9,"line_end":9,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57455,"byte_end":57461,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::bridge::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57433,"byte_end":57443,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::bridge::client","value":"src/libproc_macro/bridge/client.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":779},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1100},{"krate":0,"index":1115},{"krate":0,"index":1113},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1103},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1116},{"krate":0,"index":1131},{"krate":0,"index":1129},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1119},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1132},{"krate":0,"index":1147},{"krate":0,"index":1145},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1135},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":1148},{"krate":0,"index":1173},{"krate":0,"index":1186},{"krate":0,"index":1196},{"krate":0,"index":1224},{"krate":0,"index":1240},{"krate":0,"index":1250},{"krate":0,"index":1293},{"krate":0,"index":1309},{"krate":0,"index":1319},{"krate":0,"index":1332},{"krate":0,"index":116},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":1369},{"krate":0,"index":129},{"krate":0,"index":135},{"krate":0,"index":1373},{"krate":0,"index":1381},{"krate":0,"index":1378},{"krate":0,"index":148},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":1383},{"krate":0,"index":1396},{"krate":0,"index":1394},{"krate":0,"index":169}],"decl_id":null,"docs":" Client-side types.\n","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51087,"byte_end":51109,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"! Client-side types.","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":60377,"byte_end":60399,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70965,"byte_end":70971,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"Client","qualname":"::bridge::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"decl_id":null,"docs":" A client-side \"global object\" (usually a function pointer),\n which may be using a different `proc_macro` from the one\n used by the server, but can be interacted with compatibly.","sig":null,"attributes":[{"value":"/ A client-side \"global object\" (usually a function pointer),","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70475,"byte_end":70538,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ which may be using a different `proc_macro` from the one","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70539,"byte_end":70599,"line_start":327,"line_end":327,"column_start":1,"column_end":61}},{"value":"/ used by the server, but can be interacted with compatibly.","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70600,"byte_end":70662,"line_start":328,"line_end":328,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70663,"byte_end":70666,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ N.B., `F` must have FFI-friendly memory layout (e.g., a pointer).","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70667,"byte_end":70736,"line_start":330,"line_end":330,"column_start":1,"column_end":70}},{"value":"/ The call ABI of function pointers used for `F` doesn't","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70737,"byte_end":70795,"line_start":331,"line_end":331,"column_start":1,"column_end":59}},{"value":"/ need to match between server and client, since it's only","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70796,"byte_end":70856,"line_start":332,"line_end":332,"column_start":1,"column_end":61}},{"value":"/ passed between them and (eventually) called by the client.","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70857,"byte_end":70919,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"repr(C)","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":70920,"byte_end":70930,"line_start":334,"line_end":334,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73136,"byte_end":73143,"line_start":389,"line_end":389,"column_start":18,"column_end":25},"name":"expand1","qualname":"<Client<fn(: crate::TokenStream) -> crate::TokenStream>>::expand1","value":"fn (f: fn(crate::TokenStream) -> crate::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73613,"byte_end":73620,"line_start":401,"line_end":401,"column_start":18,"column_end":25},"name":"expand2","qualname":"<Client<fn(: crate::TokenStream, : crate::TokenStream) -> crate::TokenStream>>::expand2","value":"fn (f: fn(crate::TokenStream, crate::TokenStream) -> crate::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1384},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74177,"byte_end":74189,"line_start":419,"line_end":419,"column_start":5,"column_end":17},"name":"CustomDerive","qualname":"::bridge::client::ProcMacro::CustomDerive","value":"ProcMacro::CustomDerive { trait_name, attributes, client }","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1388},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74353,"byte_end":74357,"line_start":425,"line_end":425,"column_start":5,"column_end":9},"name":"Attr","qualname":"::bridge::client::ProcMacro::Attr","value":"ProcMacro::Attr { name, client }","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1391},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74490,"byte_end":74494,"line_start":430,"line_end":430,"column_start":5,"column_end":9},"name":"Bang","qualname":"::bridge::client::ProcMacro::Bang","value":"ProcMacro::Bang { name, client }","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1383},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74161,"byte_end":74170,"line_start":418,"line_end":418,"column_start":10,"column_end":19},"name":"ProcMacro","qualname":"::bridge::client::ProcMacro","value":"ProcMacro::{CustomDerive, Attr, Bang}","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1388},{"krate":0,"index":1391}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74118,"byte_end":74128,"line_start":416,"line_end":416,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74633,"byte_end":74637,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"name","qualname":"<ProcMacro>::name","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74888,"byte_end":74901,"line_start":445,"line_end":445,"column_start":18,"column_end":31},"name":"custom_derive","qualname":"<ProcMacro>::custom_derive","value":"fn (trait_name: &'static str, attributes: &'static [&'static str], expand: fn(crate::TokenStream) -> crate::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":75176,"byte_end":75180,"line_start":453,"line_end":453,"column_start":18,"column_end":22},"name":"attr","qualname":"<ProcMacro>::attr","value":"fn (name: &'static str, expand: fn(crate::TokenStream, crate::TokenStream) -> crate::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":75398,"byte_end":75402,"line_start":460,"line_end":460,"column_start":18,"column_end":22},"name":"bang","qualname":"<ProcMacro>::bang","value":"fn (name: &'static str, expand: fn(crate::TokenStream) -> crate::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75684,"byte_end":75691,"line_start":4,"line_end":4,"column_start":12,"column_end":19},"name":"Closure","qualname":"::bridge::closure::Closure","value":"Closure {  }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75662,"byte_end":75672,"line_start":3,"line_end":3,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":76301,"byte_end":76305,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"call","qualname":"<Closure>::call","value":"fn (&mut self, arg: A) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":78765,"byte_end":78771,"line_start":13,"line_end":13,"column_start":8,"column_end":14},"name":"encode","qualname":"::bridge::rpc::Encode::encode","value":"fn (self, w: &mut Writer, s: &mut S) -> ()","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":78900,"byte_end":78906,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"decode","qualname":"::bridge::rpc::Decode::decode","value":"fn (r: &mut Reader<'a>, s: &'s S) -> Self","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":79003,"byte_end":79009,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"decode","qualname":"::bridge::rpc::DecodeMut::decode","value":"fn (r: &mut Reader<'a>, s: &'s mut S) -> Self","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1425},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83708,"byte_end":83716,"line_start":189,"line_end":189,"column_start":9,"column_end":17},"name":"Included","qualname":"::<std::collections::Bound<T> as bridge::rpc::Encode<S>>::encode::tag::Included","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1426},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83729,"byte_end":83737,"line_start":190,"line_end":190,"column_start":9,"column_end":17},"name":"Excluded","qualname":"::<std::collections::Bound<T> as bridge::rpc::Encode<S>>::encode::tag::Excluded","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1427},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83750,"byte_end":83759,"line_start":191,"line_end":191,"column_start":9,"column_end":18},"name":"Unbounded","qualname":"::<std::collections::Bound<T> as bridge::rpc::Encode<S>>::encode::tag::Unbounded","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1441},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83708,"byte_end":83716,"line_start":189,"line_end":189,"column_start":9,"column_end":17},"name":"Included","qualname":"::<std::collections::Bound<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Included","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1442},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83729,"byte_end":83737,"line_start":190,"line_end":190,"column_start":9,"column_end":17},"name":"Excluded","qualname":"::<std::collections::Bound<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Excluded","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1443},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83750,"byte_end":83759,"line_start":191,"line_end":191,"column_start":9,"column_end":18},"name":"Unbounded","qualname":"::<std::collections::Bound<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Unbounded","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1454},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83820,"byte_end":83824,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"None","qualname":"::<std::option::Option<T> as bridge::rpc::Encode<S>>::encode::tag::None","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1455},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83834,"byte_end":83838,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"Some","qualname":"::<std::option::Option<T> as bridge::rpc::Encode<S>>::encode::tag::Some","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1467},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83820,"byte_end":83824,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"None","qualname":"::<std::option::Option<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::None","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1468},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83834,"byte_end":83838,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"Some","qualname":"::<std::option::Option<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Some","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1480},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83905,"byte_end":83907,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"name":"Ok","qualname":"::<std::result::Result<T, E> as bridge::rpc::Encode<S>>::encode::tag::Ok","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1481},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83920,"byte_end":83923,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"Err","qualname":"::<std::result::Result<T, E> as bridge::rpc::Encode<S>>::encode::tag::Err","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1495},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83905,"byte_end":83907,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"name":"Ok","qualname":"::<std::result::Result<T, E> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Ok","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1496},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83920,"byte_end":83923,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"Err","qualname":"::<std::result::Result<T, E> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Err","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84986,"byte_end":84995,"line_start":252,"line_end":252,"column_start":5,"column_end":14},"name":"StaticStr","qualname":"::bridge::rpc::PanicMessage::StaticStr","value":"PanicMessage::StaticStr(&'static str)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85015,"byte_end":85021,"line_start":253,"line_end":253,"column_start":5,"column_end":11},"name":"String","qualname":"::bridge::rpc::PanicMessage::String","value":"PanicMessage::String(String)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85035,"byte_end":85042,"line_start":254,"line_end":254,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::bridge::rpc::PanicMessage::Unknown","value":"PanicMessage::Unknown","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":331},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84967,"byte_end":84979,"line_start":251,"line_end":251,"column_start":10,"column_end":22},"name":"PanicMessage","qualname":"::bridge::rpc::PanicMessage","value":"PanicMessage::{StaticStr, String, Unknown}","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338}],"decl_id":null,"docs":" Simplied version of panic payloads, ignoring\n types other than `&'static str` and `String`.\n","sig":null,"attributes":[{"value":"/ Simplied version of panic payloads, ignoring","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84859,"byte_end":84907,"line_start":249,"line_end":249,"column_start":1,"column_end":49}},{"value":"/ types other than `&'static str` and `String`.","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84908,"byte_end":84957,"line_start":250,"line_end":250,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85844,"byte_end":85850,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"as_str","qualname":"<PanicMessage>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86657,"byte_end":86663,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"ApplyL","qualname":"::bridge::scoped_cell::ApplyL","value":"ApplyL<'a>","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" Type lambda application, with a lifetime.\n","sig":null,"attributes":[{"value":"/ Type lambda application, with a lifetime.","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86574,"byte_end":86619,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"allow(unused_lifetimes)","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86620,"byte_end":86646,"line_start":8,"line_end":8,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86679,"byte_end":86682,"line_start":10,"line_end":10,"column_start":10,"column_end":13},"name":"Out","qualname":"::bridge::scoped_cell::ApplyL::Out","value":"type Out;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86758,"byte_end":86765,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"LambdaL","qualname":"::bridge::scoped_cell::LambdaL","value":"LambdaL: for<'a> ApplyL<'a>","parent":null,"children":[],"decl_id":null,"docs":" Type lambda taking a lifetime, i.e., `Lifetime -> Type`.\n","sig":null,"attributes":[{"value":"/ Type lambda taking a lifetime, i.e., `Lifetime -> Type`.","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86687,"byte_end":86747,"line_start":13,"line_end":13,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86975,"byte_end":86982,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"RefMutL","qualname":"::bridge::scoped_cell::RefMutL","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87343,"byte_end":87353,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"ScopedCell","qualname":"::bridge::scoped_cell::ScopedCell","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87453,"byte_end":87456,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<ScopedCell<T>>::new","value":"fn (value: <T as ApplyL<'static>>::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87792,"byte_end":87799,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"replace","qualname":"<ScopedCell<T>>::replace","value":"fn <'a, R> (&self, replacement: <T as ApplyL<'a>>::Out, f: impl for<'b, 'c> FnOnce(RefMutL<'b, 'c, T>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets the value in `self` to `replacement` while\n running `f`, which gets the old value, mutably.\n The old value will be restored after `f` exits, even\n by panic, including modifications made to it by `f`.\n","sig":null,"attributes":[{"value":"/ Sets the value in `self` to `replacement` while","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87551,"byte_end":87602,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/ running `f`, which gets the old value, mutably.","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87607,"byte_end":87658,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/ The old value will be restored after `f` exits, even","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87663,"byte_end":87719,"line_start":44,"line_end":44,"column_start":5,"column_end":61}},{"value":"/ by panic, including modifications made to it by `f`.","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87724,"byte_end":87780,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":88866,"byte_end":88869,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"set","qualname":"<ScopedCell<T>>::set","value":"fn <R> (&self, value: <T as ApplyL<'_>>::Out, f: impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets the value in `self` to `value` while running `f`.\n","sig":null,"attributes":[{"value":"/ Sets the value in `self` to `value` while running `f`.","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":88796,"byte_end":88854,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":411},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::bridge::server","value":"src/libproc_macro/bridge/server.rs","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":416},{"krate":0,"index":420},{"krate":0,"index":1593},{"krate":0,"index":1606},{"krate":0,"index":1616},{"krate":0,"index":1622},{"krate":0,"index":1627},{"krate":0,"index":1638},{"krate":0,"index":1645},{"krate":0,"index":1650},{"krate":0,"index":1666},{"krate":0,"index":1673},{"krate":0,"index":1678},{"krate":0,"index":1684},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":1698},{"krate":0,"index":1711},{"krate":0,"index":426},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":465},{"krate":0,"index":473},{"krate":0,"index":477}],"decl_id":null,"docs":" Server-side traits.\n","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51280,"byte_end":51302,"line_start":198,"line_end":198,"column_start":1,"column_end":23}},{"value":"! Server-side traits.","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":88987,"byte_end":89010,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":93748,"byte_end":93765,"line_start":129,"line_end":129,"column_start":11,"column_end":28},"name":"ExecutionStrategy","qualname":"::bridge::server::ExecutionStrategy","value":"ExecutionStrategy","parent":null,"children":[{"krate":0,"index":427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":93775,"byte_end":93796,"line_start":130,"line_end":130,"column_start":8,"column_end":29},"name":"run_bridge_and_client","qualname":"::bridge::server::ExecutionStrategy::run_bridge_and_client","value":"fn <D> (&self, dispatcher: &mut impl DispatcherTrait, input: Buffer<u8>, run_client: extern \"C\" fn(Bridge<'_>, D) -> Buffer<u8>, client_data: D) -> Buffer<u8>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94036,"byte_end":94046,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"SameThread","qualname":"::bridge::server::SameThread","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94666,"byte_end":94678,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"CrossThread1","qualname":"::bridge::server::CrossThread1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":95599,"byte_end":95611,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"CrossThread2","qualname":"::bridge::server::CrossThread2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98259,"byte_end":98262,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"run","qualname":"<client::Client<fn(: crate::TokenStream) -> crate::TokenStream>>::run","value":"fn <S> (&self, strategy: &impl ExecutionStrategy, server: S, input: S::TokenStream) -> Result<S::TokenStream, PanicMessage>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98872,"byte_end":98875,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"run","qualname":"<client::Client<fn(: crate::TokenStream, : crate::TokenStream)\n                   -> crate::TokenStream>>::run","value":"fn <S> (&self, strategy: &impl ExecutionStrategy, server: S, input: S::TokenStream, input2: S::TokenStream) -> Result<S::TokenStream, PanicMessage>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51795,"byte_end":51801,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"Bridge","qualname":"::bridge::Bridge","value":"Bridge {  }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"decl_id":null,"docs":" An active connection between a server and a client.\n The server creates the bridge (`Bridge::run_server` in `server.rs`),\n then passes it to the client through the function pointer in the `run`\n field of `client::Client`. The client holds its copy of the `Bridge`\n in TLS during its execution (`Bridge::{enter, with}` in `client.rs`).\n","sig":null,"attributes":[{"value":"/ An active connection between a server and a client.","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51422,"byte_end":51477,"line_start":205,"line_end":205,"column_start":1,"column_end":56}},{"value":"/ The server creates the bridge (`Bridge::run_server` in `server.rs`),","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51478,"byte_end":51550,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/ then passes it to the client through the function pointer in the `run`","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51551,"byte_end":51625,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ field of `client::Client`. The client holds its copy of the `Bridge`","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51626,"byte_end":51698,"line_start":208,"line_end":208,"column_start":1,"column_end":73}},{"value":"/ in TLS during its execution (`Bridge::{enter, with}` in `client.rs`).","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51699,"byte_end":51772,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51773,"byte_end":51783,"line_start":210,"line_end":210,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":505},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53148,"byte_end":53156,"line_start":254,"line_end":254,"column_start":10,"column_end":18},"name":"Unmarked","qualname":"::bridge::Mark::Unmarked","value":"type Unmarked;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53165,"byte_end":53169,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"mark","qualname":"::bridge::Mark::mark","value":"fn (unmarked: Self::Unmarked) -> Self","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":508},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53299,"byte_end":53307,"line_start":260,"line_end":260,"column_start":10,"column_end":18},"name":"Unmarked","qualname":"::bridge::Unmark::Unmarked","value":"type Unmarked;","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53316,"byte_end":53322,"line_start":261,"line_end":261,"column_start":8,"column_end":14},"name":"unmark","qualname":"::bridge::Unmark::unmark","value":"fn (self) -> Self::Unmarked","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2697},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55042,"byte_end":55053,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"name":"Parenthesis","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Delimiter>::encode::tag::Parenthesis","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2698},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55063,"byte_end":55068,"line_start":343,"line_end":343,"column_start":9,"column_end":14},"name":"Brace","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Delimiter>::encode::tag::Brace","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2699},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55078,"byte_end":55085,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Delimiter>::encode::tag::Bracket","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2700},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55095,"byte_end":55099,"line_start":345,"line_end":345,"column_start":9,"column_end":13},"name":"None","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Delimiter>::encode::tag::None","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2714},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55042,"byte_end":55053,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"name":"Parenthesis","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Delimiter>::decode::tag::Parenthesis","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2715},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55063,"byte_end":55068,"line_start":343,"line_end":343,"column_start":9,"column_end":14},"name":"Brace","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Delimiter>::decode::tag::Brace","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2716},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55078,"byte_end":55085,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Delimiter>::decode::tag::Bracket","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2717},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55095,"byte_end":55099,"line_start":345,"line_end":345,"column_start":9,"column_end":13},"name":"None","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Delimiter>::decode::tag::None","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2731},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55155,"byte_end":55160,"line_start":350,"line_end":350,"column_start":9,"column_end":14},"name":"Error","qualname":"::bridge::<impl bridge::rpc::Encode<S> for diagnostic::Level>::encode::tag::Error","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2732},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55170,"byte_end":55177,"line_start":351,"line_end":351,"column_start":9,"column_end":16},"name":"Warning","qualname":"::bridge::<impl bridge::rpc::Encode<S> for diagnostic::Level>::encode::tag::Warning","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2733},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55187,"byte_end":55191,"line_start":352,"line_end":352,"column_start":9,"column_end":13},"name":"Note","qualname":"::bridge::<impl bridge::rpc::Encode<S> for diagnostic::Level>::encode::tag::Note","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2734},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55201,"byte_end":55205,"line_start":353,"line_end":353,"column_start":9,"column_end":13},"name":"Help","qualname":"::bridge::<impl bridge::rpc::Encode<S> for diagnostic::Level>::encode::tag::Help","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2748},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55155,"byte_end":55160,"line_start":350,"line_end":350,"column_start":9,"column_end":14},"name":"Error","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for diagnostic::Level>::decode::tag::Error","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2749},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55170,"byte_end":55177,"line_start":351,"line_end":351,"column_start":9,"column_end":16},"name":"Warning","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for diagnostic::Level>::decode::tag::Warning","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2750},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55187,"byte_end":55191,"line_start":352,"line_end":352,"column_start":9,"column_end":13},"name":"Note","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for diagnostic::Level>::decode::tag::Note","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2751},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55201,"byte_end":55205,"line_start":353,"line_end":353,"column_start":9,"column_end":13},"name":"Help","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for diagnostic::Level>::decode::tag::Help","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2767},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55319,"byte_end":55324,"line_start":359,"line_end":359,"column_start":9,"column_end":14},"name":"Alone","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Spacing>::encode::tag::Alone","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2768},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55334,"byte_end":55339,"line_start":360,"line_end":360,"column_start":9,"column_end":14},"name":"Joint","qualname":"::bridge::<impl bridge::rpc::Encode<S> for Spacing>::encode::tag::Joint","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2778},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55319,"byte_end":55324,"line_start":359,"line_end":359,"column_start":9,"column_end":14},"name":"Alone","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Spacing>::decode::tag::Alone","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2779},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55334,"byte_end":55339,"line_start":360,"line_end":360,"column_start":9,"column_end":14},"name":"Joint","qualname":"::bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Spacing>::decode::tag::Joint","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55405,"byte_end":55410,"line_start":366,"line_end":366,"column_start":5,"column_end":10},"name":"Group","qualname":"::bridge::TokenTree::Group","value":"TokenTree::Group(G)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55419,"byte_end":55424,"line_start":367,"line_end":367,"column_start":5,"column_end":10},"name":"Punct","qualname":"::bridge::TokenTree::Punct","value":"TokenTree::Punct(P)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55433,"byte_end":55438,"line_start":368,"line_end":368,"column_start":5,"column_end":10},"name":"Ident","qualname":"::bridge::TokenTree::Ident","value":"TokenTree::Ident(I)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55447,"byte_end":55454,"line_start":369,"line_end":369,"column_start":5,"column_end":12},"name":"Literal","qualname":"::bridge::TokenTree::Literal","value":"TokenTree::Literal(L)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2780},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55377,"byte_end":55386,"line_start":365,"line_end":365,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::bridge::TokenTree","value":"TokenTree::{Group, Punct, Ident, Literal}","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2820},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56562,"byte_end":56567,"line_start":397,"line_end":397,"column_start":9,"column_end":14},"name":"Group","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::Encode<S>>::encode::tag::Group","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2821},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56581,"byte_end":56586,"line_start":398,"line_end":398,"column_start":9,"column_end":14},"name":"Punct","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::Encode<S>>::encode::tag::Punct","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2822},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56600,"byte_end":56605,"line_start":399,"line_end":399,"column_start":9,"column_end":14},"name":"Ident","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::Encode<S>>::encode::tag::Ident","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2823},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56619,"byte_end":56626,"line_start":400,"line_end":400,"column_start":9,"column_end":16},"name":"Literal","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::Encode<S>>::encode::tag::Literal","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2845},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56562,"byte_end":56567,"line_start":397,"line_end":397,"column_start":9,"column_end":14},"name":"Group","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Group","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2846},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56581,"byte_end":56586,"line_start":398,"line_end":398,"column_start":9,"column_end":14},"name":"Punct","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Punct","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2847},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56600,"byte_end":56605,"line_start":399,"line_end":399,"column_start":9,"column_end":14},"name":"Ident","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Ident","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2848},"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56619,"byte_end":56626,"line_start":400,"line_end":400,"column_start":9,"column_end":16},"name":"Literal","qualname":"::<bridge::TokenTree<G, P, I, L> as bridge::rpc::DecodeMut<'a, '_, S>>::decode::tag::Literal","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2850},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99735,"byte_end":99740,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Error","qualname":"::diagnostic::Level::Error","value":"Level::Error","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" An error.\n","sig":null,"attributes":[{"value":"/ An error.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99717,"byte_end":99730,"line_start":8,"line_end":8,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2852},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99765,"byte_end":99772,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Warning","qualname":"::diagnostic::Level::Warning","value":"Level::Warning","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" A warning.\n","sig":null,"attributes":[{"value":"/ A warning.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99746,"byte_end":99760,"line_start":10,"line_end":10,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2854},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99794,"byte_end":99798,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Note","qualname":"::diagnostic::Level::Note","value":"Level::Note","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" A note.\n","sig":null,"attributes":[{"value":"/ A note.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99778,"byte_end":99789,"line_start":12,"line_end":12,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2856},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99828,"byte_end":99832,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Help","qualname":"::diagnostic::Level::Help","value":"Level::Help","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" A help message.\n","sig":null,"attributes":[{"value":"/ A help message.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99804,"byte_end":99823,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2849},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99705,"byte_end":99710,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Level","qualname":"::diagnostic::Level","value":"Level::{Error, Warning, Note, Help}","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2856}],"decl_id":null,"docs":" An enum representing a diagnostic level.\n","sig":null,"attributes":[{"value":"/ An enum representing a diagnostic level.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99539,"byte_end":99583,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99584,"byte_end":99647,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99678,"byte_end":99695,"line_start":6,"line_end":6,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":555},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99987,"byte_end":99996,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"MultiSpan","qualname":"::diagnostic::MultiSpan","value":"MultiSpan","parent":null,"children":[{"krate":0,"index":556}],"decl_id":null,"docs":" Trait implemented by types that can be converted into a set of `Span`s.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types that can be converted into a set of `Span`s.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99837,"byte_end":99912,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":99913,"byte_end":99976,"line_start":19,"line_end":19,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100050,"byte_end":100060,"line_start":22,"line_end":22,"column_start":8,"column_end":18},"name":"into_spans","qualname":"::diagnostic::MultiSpan::into_spans","value":"fn (self) -> Vec<Span>","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Converts `self` into a `Vec<Span>`.\n","sig":null,"attributes":[{"value":"/ Converts `self` into a `Vec<Span>`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100003,"byte_end":100042,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100754,"byte_end":100764,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"Diagnostic","qualname":"::diagnostic::Diagnostic","value":"Diagnostic {  }","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867}],"decl_id":null,"docs":" A structure representing a diagnostic message and associated children\n messages.\n","sig":null,"attributes":[{"value":"/ A structure representing a diagnostic message and associated children","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100567,"byte_end":100640,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ messages.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100641,"byte_end":100654,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100655,"byte_end":100718,"line_start":48,"line_end":48,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2872},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101994,"byte_end":102002,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"Children","qualname":"::diagnostic::Children","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the children diagnostics of a `Diagnostic`.\n","sig":null,"attributes":[{"value":"/ Iterator over the children diagnostics of a `Diagnostic`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101833,"byte_end":101894,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101919,"byte_end":101982,"line_start":82,"line_end":82,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102487,"byte_end":102490,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Diagnostic>::new","value":"fn <T> (level: Level, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new diagnostic with the given `level` and `message`.\n","sig":null,"attributes":[{"value":"/ Creates a new diagnostic with the given `level` and `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102341,"byte_end":102407,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102412,"byte_end":102475,"line_start":97,"line_end":97,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102846,"byte_end":102853,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"spanned","qualname":"<Diagnostic>::spanned","value":"fn <S, T> (spans: S, level: Level, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new diagnostic with the given `level` and `message` pointing to\n the given set of `spans`.\n","sig":null,"attributes":[{"value":"/ Creates a new diagnostic with the given `level` and `message` pointing to","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102655,"byte_end":102732,"line_start":102,"line_end":102,"column_start":5,"column_end":82}},{"value":"/ the given set of `spans`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102737,"byte_end":102766,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102771,"byte_end":102834,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103173,"byte_end":103183,"line_start":118,"line_end":118,"column_start":31,"column_end":41},"name":"span_error","qualname":"<Diagnostic>::span_error","value":"fn <S, T> (mut self, spans: S, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `spans` and\n `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100965,"byte_end":101029,"line_start":59,"line_end":59,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `spans` and","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101038,"byte_end":101101,"line_start":60,"line_end":60,"column_start":9,"column_end":72}},{"value":"/ `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101110,"byte_end":101124,"line_start":61,"line_end":61,"column_start":9,"column_end":23}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101133,"byte_end":101196,"line_start":62,"line_end":62,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103185,"byte_end":103190,"line_start":118,"line_end":118,"column_start":43,"column_end":48},"name":"error","qualname":"<Diagnostic>::error","value":"fn <T> (mut self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101444,"byte_end":101508,"line_start":70,"line_end":70,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101517,"byte_end":101579,"line_start":71,"line_end":71,"column_start":9,"column_end":71}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101588,"byte_end":101651,"line_start":72,"line_end":72,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103237,"byte_end":103249,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"name":"span_warning","qualname":"<Diagnostic>::span_warning","value":"fn <S, T> (mut self, spans: S, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `spans` and\n `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100965,"byte_end":101029,"line_start":59,"line_end":59,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `spans` and","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101038,"byte_end":101101,"line_start":60,"line_end":60,"column_start":9,"column_end":72}},{"value":"/ `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101110,"byte_end":101124,"line_start":61,"line_end":61,"column_start":9,"column_end":23}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101133,"byte_end":101196,"line_start":62,"line_end":62,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103251,"byte_end":103258,"line_start":119,"line_end":119,"column_start":45,"column_end":52},"name":"warning","qualname":"<Diagnostic>::warning","value":"fn <T> (mut self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101444,"byte_end":101508,"line_start":70,"line_end":70,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101517,"byte_end":101579,"line_start":71,"line_end":71,"column_start":9,"column_end":71}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101588,"byte_end":101651,"line_start":72,"line_end":72,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103307,"byte_end":103316,"line_start":120,"line_end":120,"column_start":31,"column_end":40},"name":"span_note","qualname":"<Diagnostic>::span_note","value":"fn <S, T> (mut self, spans: S, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `spans` and\n `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100965,"byte_end":101029,"line_start":59,"line_end":59,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `spans` and","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101038,"byte_end":101101,"line_start":60,"line_end":60,"column_start":9,"column_end":72}},{"value":"/ `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101110,"byte_end":101124,"line_start":61,"line_end":61,"column_start":9,"column_end":23}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101133,"byte_end":101196,"line_start":62,"line_end":62,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103318,"byte_end":103322,"line_start":120,"line_end":120,"column_start":42,"column_end":46},"name":"note","qualname":"<Diagnostic>::note","value":"fn <T> (mut self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101444,"byte_end":101508,"line_start":70,"line_end":70,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101517,"byte_end":101579,"line_start":71,"line_end":71,"column_start":9,"column_end":71}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101588,"byte_end":101651,"line_start":72,"line_end":72,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103368,"byte_end":103377,"line_start":121,"line_end":121,"column_start":31,"column_end":40},"name":"span_help","qualname":"<Diagnostic>::span_help","value":"fn <S, T> (mut self, spans: S, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `spans` and\n `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100965,"byte_end":101029,"line_start":59,"line_end":59,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `spans` and","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101038,"byte_end":101101,"line_start":60,"line_end":60,"column_start":9,"column_end":72}},{"value":"/ `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101110,"byte_end":101124,"line_start":61,"line_end":61,"column_start":9,"column_end":23}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101133,"byte_end":101196,"line_start":62,"line_end":62,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103379,"byte_end":103383,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"name":"help","qualname":"<Diagnostic>::help","value":"fn <T> (mut self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Adds a new child diagnostic message to `self` with the level\n identified by this method's name with the given `message`.\n","sig":null,"attributes":[{"value":"/ Adds a new child diagnostic message to `self` with the level","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101444,"byte_end":101508,"line_start":70,"line_end":70,"column_start":9,"column_end":73}},{"value":"/ identified by this method's name with the given `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101517,"byte_end":101579,"line_start":71,"line_end":71,"column_start":9,"column_end":71}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":101588,"byte_end":101651,"line_start":72,"line_end":72,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103530,"byte_end":103535,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"level","qualname":"<Diagnostic>::level","value":"fn (&self) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the diagnostic `level` for `self`.\n","sig":null,"attributes":[{"value":"/ Returns the diagnostic `level` for `self`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103404,"byte_end":103450,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103455,"byte_end":103518,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103704,"byte_end":103713,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"set_level","qualname":"<Diagnostic>::set_level","value":"fn (&mut self, level: Level) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the level in `self` to `level`.\n","sig":null,"attributes":[{"value":"/ Sets the level in `self` to `level`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103584,"byte_end":103624,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103629,"byte_end":103692,"line_start":130,"line_end":130,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103894,"byte_end":103901,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"message","qualname":"<Diagnostic>::message","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the message in `self`.\n","sig":null,"attributes":[{"value":"/ Returns the message in `self`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103780,"byte_end":103814,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103819,"byte_end":103882,"line_start":136,"line_end":136,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104076,"byte_end":104087,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Diagnostic>::set_message","value":"fn <T> (&mut self, message: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the message in `self` to `message`.\n","sig":null,"attributes":[{"value":"/ Sets the message in `self` to `message`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":103952,"byte_end":103996,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104001,"byte_end":104064,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104294,"byte_end":104299,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"spans","qualname":"<Diagnostic>::spans","value":"fn (&self) -> &[Span]","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`s in `self`.\n","sig":null,"attributes":[{"value":"/ Returns the `Span`s in `self`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104180,"byte_end":104214,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104219,"byte_end":104282,"line_start":148,"line_end":148,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104473,"byte_end":104482,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"set_spans","qualname":"<Diagnostic>::set_spans","value":"fn <S> (&mut self, spans: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Span`s in `self` to `spans`.\n","sig":null,"attributes":[{"value":"/ Sets the `Span`s in `self` to `spans`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104351,"byte_end":104393,"line_start":153,"line_end":153,"column_start":5,"column_end":47}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104398,"byte_end":104461,"line_start":154,"line_end":154,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104716,"byte_end":104724,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"children","qualname":"<Diagnostic>::children","value":"fn (&self) -> Children<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the children diagnostics of `self`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the children diagnostics of `self`.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104572,"byte_end":104636,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104641,"byte_end":104704,"line_start":160,"line_end":160,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104904,"byte_end":104908,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"emit","qualname":"<Diagnostic>::emit","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emit the diagnostic.\n","sig":null,"attributes":[{"value":"/ Emit the diagnostic.","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104800,"byte_end":104824,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":104829,"byte_end":104892,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2902},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2020,"byte_end":2031,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"TokenStream","qualname":"::TokenStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" The main type provided by this crate, representing an abstract stream of\n tokens, or, more specifically, a sequence of token trees.\n The type provide interfaces for iterating over those token trees and, conversely,\n collecting a number of token trees into one stream.","sig":null,"attributes":[{"value":"/ The main type provided by this crate, representing an abstract stream of","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1523,"byte_end":1599,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ tokens, or, more specifically, a sequence of token trees.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1600,"byte_end":1661,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ The type provide interfaces for iterating over those token trees and, conversely,","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1662,"byte_end":1747,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/ collecting a number of token trees into one stream.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1748,"byte_end":1803,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1804,"byte_end":1807,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This is both the input and output of `#[proc_macro]`, `#[proc_macro_attribute]`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1808,"byte_end":1891,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/ and `#[proc_macro_derive]` definitions.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1892,"byte_end":1935,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"stable(feature = \"proc_macro_lib\", since = \"1.15.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1936,"byte_end":1991,"line_start":53,"line_end":53,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2907},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2369,"byte_end":2377,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"LexError","qualname":"::LexError","value":"LexError {  }","parent":null,"children":[{"krate":0,"index":2908}],"decl_id":null,"docs":" Error returned from `TokenStream::from_str`.\n","sig":null,"attributes":[{"value":"/ Error returned from `TokenStream::from_str`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2236,"byte_end":2284,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"stable(feature = \"proc_macro_lib\", since = \"1.15.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2285,"byte_end":2340,"line_start":63,"line_end":63,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2723,"byte_end":2726,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"fn () -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `TokenStream` containing no token trees.\n","sig":null,"attributes":[{"value":"/ Returns an empty `TokenStream` containing no token trees.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2589,"byte_end":2650,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2655,"byte_end":2711,"line_start":76,"line_end":76,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2928,"byte_end":2936,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `TokenStream` is empty.\n","sig":null,"attributes":[{"value":"/ Checks if this `TokenStream` is empty.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2813,"byte_end":2855,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2860,"byte_end":2916,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":633},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6967,"byte_end":6979,"line_start":184,"line_end":184,"column_start":9,"column_end":21},"name":"token_stream","qualname":"::token_stream","value":"src/libproc_macro/lib.rs","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":642},{"krate":0,"index":646}],"decl_id":null,"docs":" Public implementation details for the `TokenStream` type, such as iterators.\n","sig":null,"attributes":[{"value":"/ Public implementation details for the `TokenStream` type, such as iterators.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6821,"byte_end":6901,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6902,"byte_end":6958,"line_start":183,"line_end":183,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7357,"byte_end":7365,"line_start":192,"line_end":192,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::token_stream::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over `TokenStream`'s `TokenTree`s.\n The iteration is \"shallow\", e.g., the iterator doesn't recurse into delimited groups,\n and returns whole groups as token trees.\n","sig":null,"attributes":[{"value":"/ An iterator over `TokenStream`'s `TokenTree`s.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7066,"byte_end":7116,"line_start":187,"line_end":187,"column_start":5,"column_end":55}},{"value":"/ The iteration is \"shallow\", e.g., the iterator doesn't recurse into delimited groups,","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7121,"byte_end":7210,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/ and returns whole groups as token trees.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7215,"byte_end":7259,"line_start":189,"line_end":189,"column_start":5,"column_end":49}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7285,"byte_end":7341,"line_start":191,"line_end":191,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107915,"byte_end":107920,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"quote","qualname":"::quote::quote","value":"fn (stream: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Quote a `TokenStream` into a `TokenStream`.\n This is the actual implementation of the `quote!()` proc macro.","sig":null,"attributes":[{"value":"/ Quote a `TokenStream` into a `TokenStream`.","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107666,"byte_end":107713,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/ This is the actual implementation of the `quote!()` proc macro.","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107714,"byte_end":107781,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107782,"byte_end":107785,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ It is loaded by the compiler in `register_builtin_macros`.","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107786,"byte_end":107848,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"unstable(feature = \"proc_macro_quote\", issue = \"54722\")","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":107849,"byte_end":107907,"line_start":63,"line_end":63,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"src/libproc_macro/quote.rs","byte_start":111106,"byte_end":111116,"line_start":138,"line_end":138,"column_start":8,"column_end":18},"name":"quote_span","qualname":"::quote::quote_span","value":"fn (_: Span) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Quote a `Span` into a `TokenStream`.\n This is needed to implement a custom quoter.\n","sig":null,"attributes":[{"value":"/ Quote a `Span` into a `TokenStream`.","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":110950,"byte_end":110990,"line_start":135,"line_end":135,"column_start":1,"column_end":41}},{"value":"/ This is needed to implement a custom quoter.","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":110991,"byte_end":111039,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"unstable(feature = \"proc_macro_quote\", issue = \"54722\")","span":{"file_name":"src/libproc_macro/quote.rs","byte_start":111040,"byte_end":111098,"line_start":137,"line_end":137,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9075,"byte_end":9079,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"Span","qualname":"::Span","value":"","parent":null,"children":[],"decl_id":null,"docs":" A region of source code, along with macro expansion information.\n","sig":null,"attributes":[{"value":"/ A region of source code, along with macro expansion information.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":8915,"byte_end":8983,"line_start":236,"line_end":236,"column_start":1,"column_end":69}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":8984,"byte_end":9040,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9796,"byte_end":9804,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"def_site","qualname":"<Span>::def_site","value":"fn () -> Span","parent":null,"children":[],"decl_id":null,"docs":" A span that resolves at the macro definition site.\n","sig":null,"attributes":[{"value":"/ A span that resolves at the macro definition site.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9664,"byte_end":9718,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"unstable(feature = \"proc_macro_def_site\", issue = \"54724\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9723,"byte_end":9784,"line_start":259,"line_end":259,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10244,"byte_end":10253,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"call_site","qualname":"<Span>::call_site","value":"fn () -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span of the invocation of the current procedural macro.\n Identifiers created with this span will be resolved as if they were written\n directly at the macro call location (call-site hygiene) and other code\n at the macro call site will be able to refer to them as well.\n","sig":null,"attributes":[{"value":"/ The span of the invocation of the current procedural macro.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9875,"byte_end":9938,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ Identifiers created with this span will be resolved as if they were written","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9943,"byte_end":10022,"line_start":265,"line_end":265,"column_start":5,"column_end":84}},{"value":"/ directly at the macro call location (call-site hygiene) and other code","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10027,"byte_end":10101,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ at the macro call site will be able to refer to them as well.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10106,"byte_end":10171,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10176,"byte_end":10232,"line_start":268,"line_end":268,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10669,"byte_end":10679,"line_start":278,"line_end":278,"column_start":12,"column_end":22},"name":"mixed_site","qualname":"<Span>::mixed_site","value":"fn () -> Span","parent":null,"children":[],"decl_id":null,"docs":" A span that represents `macro_rules` hygiene, and sometimes resolves at the macro\n definition site (local variables, labels, `$crate`) and sometimes at the macro\n call site (everything else).\n The span location is taken from the call-site.\n","sig":null,"attributes":[{"value":"/ A span that represents `macro_rules` hygiene, and sometimes resolves at the macro","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10325,"byte_end":10410,"line_start":273,"line_end":273,"column_start":5,"column_end":90}},{"value":"/ definition site (local variables, labels, `$crate`) and sometimes at the macro","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10415,"byte_end":10497,"line_start":274,"line_end":274,"column_start":5,"column_end":87}},{"value":"/ call site (everything else).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10502,"byte_end":10534,"line_start":275,"line_end":275,"column_start":5,"column_end":37}},{"value":"/ The span location is taken from the call-site.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10539,"byte_end":10589,"line_start":276,"line_end":276,"column_start":5,"column_end":55}},{"value":"unstable(feature = \"proc_macro_mixed_site\", issue = \"65049\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10594,"byte_end":10657,"line_start":277,"line_end":277,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10883,"byte_end":10894,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"source_file","qualname":"<Span>::source_file","value":"fn (&self) -> SourceFile","parent":null,"children":[],"decl_id":null,"docs":" The original source file into which this span points.\n","sig":null,"attributes":[{"value":"/ The original source file into which this span points.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10752,"byte_end":10809,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10814,"byte_end":10871,"line_start":283,"line_end":283,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11159,"byte_end":11165,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"parent","qualname":"<Span>::parent","value":"fn (&self) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" The `Span` for the tokens in the previous macro expansion from which\n `self` was generated from, if any.\n","sig":null,"attributes":[{"value":"/ The `Span` for the tokens in the previous macro expansion from which","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":10970,"byte_end":11042,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ `self` was generated from, if any.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11047,"byte_end":11085,"line_start":289,"line_end":289,"column_start":5,"column_end":43}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11090,"byte_end":11147,"line_start":290,"line_end":290,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11503,"byte_end":11509,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"source","qualname":"<Span>::source","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span for the origin source code that `self` was generated from. If\n this `Span` wasn't generated from other macro expansions then the return\n value is the same as `*self`.\n","sig":null,"attributes":[{"value":"/ The span for the origin source code that `self` was generated from. If","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11236,"byte_end":11310,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ this `Span` wasn't generated from other macro expansions then the return","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11315,"byte_end":11391,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ value is the same as `*self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11396,"byte_end":11429,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11434,"byte_end":11491,"line_start":298,"line_end":298,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11709,"byte_end":11714,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"start","qualname":"<Span>::start","value":"fn (&self) -> LineColumn","parent":null,"children":[],"decl_id":null,"docs":" Gets the starting line/column in the source file for this span.\n","sig":null,"attributes":[{"value":"/ Gets the starting line/column in the source file for this span.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11568,"byte_end":11635,"line_start":303,"line_end":303,"column_start":5,"column_end":72}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11640,"byte_end":11697,"line_start":304,"line_end":304,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11911,"byte_end":11914,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"end","qualname":"<Span>::end","value":"fn (&self) -> LineColumn","parent":null,"children":[],"decl_id":null,"docs":" Gets the ending line/column in the source file for this span.\n","sig":null,"attributes":[{"value":"/ Gets the ending line/column in the source file for this span.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11772,"byte_end":11837,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11842,"byte_end":11899,"line_start":310,"line_end":310,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12178,"byte_end":12182,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"join","qualname":"<Span>::join","value":"fn (&self, other: Span) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new span encompassing `self` and `other`.","sig":null,"attributes":[{"value":"/ Creates a new span encompassing `self` and `other`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":11970,"byte_end":12025,"line_start":315,"line_end":315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12030,"byte_end":12033,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` and `other` are from different files.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12038,"byte_end":12104,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12109,"byte_end":12166,"line_start":318,"line_end":318,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12479,"byte_end":12490,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"resolved_at","qualname":"<Span>::resolved_at","value":"fn (&self, other: Span) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a new span with the same line/column information as `self` but\n that resolves symbols as though it were at `other`.\n","sig":null,"attributes":[{"value":"/ Creates a new span with the same line/column information as `self` but","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12271,"byte_end":12345,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ that resolves symbols as though it were at `other`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12350,"byte_end":12405,"line_start":324,"line_end":324,"column_start":5,"column_end":60}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12410,"byte_end":12467,"line_start":325,"line_end":325,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12776,"byte_end":12786,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"located_at","qualname":"<Span>::located_at","value":"fn (&self, other: Span) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a new span with the same name resolution behavior as `self` but\n with the line/column information of `other`.\n","sig":null,"attributes":[{"value":"/ Creates a new span with the same name resolution behavior as `self` but","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12574,"byte_end":12649,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ with the line/column information of `other`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12654,"byte_end":12702,"line_start":331,"line_end":331,"column_start":5,"column_end":53}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12707,"byte_end":12764,"line_start":332,"line_end":332,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12981,"byte_end":12983,"line_start":339,"line_end":339,"column_start":12,"column_end":14},"name":"eq","qualname":"<Span>::eq","value":"fn (&self, other: &Span) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares to spans to see if they're equal.\n","sig":null,"attributes":[{"value":"/ Compares to spans to see if they're equal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12861,"byte_end":12907,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":12912,"byte_end":12969,"line_start":338,"line_end":338,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13535,"byte_end":13546,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"source_text","qualname":"<Span>::source_text","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the source text behind a span. This preserves the original source\n code, including spaces and comments. It only returns a result if the span\n corresponds to real source code.","sig":null,"attributes":[{"value":"/ Returns the source text behind a span. This preserves the original source","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13052,"byte_end":13129,"line_start":343,"line_end":343,"column_start":5,"column_end":82}},{"value":"/ code, including spaces and comments. It only returns a result if the span","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13134,"byte_end":13211,"line_start":344,"line_end":344,"column_start":5,"column_end":82}},{"value":"/ corresponds to real source code.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13216,"byte_end":13252,"line_start":345,"line_end":345,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13257,"byte_end":13260,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Note: The observable result of a macro should only rely on the tokens and","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13265,"byte_end":13342,"line_start":347,"line_end":347,"column_start":5,"column_end":82}},{"value":"/ not on this source text. The result of this function is a best effort to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13347,"byte_end":13423,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ be used for diagnostics only.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13428,"byte_end":13461,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13466,"byte_end":13523,"line_start":350,"line_end":350,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13633,"byte_end":13638,"line_start":355,"line_end":355,"column_start":24,"column_end":29},"name":"error","qualname":"<Span>::error","value":"fn <T> (self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Diagnostic` with the given `message` at the span\n `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Diagnostic` with the given `message` at the span","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9342,"byte_end":9409,"line_start":248,"line_end":248,"column_start":9,"column_end":76}},{"value":"/ `self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9418,"byte_end":9429,"line_start":249,"line_end":249,"column_start":9,"column_end":20}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9438,"byte_end":9501,"line_start":250,"line_end":250,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13678,"byte_end":13685,"line_start":356,"line_end":356,"column_start":24,"column_end":31},"name":"warning","qualname":"<Span>::warning","value":"fn <T> (self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Diagnostic` with the given `message` at the span\n `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Diagnostic` with the given `message` at the span","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9342,"byte_end":9409,"line_start":248,"line_end":248,"column_start":9,"column_end":76}},{"value":"/ `self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9418,"byte_end":9429,"line_start":249,"line_end":249,"column_start":9,"column_end":20}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9438,"byte_end":9501,"line_start":250,"line_end":250,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13727,"byte_end":13731,"line_start":357,"line_end":357,"column_start":24,"column_end":28},"name":"note","qualname":"<Span>::note","value":"fn <T> (self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Diagnostic` with the given `message` at the span\n `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Diagnostic` with the given `message` at the span","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9342,"byte_end":9409,"line_start":248,"line_end":248,"column_start":9,"column_end":76}},{"value":"/ `self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9418,"byte_end":9429,"line_start":249,"line_end":249,"column_start":9,"column_end":20}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9438,"byte_end":9501,"line_start":250,"line_end":250,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13770,"byte_end":13774,"line_start":358,"line_end":358,"column_start":24,"column_end":28},"name":"help","qualname":"<Span>::help","value":"fn <T> (self, message: T) -> Diagnostic","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Diagnostic` with the given `message` at the span\n `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Diagnostic` with the given `message` at the span","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9342,"byte_end":9409,"line_start":248,"line_end":248,"column_start":9,"column_end":76}},{"value":"/ `self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9418,"byte_end":9429,"line_start":249,"line_end":249,"column_start":9,"column_end":20}},{"value":"unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9438,"byte_end":9501,"line_start":250,"line_end":250,"column_start":9,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2972},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14205,"byte_end":14215,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"LineColumn","qualname":"::LineColumn","value":"LineColumn { line, column }","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974}],"decl_id":null,"docs":" A line-column pair representing the start or end of a `Span`.\n","sig":null,"attributes":[{"value":"/ A line-column pair representing the start or end of a `Span`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14025,"byte_end":14090,"line_start":369,"line_end":369,"column_start":1,"column_end":66}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14091,"byte_end":14148,"line_start":370,"line_end":370,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14380,"byte_end":14384,"line_start":375,"line_end":375,"column_start":9,"column_end":13},"name":"line","qualname":"::LineColumn::line","value":"usize","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" The 1-indexed line in the source file on which the span starts or ends (inclusive).\n","sig":null,"attributes":[{"value":"/ The 1-indexed line in the source file on which the span starts or ends (inclusive).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14222,"byte_end":14309,"line_start":373,"line_end":373,"column_start":5,"column_end":92}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14314,"byte_end":14371,"line_start":374,"line_end":374,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14587,"byte_end":14593,"line_start":379,"line_end":379,"column_start":9,"column_end":15},"name":"column","qualname":"::LineColumn::column","value":"usize","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" The 0-indexed column (in UTF-8 characters) in the source file on which\n the span starts or ends (inclusive).\n","sig":null,"attributes":[{"value":"/ The 0-indexed column (in UTF-8 characters) in the source file on which","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14397,"byte_end":14471,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ the span starts or ends (inclusive).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14476,"byte_end":14516,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14521,"byte_end":14578,"line_start":378,"line_end":378,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2987},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14905,"byte_end":14915,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"SourceFile","qualname":"::SourceFile","value":"","parent":null,"children":[],"decl_id":null,"docs":" The source file of a given `Span`.\n","sig":null,"attributes":[{"value":"/ The source file of a given `Span`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14780,"byte_end":14818,"line_start":387,"line_end":387,"column_start":1,"column_end":39}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14819,"byte_end":14876,"line_start":388,"line_end":388,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15516,"byte_end":15520,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"path","qualname":"<SourceFile>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Gets the path to this source file.","sig":null,"attributes":[{"value":"/ Gets the path to this source file.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14968,"byte_end":15006,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15011,"byte_end":15014,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15019,"byte_end":15031,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/ If the code span associated with this `SourceFile` was generated by an external macro, this","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15036,"byte_end":15131,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ macro, this may not be an actual path on the filesystem. Use [`is_real`] to check.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15136,"byte_end":15222,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15227,"byte_end":15230,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Also note that even if `is_real` returns `true`, if `--remap-path-prefix` was passed on","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15235,"byte_end":15326,"line_start":399,"line_end":399,"column_start":5,"column_end":96}},{"value":"/ the command line, the path as given may not actually be valid.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15331,"byte_end":15397,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15402,"byte_end":15405,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ [`is_real`]: #method.is_real","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15410,"byte_end":15442,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15447,"byte_end":15504,"line_start":403,"line_end":403,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15784,"byte_end":15791,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"is_real","qualname":"<SourceFile>::is_real","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this source file is a real source file, and not generated by an external\n macro's expansion.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this source file is a real source file, and not generated by an external","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15589,"byte_end":15683,"line_start":408,"line_end":408,"column_start":5,"column_end":99}},{"value":"/ macro's expansion.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15688,"byte_end":15710,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":15715,"byte_end":15772,"line_start":410,"line_end":410,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2993},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16933,"byte_end":16938,"line_start":445,"line_end":445,"column_start":5,"column_end":10},"name":"Group","qualname":"::TokenTree::Group","value":"TokenTree::Group(Group)","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" A token stream surrounded by bracket delimiters.\n","sig":null,"attributes":[{"value":"/ A token stream surrounded by bracket delimiters.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16815,"byte_end":16867,"line_start":443,"line_end":443,"column_start":5,"column_end":57}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16872,"byte_end":16928,"line_start":444,"line_end":444,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17092,"byte_end":17097,"line_start":448,"line_end":448,"column_start":5,"column_end":10},"name":"Ident","qualname":"::TokenTree::Ident","value":"TokenTree::Ident(Ident)","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" An identifier.\n","sig":null,"attributes":[{"value":"/ An identifier.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17008,"byte_end":17026,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17031,"byte_end":17087,"line_start":447,"line_end":447,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2999},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17290,"byte_end":17295,"line_start":451,"line_end":451,"column_start":5,"column_end":10},"name":"Punct","qualname":"::TokenTree::Punct","value":"TokenTree::Punct(Punct)","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" A single punctuation character (`+`, `,`, `$`, etc.).\n","sig":null,"attributes":[{"value":"/ A single punctuation character (`+`, `,`, `$`, etc.).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17167,"byte_end":17224,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17229,"byte_end":17285,"line_start":450,"line_end":450,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3002},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17504,"byte_end":17511,"line_start":454,"line_end":454,"column_start":5,"column_end":12},"name":"Literal","qualname":"::TokenTree::Literal","value":"TokenTree::Literal(Literal)","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n","sig":null,"attributes":[{"value":"/ A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17365,"byte_end":17438,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17443,"byte_end":17499,"line_start":453,"line_end":453,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":2992},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16799,"byte_end":16808,"line_start":442,"line_end":442,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::TokenTree","value":"TokenTree::{Group, Ident, Punct, Literal}","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002}],"decl_id":null,"docs":" A single token or a delimited sequence of token trees (e.g., `[1, (), ..]`).\n","sig":null,"attributes":[{"value":"/ A single token or a delimited sequence of token trees (e.g., `[1, (), ..]`).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16635,"byte_end":16715,"line_start":439,"line_end":439,"column_start":1,"column_end":81}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16716,"byte_end":16772,"line_start":440,"line_end":440,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17967,"byte_end":17971,"line_start":466,"line_end":466,"column_start":12,"column_end":16},"name":"span","qualname":"<TokenTree>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this tree, delegating to the `span` method of\n the contained token or a delimited stream.\n","sig":null,"attributes":[{"value":"/ Returns the span of this tree, delegating to the `span` method of","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17774,"byte_end":17843,"line_start":463,"line_end":463,"column_start":5,"column_end":74}},{"value":"/ the contained token or a delimited stream.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17848,"byte_end":17894,"line_start":464,"line_end":464,"column_start":5,"column_end":51}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17899,"byte_end":17955,"line_start":465,"line_end":465,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18563,"byte_end":18571,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"set_span","qualname":"<TokenTree>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for *only this token*.","sig":null,"attributes":[{"value":"/ Configures the span for *only this token*.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18230,"byte_end":18276,"line_start":475,"line_end":475,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18281,"byte_end":18284,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Note that if this token is a `Group` then this method will not configure","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18289,"byte_end":18365,"line_start":477,"line_end":477,"column_start":5,"column_end":81}},{"value":"/ the span of each of the internal tokens, this will simply delegate to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18370,"byte_end":18443,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the `set_span` method of each variant.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18448,"byte_end":18490,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":18495,"byte_end":18551,"line_start":480,"line_end":480,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3007},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21320,"byte_end":21325,"line_start":563,"line_end":563,"column_start":12,"column_end":17},"name":"Group","qualname":"::Group","value":"","parent":null,"children":[],"decl_id":null,"docs":" A delimited token stream.","sig":null,"attributes":[{"value":"/ A delimited token stream.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21114,"byte_end":21143,"line_start":558,"line_end":558,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21144,"byte_end":21147,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ A `Group` internally contains a `TokenStream` which is surrounded by `Delimiter`s.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21148,"byte_end":21234,"line_start":560,"line_end":560,"column_start":1,"column_end":87}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21252,"byte_end":21308,"line_start":562,"line_end":562,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3013},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21778,"byte_end":21789,"line_start":576,"line_end":576,"column_start":5,"column_end":16},"name":"Parenthesis","qualname":"::Delimiter::Parenthesis","value":"Delimiter::Parenthesis","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" `( ... )`\n","sig":null,"attributes":[{"value":"/ `( ... )`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21699,"byte_end":21712,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21717,"byte_end":21773,"line_start":575,"line_end":575,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21874,"byte_end":21879,"line_start":579,"line_end":579,"column_start":5,"column_end":10},"name":"Brace","qualname":"::Delimiter::Brace","value":"Delimiter::Brace","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" `{ ... }`\n","sig":null,"attributes":[{"value":"/ `{ ... }`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21795,"byte_end":21808,"line_start":577,"line_end":577,"column_start":5,"column_end":18}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21813,"byte_end":21869,"line_start":578,"line_end":578,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21964,"byte_end":21971,"line_start":582,"line_end":582,"column_start":5,"column_end":12},"name":"Bracket","qualname":"::Delimiter::Bracket","value":"Delimiter::Bracket","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" `[ ... ]`\n","sig":null,"attributes":[{"value":"/ `[ ... ]`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21885,"byte_end":21898,"line_start":580,"line_end":580,"column_start":5,"column_end":18}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21903,"byte_end":21959,"line_start":581,"line_end":581,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22376,"byte_end":22380,"line_start":589,"line_end":589,"column_start":5,"column_end":9},"name":"None","qualname":"::Delimiter::None","value":"Delimiter::None","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" `Ø ... Ø`\n An implicit delimiter, that may, for example, appear around tokens coming from a\n \"macro variable\" `$var`. It is important to preserve operator priorities in cases like\n `$var * 3` where `$var` is `1 + 2`.\n Implicit delimiters may not survive roundtrip of a token stream through a string.\n","sig":null,"attributes":[{"value":"/ `Ø ... Ø`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21977,"byte_end":21992,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/ An implicit delimiter, that may, for example, appear around tokens coming from a","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21997,"byte_end":22081,"line_start":584,"line_end":584,"column_start":5,"column_end":89}},{"value":"/ \"macro variable\" `$var`. It is important to preserve operator priorities in cases like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22086,"byte_end":22176,"line_start":585,"line_end":585,"column_start":5,"column_end":95}},{"value":"/ `$var * 3` where `$var` is `1 + 2`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22181,"byte_end":22220,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ Implicit delimiters may not survive roundtrip of a token stream through a string.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22225,"byte_end":22310,"line_start":587,"line_end":587,"column_start":5,"column_end":90}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22315,"byte_end":22371,"line_start":588,"line_end":588,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3012},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21683,"byte_end":21692,"line_start":573,"line_end":573,"column_start":10,"column_end":19},"name":"Delimiter","qualname":"::Delimiter","value":"Delimiter::{Parenthesis, Brace, Bracket, None}","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3019}],"decl_id":null,"docs":" Describes how a sequence of token trees is delimited.\n","sig":null,"attributes":[{"value":"/ Describes how a sequence of token trees is delimited.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21514,"byte_end":21571,"line_start":570,"line_end":570,"column_start":1,"column_end":58}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21617,"byte_end":21673,"line_start":572,"line_end":572,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22709,"byte_end":22712,"line_start":599,"line_end":599,"column_start":12,"column_end":15},"name":"new","qualname":"<Group>::new","value":"fn (delimiter: Delimiter, stream: TokenStream) -> Group","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Group` with the given delimiter and token stream.","sig":null,"attributes":[{"value":"/ Creates a new `Group` with the given delimiter and token stream.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22402,"byte_end":22470,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22475,"byte_end":22478,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This constructor will set the span for this group to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22483,"byte_end":22539,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/ `Span::call_site()`. To change the span you can use the `set_span`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22544,"byte_end":22614,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ method below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22619,"byte_end":22636,"line_start":597,"line_end":597,"column_start":5,"column_end":22}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22641,"byte_end":22697,"line_start":598,"line_end":598,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22955,"byte_end":22964,"line_start":605,"line_end":605,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Group>::delimiter","value":"fn (&self) -> Delimiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the delimiter of this `Group`\n","sig":null,"attributes":[{"value":"/ Returns the delimiter of this `Group`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22841,"byte_end":22882,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22887,"byte_end":22943,"line_start":604,"line_end":604,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23280,"byte_end":23286,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"stream","qualname":"<Group>::stream","value":"fn (&self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the `TokenStream` of tokens that are delimited in this `Group`.","sig":null,"attributes":[{"value":"/ Returns the `TokenStream` of tokens that are delimited in this `Group`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23025,"byte_end":23100,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23105,"byte_end":23108,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Note that the returned token stream does not include the delimiter","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23113,"byte_end":23183,"line_start":611,"line_end":611,"column_start":5,"column_end":75}},{"value":"/ returned above.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23188,"byte_end":23207,"line_start":612,"line_end":612,"column_start":5,"column_end":24}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23212,"byte_end":23268,"line_start":613,"line_end":613,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23630,"byte_end":23634,"line_start":626,"line_end":626,"column_start":12,"column_end":16},"name":"span","qualname":"<Group>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for the delimiters of this token stream, spanning the\n entire `Group`.","sig":null,"attributes":[{"value":"/ Returns the span for the delimiters of this token stream, spanning the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23359,"byte_end":23433,"line_start":618,"line_end":618,"column_start":5,"column_end":79}},{"value":"/ entire `Group`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23438,"byte_end":23457,"line_start":619,"line_end":619,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23462,"byte_end":23465,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23470,"byte_end":23481,"line_start":621,"line_end":621,"column_start":5,"column_end":16}},{"value":"/ pub fn span(&self) -> Span {","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23486,"byte_end":23518,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/            ^^^^^^^","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23523,"byte_end":23545,"line_start":623,"line_end":623,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23550,"byte_end":23557,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23562,"byte_end":23618,"line_start":625,"line_end":625,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23938,"byte_end":23947,"line_start":637,"line_end":637,"column_start":12,"column_end":21},"name":"span_open","qualname":"<Group>::span_open","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the opening delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the opening delimiter of this group.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23691,"byte_end":23760,"line_start":630,"line_end":630,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23765,"byte_end":23768,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23773,"byte_end":23784,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ pub fn span_open(&self) -> Span {","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23789,"byte_end":23826,"line_start":633,"line_end":633,"column_start":5,"column_end":42}},{"value":"/                 ^","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23831,"byte_end":23852,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23857,"byte_end":23864,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":23869,"byte_end":23926,"line_start":636,"line_end":636,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24264,"byte_end":24274,"line_start":648,"line_end":648,"column_start":12,"column_end":22},"name":"span_close","qualname":"<Group>::span_close","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the closing delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the closing delimiter of this group.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24009,"byte_end":24078,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24083,"byte_end":24086,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24091,"byte_end":24102,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ pub fn span_close(&self) -> Span {","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24107,"byte_end":24145,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/                        ^","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24150,"byte_end":24178,"line_start":645,"line_end":645,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24183,"byte_end":24190,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24195,"byte_end":24252,"line_start":647,"line_end":647,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24711,"byte_end":24719,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Group>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for this `Group`'s delimiters, but not its internal\n tokens.","sig":null,"attributes":[{"value":"/ Configures the span for this `Group`'s delimiters, but not its internal","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24337,"byte_end":24412,"line_start":652,"line_end":652,"column_start":5,"column_end":80}},{"value":"/ tokens.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24417,"byte_end":24428,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24433,"byte_end":24436,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ This method will **not** set the span of all the internal tokens spanned","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24441,"byte_end":24517,"line_start":655,"line_end":655,"column_start":5,"column_end":81}},{"value":"/ by this group, but rather it will only set the span of the delimiter","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24522,"byte_end":24594,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ tokens at the level of the `Group`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24599,"byte_end":24638,"line_start":657,"line_end":657,"column_start":5,"column_end":44}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":24643,"byte_end":24699,"line_start":658,"line_end":658,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26161,"byte_end":26166,"line_start":700,"line_end":700,"column_start":12,"column_end":17},"name":"Punct","qualname":"::Punct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An `Punct` is an single punctuation character like `+`, `-` or `#`.","sig":null,"attributes":[{"value":"/ An `Punct` is an single punctuation character like `+`, `-` or `#`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25868,"byte_end":25939,"line_start":694,"line_end":694,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25940,"byte_end":25943,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Multi-character operators like `+=` are represented as two instances of `Punct` with different","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25944,"byte_end":26042,"line_start":696,"line_end":696,"column_start":1,"column_end":99}},{"value":"/ forms of `Spacing` returned.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26043,"byte_end":26075,"line_start":697,"line_end":697,"column_start":1,"column_end":33}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26076,"byte_end":26132,"line_start":698,"line_end":698,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3038},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26713,"byte_end":26718,"line_start":714,"line_end":714,"column_start":5,"column_end":10},"name":"Alone","qualname":"::Spacing::Alone","value":"Spacing::Alone","parent":{"krate":0,"index":3037},"children":[],"decl_id":null,"docs":" e.g., `+` is `Alone` in `+ =`, `+ident` or `+()`.\n","sig":null,"attributes":[{"value":"/ e.g., `+` is `Alone` in `+ =`, `+ident` or `+()`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26594,"byte_end":26647,"line_start":712,"line_end":712,"column_start":5,"column_end":58}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26652,"byte_end":26708,"line_start":713,"line_end":713,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3040},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26924,"byte_end":26929,"line_start":718,"line_end":718,"column_start":5,"column_end":10},"name":"Joint","qualname":"::Spacing::Joint","value":"Spacing::Joint","parent":{"krate":0,"index":3037},"children":[],"decl_id":null,"docs":" e.g., `+` is `Joint` in `+=` or `'#`.\n Additionally, single quote `'` can join with identifiers to form lifetimes `'ident`.\n","sig":null,"attributes":[{"value":"/ e.g., `+` is `Joint` in `+=` or `'#`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26724,"byte_end":26765,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ Additionally, single quote `'` can join with identifiers to form lifetimes `'ident`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26770,"byte_end":26858,"line_start":716,"line_end":716,"column_start":5,"column_end":93}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26863,"byte_end":26919,"line_start":717,"line_end":717,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3037},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26580,"byte_end":26587,"line_start":711,"line_end":711,"column_start":10,"column_end":17},"name":"Spacing","qualname":"::Spacing","value":"Spacing::{Alone, Joint}","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3040}],"decl_id":null,"docs":" Whether an `Punct` is followed immediately by another `Punct` or\n followed by another token or whitespace.\n","sig":null,"attributes":[{"value":"/ Whether an `Punct` is followed immediately by another `Punct` or","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26355,"byte_end":26423,"line_start":707,"line_end":707,"column_start":1,"column_end":69}},{"value":"/ followed by another token or whitespace.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26424,"byte_end":26468,"line_start":708,"line_end":708,"column_start":1,"column_end":45}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26514,"byte_end":26570,"line_start":710,"line_end":710,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27382,"byte_end":27385,"line_start":729,"line_end":729,"column_start":12,"column_end":15},"name":"new","qualname":"<Punct>::new","value":"fn (ch: char, spacing: Spacing) -> Punct","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Punct` from the given character and spacing.\n The `ch` argument must be a valid punctuation character permitted by the language,\n otherwise the function will panic.","sig":null,"attributes":[{"value":"/ Creates a new `Punct` from the given character and spacing.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26951,"byte_end":27014,"line_start":722,"line_end":722,"column_start":5,"column_end":68}},{"value":"/ The `ch` argument must be a valid punctuation character permitted by the language,","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27019,"byte_end":27105,"line_start":723,"line_end":723,"column_start":5,"column_end":91}},{"value":"/ otherwise the function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27110,"byte_end":27148,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27153,"byte_end":27156,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ The returned `Punct` will have the default span of `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27161,"byte_end":27235,"line_start":726,"line_end":726,"column_start":5,"column_end":79}},{"value":"/ which can be further configured with the `set_span` method below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27240,"byte_end":27309,"line_start":727,"line_end":727,"column_start":5,"column_end":74}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27314,"byte_end":27370,"line_start":728,"line_end":728,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27626,"byte_end":27633,"line_start":735,"line_end":735,"column_start":12,"column_end":19},"name":"as_char","qualname":"<Punct>::as_char","value":"fn (&self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of this punctuation character as `char`.\n","sig":null,"attributes":[{"value":"/ Returns the value of this punctuation character as `char`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27491,"byte_end":27553,"line_start":733,"line_end":733,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27558,"byte_end":27614,"line_start":734,"line_end":734,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28100,"byte_end":28107,"line_start":744,"line_end":744,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Punct>::spacing","value":"fn (&self) -> Spacing","parent":null,"children":[],"decl_id":null,"docs":" Returns the spacing of this punctuation character, indicating whether it's immediately\n followed by another `Punct` in the token stream, so they can potentially be combined into\n a multi-character operator (`Joint`), or it's followed by some other token or whitespace\n (`Alone`) so the operator has certainly ended.\n","sig":null,"attributes":[{"value":"/ Returns the spacing of this punctuation character, indicating whether it's immediately","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27687,"byte_end":27777,"line_start":739,"line_end":739,"column_start":5,"column_end":95}},{"value":"/ followed by another `Punct` in the token stream, so they can potentially be combined into","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27782,"byte_end":27875,"line_start":740,"line_end":740,"column_start":5,"column_end":98}},{"value":"/ a multi-character operator (`Joint`), or it's followed by some other token or whitespace","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27880,"byte_end":27972,"line_start":741,"line_end":741,"column_start":5,"column_end":97}},{"value":"/ (`Alone`) so the operator has certainly ended.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":27977,"byte_end":28027,"line_start":742,"line_end":742,"column_start":5,"column_end":55}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28032,"byte_end":28088,"line_start":743,"line_end":743,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28289,"byte_end":28293,"line_start":750,"line_end":750,"column_start":12,"column_end":16},"name":"span","qualname":"<Punct>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Returns the span for this punctuation character.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28164,"byte_end":28216,"line_start":748,"line_end":748,"column_start":5,"column_end":57}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28221,"byte_end":28277,"line_start":749,"line_end":749,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28477,"byte_end":28485,"line_start":756,"line_end":756,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Punct>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Configure the span for this punctuation character.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28350,"byte_end":28404,"line_start":754,"line_end":754,"column_start":5,"column_end":59}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28409,"byte_end":28465,"line_start":755,"line_end":755,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3053},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29677,"byte_end":29682,"line_start":793,"line_end":793,"column_start":12,"column_end":17},"name":"Ident","qualname":"::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier (`ident`).\n","sig":null,"attributes":[{"value":"/ An identifier (`ident`).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29563,"byte_end":29591,"line_start":790,"line_end":790,"column_start":1,"column_end":29}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29609,"byte_end":29665,"line_start":792,"line_end":792,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30912,"byte_end":30915,"line_start":816,"line_end":816,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"fn (string: &str, span: Span) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Ident` with the given `string` as well as the specified\n `span`.\n The `string` argument must be a valid identifier permitted by the\n language, otherwise the function will panic.","sig":null,"attributes":[{"value":"/ Creates a new `Ident` with the given `string` as well as the specified","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29725,"byte_end":29799,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ `span`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29804,"byte_end":29815,"line_start":797,"line_end":797,"column_start":5,"column_end":16}},{"value":"/ The `string` argument must be a valid identifier permitted by the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29820,"byte_end":29889,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29894,"byte_end":29942,"line_start":799,"line_end":799,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29947,"byte_end":29950,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Note that `span`, currently in rustc, configures the hygiene information","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29955,"byte_end":30031,"line_start":801,"line_end":801,"column_start":5,"column_end":81}},{"value":"/ for this identifier.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30036,"byte_end":30060,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30065,"byte_end":30068,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ As of this time `Span::call_site()` explicitly opts-in to \"call-site\" hygiene","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30073,"byte_end":30154,"line_start":804,"line_end":804,"column_start":5,"column_end":86}},{"value":"/ meaning that identifiers created with this span will be resolved as if they were written","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30159,"byte_end":30251,"line_start":805,"line_end":805,"column_start":5,"column_end":97}},{"value":"/ directly at the location of the macro call, and other code at the macro call site will be","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30256,"byte_end":30349,"line_start":806,"line_end":806,"column_start":5,"column_end":98}},{"value":"/ able to refer to them as well.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30354,"byte_end":30388,"line_start":807,"line_end":807,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30393,"byte_end":30396,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Later spans like `Span::def_site()` will allow to opt-in to \"definition-site\" hygiene","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30401,"byte_end":30490,"line_start":809,"line_end":809,"column_start":5,"column_end":94}},{"value":"/ meaning that identifiers created with this span will be resolved at the location of the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30495,"byte_end":30586,"line_start":810,"line_end":810,"column_start":5,"column_end":96}},{"value":"/ macro definition and other code at the macro call site will not be able to refer to them.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30591,"byte_end":30684,"line_start":811,"line_end":811,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30689,"byte_end":30692,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Due to the current importance of hygiene this constructor, unlike other","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30697,"byte_end":30772,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ tokens, requires a `Span` to be specified at construction.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30777,"byte_end":30839,"line_start":814,"line_end":814,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":30844,"byte_end":30900,"line_start":815,"line_end":815,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31175,"byte_end":31182,"line_start":822,"line_end":822,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<Ident>::new_raw","value":"fn (string: &str, span: Span) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Same as `Ident::new`, but creates a raw identifier (`r#ident`).\n","sig":null,"attributes":[{"value":"/ Same as `Ident::new`, but creates a raw identifier (`r#ident`).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31029,"byte_end":31096,"line_start":820,"line_end":820,"column_start":5,"column_end":72}},{"value":"unstable(feature = \"proc_macro_raw_ident\", issue = \"54723\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31101,"byte_end":31163,"line_start":821,"line_end":821,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31466,"byte_end":31470,"line_start":829,"line_end":829,"column_start":12,"column_end":16},"name":"span","qualname":"<Ident>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this `Ident`, encompassing the entire string returned\n by `as_str`.\n","sig":null,"attributes":[{"value":"/ Returns the span of this `Ident`, encompassing the entire string returned","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31295,"byte_end":31372,"line_start":826,"line_end":826,"column_start":5,"column_end":82}},{"value":"/ by `as_str`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31377,"byte_end":31393,"line_start":827,"line_end":827,"column_start":5,"column_end":21}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31398,"byte_end":31454,"line_start":828,"line_end":828,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31679,"byte_end":31687,"line_start":835,"line_end":835,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Ident>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span of this `Ident`, possibly changing its hygiene context.\n","sig":null,"attributes":[{"value":"/ Configures the span of this `Ident`, possibly changing its hygiene context.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31527,"byte_end":31606,"line_start":833,"line_end":833,"column_start":5,"column_end":84}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31611,"byte_end":31667,"line_start":834,"line_end":834,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33086,"byte_end":33093,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"Literal","qualname":"::Literal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A literal string (`\"hello\"`), byte string (`b\"hello\"`),\n character (`'a'`), byte character (`b'a'`), an integer or floating point number\n with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).\n Boolean literals like `true` and `false` do not belong here, they are `Ident`s.\n","sig":null,"attributes":[{"value":"/ A literal string (`\"hello\"`), byte string (`b\"hello\"`),","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32713,"byte_end":32772,"line_start":868,"line_end":868,"column_start":1,"column_end":60}},{"value":"/ character (`'a'`), byte character (`b'a'`), an integer or floating point number","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32773,"byte_end":32856,"line_start":869,"line_end":869,"column_start":1,"column_end":84}},{"value":"/ with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32857,"byte_end":32916,"line_start":870,"line_end":870,"column_start":1,"column_end":60}},{"value":"/ Boolean literals like `true` and `false` do not belong here, they are `Ident`s.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32917,"byte_end":33000,"line_start":871,"line_end":871,"column_start":1,"column_end":84}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33018,"byte_end":33074,"line_start":873,"line_end":873,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35204,"byte_end":35215,"line_start":920,"line_end":920,"column_start":9,"column_end":20},"name":"u8_suffixed","qualname":"<Literal>::u8_suffixed","value":"fn (n: u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35231,"byte_end":35243,"line_start":921,"line_end":921,"column_start":9,"column_end":21},"name":"u16_suffixed","qualname":"<Literal>::u16_suffixed","value":"fn (n: u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35260,"byte_end":35272,"line_start":922,"line_end":922,"column_start":9,"column_end":21},"name":"u32_suffixed","qualname":"<Literal>::u32_suffixed","value":"fn (n: u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35289,"byte_end":35301,"line_start":923,"line_end":923,"column_start":9,"column_end":21},"name":"u64_suffixed","qualname":"<Literal>::u64_suffixed","value":"fn (n: u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35318,"byte_end":35331,"line_start":924,"line_end":924,"column_start":9,"column_end":22},"name":"u128_suffixed","qualname":"<Literal>::u128_suffixed","value":"fn (n: u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35349,"byte_end":35363,"line_start":925,"line_end":925,"column_start":9,"column_end":23},"name":"usize_suffixed","qualname":"<Literal>::usize_suffixed","value":"fn (n: usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35382,"byte_end":35393,"line_start":926,"line_end":926,"column_start":9,"column_end":20},"name":"i8_suffixed","qualname":"<Literal>::i8_suffixed","value":"fn (n: i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35409,"byte_end":35421,"line_start":927,"line_end":927,"column_start":9,"column_end":21},"name":"i16_suffixed","qualname":"<Literal>::i16_suffixed","value":"fn (n: i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35438,"byte_end":35450,"line_start":928,"line_end":928,"column_start":9,"column_end":21},"name":"i32_suffixed","qualname":"<Literal>::i32_suffixed","value":"fn (n: i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35467,"byte_end":35479,"line_start":929,"line_end":929,"column_start":9,"column_end":21},"name":"i64_suffixed","qualname":"<Literal>::i64_suffixed","value":"fn (n: i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35496,"byte_end":35509,"line_start":930,"line_end":930,"column_start":9,"column_end":22},"name":"i128_suffixed","qualname":"<Literal>::i128_suffixed","value":"fn (n: i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35527,"byte_end":35541,"line_start":931,"line_end":931,"column_start":9,"column_end":23},"name":"isize_suffixed","qualname":"<Literal>::isize_suffixed","value":"fn (n: isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33211,"byte_end":33279,"line_start":878,"line_end":878,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33288,"byte_end":33291,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33300,"byte_end":33370,"line_start":880,"line_end":880,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33379,"byte_end":33449,"line_start":881,"line_end":881,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33458,"byte_end":33487,"line_start":882,"line_end":882,"column_start":9,"column_end":38}},{"value":"/ Literals created from negative numbers may not survive round-trips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33496,"byte_end":33574,"line_start":883,"line_end":883,"column_start":9,"column_end":87}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33583,"byte_end":33673,"line_start":884,"line_end":884,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33682,"byte_end":33685,"line_start":885,"line_end":885,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33694,"byte_end":33763,"line_start":886,"line_end":886,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33772,"byte_end":33843,"line_start":887,"line_end":887,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33852,"byte_end":33862,"line_start":888,"line_end":888,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":33871,"byte_end":33927,"line_start":889,"line_end":889,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35598,"byte_end":35611,"line_start":935,"line_end":935,"column_start":9,"column_end":22},"name":"u8_unsuffixed","qualname":"<Literal>::u8_unsuffixed","value":"fn (n: u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35627,"byte_end":35641,"line_start":936,"line_end":936,"column_start":9,"column_end":23},"name":"u16_unsuffixed","qualname":"<Literal>::u16_unsuffixed","value":"fn (n: u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35658,"byte_end":35672,"line_start":937,"line_end":937,"column_start":9,"column_end":23},"name":"u32_unsuffixed","qualname":"<Literal>::u32_unsuffixed","value":"fn (n: u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35689,"byte_end":35703,"line_start":938,"line_end":938,"column_start":9,"column_end":23},"name":"u64_unsuffixed","qualname":"<Literal>::u64_unsuffixed","value":"fn (n: u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35720,"byte_end":35735,"line_start":939,"line_end":939,"column_start":9,"column_end":24},"name":"u128_unsuffixed","qualname":"<Literal>::u128_unsuffixed","value":"fn (n: u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35753,"byte_end":35769,"line_start":940,"line_end":940,"column_start":9,"column_end":25},"name":"usize_unsuffixed","qualname":"<Literal>::usize_unsuffixed","value":"fn (n: usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35788,"byte_end":35801,"line_start":941,"line_end":941,"column_start":9,"column_end":22},"name":"i8_unsuffixed","qualname":"<Literal>::i8_unsuffixed","value":"fn (n: i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35817,"byte_end":35831,"line_start":942,"line_end":942,"column_start":9,"column_end":23},"name":"i16_unsuffixed","qualname":"<Literal>::i16_unsuffixed","value":"fn (n: i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35848,"byte_end":35862,"line_start":943,"line_end":943,"column_start":9,"column_end":23},"name":"i32_unsuffixed","qualname":"<Literal>::i32_unsuffixed","value":"fn (n: i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35879,"byte_end":35893,"line_start":944,"line_end":944,"column_start":9,"column_end":23},"name":"i64_unsuffixed","qualname":"<Literal>::i64_unsuffixed","value":"fn (n: i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35910,"byte_end":35925,"line_start":945,"line_end":945,"column_start":9,"column_end":24},"name":"i128_unsuffixed","qualname":"<Literal>::i128_unsuffixed","value":"fn (n: i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35943,"byte_end":35959,"line_start":946,"line_end":946,"column_start":9,"column_end":25},"name":"isize_unsuffixed","qualname":"<Literal>::isize_unsuffixed","value":"fn (n: isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34180,"byte_end":34250,"line_start":898,"line_end":898,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34259,"byte_end":34262,"line_start":899,"line_end":899,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34271,"byte_end":34338,"line_start":900,"line_end":900,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34347,"byte_end":34411,"line_start":901,"line_end":901,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34420,"byte_end":34478,"line_start":902,"line_end":902,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34487,"byte_end":34536,"line_start":903,"line_end":903,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34545,"byte_end":34578,"line_start":904,"line_end":904,"column_start":9,"column_end":42}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34587,"byte_end":34663,"line_start":905,"line_end":905,"column_start":9,"column_end":85}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34672,"byte_end":34762,"line_start":906,"line_end":906,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34771,"byte_end":34774,"line_start":907,"line_end":907,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34783,"byte_end":34852,"line_start":908,"line_end":908,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34861,"byte_end":34932,"line_start":909,"line_end":909,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34941,"byte_end":34951,"line_start":910,"line_end":910,"column_start":9,"column_end":19}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":34960,"byte_end":35016,"line_start":911,"line_end":911,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36693,"byte_end":36707,"line_start":962,"line_end":962,"column_start":12,"column_end":26},"name":"f32_unsuffixed","qualname":"<Literal>::f32_unsuffixed","value":"fn (n: f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35981,"byte_end":36033,"line_start":949,"line_end":949,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36038,"byte_end":36041,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36046,"byte_end":36122,"line_start":951,"line_end":951,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36127,"byte_end":36200,"line_start":952,"line_end":952,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36205,"byte_end":36273,"line_start":953,"line_end":953,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36278,"byte_end":36354,"line_start":954,"line_end":954,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36359,"byte_end":36449,"line_start":955,"line_end":955,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36454,"byte_end":36457,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36462,"byte_end":36474,"line_start":957,"line_end":957,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36479,"byte_end":36482,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36487,"byte_end":36553,"line_start":959,"line_end":959,"column_start":5,"column_end":71}},{"value":"/ example if it is infinity or NaN this function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36558,"byte_end":36620,"line_start":960,"line_end":960,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36625,"byte_end":36681,"line_start":961,"line_end":961,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37622,"byte_end":37634,"line_start":983,"line_end":983,"column_start":12,"column_end":24},"name":"f32_suffixed","qualname":"<Literal>::f32_suffixed","value":"fn (n: f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36893,"byte_end":36943,"line_start":969,"line_end":969,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36948,"byte_end":36951,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f32` where the value","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":36956,"byte_end":37028,"line_start":971,"line_end":971,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f32` is the suffix of","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37033,"byte_end":37108,"line_start":972,"line_end":972,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f32` in the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37113,"byte_end":37184,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ compiler.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37189,"byte_end":37202,"line_start":974,"line_end":974,"column_start":5,"column_end":18}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37207,"byte_end":37283,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37288,"byte_end":37378,"line_start":976,"line_end":976,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37383,"byte_end":37386,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37391,"byte_end":37403,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37408,"byte_end":37411,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37416,"byte_end":37482,"line_start":980,"line_end":980,"column_start":5,"column_end":71}},{"value":"/ example if it is infinity or NaN this function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37487,"byte_end":37549,"line_start":981,"line_end":981,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37554,"byte_end":37610,"line_start":982,"line_end":982,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38530,"byte_end":38544,"line_start":1003,"line_end":1003,"column_start":12,"column_end":26},"name":"f64_unsuffixed","qualname":"<Literal>::f64_unsuffixed","value":"fn (n: f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37818,"byte_end":37870,"line_start":990,"line_end":990,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37875,"byte_end":37878,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37883,"byte_end":37959,"line_start":992,"line_end":992,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":37964,"byte_end":38037,"line_start":993,"line_end":993,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38042,"byte_end":38110,"line_start":994,"line_end":994,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38115,"byte_end":38191,"line_start":995,"line_end":995,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38196,"byte_end":38286,"line_start":996,"line_end":996,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38291,"byte_end":38294,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38299,"byte_end":38311,"line_start":998,"line_end":998,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38316,"byte_end":38319,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38324,"byte_end":38390,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/ example if it is infinity or NaN this function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38395,"byte_end":38457,"line_start":1001,"line_end":1001,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38462,"byte_end":38518,"line_start":1002,"line_end":1002,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39459,"byte_end":39471,"line_start":1024,"line_end":1024,"column_start":12,"column_end":24},"name":"f64_suffixed","qualname":"<Literal>::f64_suffixed","value":"fn (n: f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38730,"byte_end":38780,"line_start":1010,"line_end":1010,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38785,"byte_end":38788,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f64` where the value","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38793,"byte_end":38865,"line_start":1012,"line_end":1012,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f64` is the suffix of","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38870,"byte_end":38945,"line_start":1013,"line_end":1013,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f64` in the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":38950,"byte_end":39021,"line_start":1014,"line_end":1014,"column_start":5,"column_end":76}},{"value":"/ compiler.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39026,"byte_end":39039,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39044,"byte_end":39120,"line_start":1016,"line_end":1016,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and positive literal).","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39125,"byte_end":39215,"line_start":1017,"line_end":1017,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39220,"byte_end":39223,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39228,"byte_end":39240,"line_start":1019,"line_end":1019,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39245,"byte_end":39248,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39253,"byte_end":39319,"line_start":1021,"line_end":1021,"column_start":5,"column_end":71}},{"value":"/ example if it is infinity or NaN this function will panic.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39324,"byte_end":39386,"line_start":1022,"line_end":1022,"column_start":5,"column_end":67}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39391,"byte_end":39447,"line_start":1023,"line_end":1023,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39747,"byte_end":39753,"line_start":1033,"line_end":1033,"column_start":12,"column_end":18},"name":"string","qualname":"<Literal>::string","value":"fn (string: &str) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" String literal.\n","sig":null,"attributes":[{"value":"/ String literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39655,"byte_end":39674,"line_start":1031,"line_end":1031,"column_start":5,"column_end":24}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39679,"byte_end":39735,"line_start":1032,"line_end":1032,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39944,"byte_end":39953,"line_start":1039,"line_end":1039,"column_start":12,"column_end":21},"name":"character","qualname":"<Literal>::character","value":"fn (ch: char) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Character literal.\n","sig":null,"attributes":[{"value":"/ Character literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39849,"byte_end":39871,"line_start":1037,"line_end":1037,"column_start":5,"column_end":27}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":39876,"byte_end":39932,"line_start":1038,"line_end":1038,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40141,"byte_end":40152,"line_start":1045,"line_end":1045,"column_start":12,"column_end":23},"name":"byte_string","qualname":"<Literal>::byte_string","value":"fn (bytes: &[u8]) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Byte string literal.\n","sig":null,"attributes":[{"value":"/ Byte string literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40044,"byte_end":40068,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40073,"byte_end":40129,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40372,"byte_end":40376,"line_start":1051,"line_end":1051,"column_start":12,"column_end":16},"name":"span","qualname":"<Literal>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span encompassing this literal.\n","sig":null,"attributes":[{"value":"/ Returns the span encompassing this literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40252,"byte_end":40299,"line_start":1049,"line_end":1049,"column_start":5,"column_end":52}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40304,"byte_end":40360,"line_start":1050,"line_end":1050,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40558,"byte_end":40566,"line_start":1057,"line_end":1057,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Literal>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the span associated for this literal.\n","sig":null,"attributes":[{"value":"/ Configures the span associated for this literal.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40433,"byte_end":40485,"line_start":1055,"line_end":1055,"column_start":5,"column_end":57}},{"value":"stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40490,"byte_end":40546,"line_start":1056,"line_end":1056,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":41468,"byte_end":41475,"line_start":1073,"line_end":1073,"column_start":12,"column_end":19},"name":"subspan","qualname":"<Literal>::subspan","value":"fn <R> (&self, range: R) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Span` that is a subset of `self.span()` containing only the\n source bytes in range `range`. Returns `None` if the would-be trimmed\n span is outside the bounds of `self`.\n","sig":null,"attributes":[{"value":"/ Returns a `Span` that is a subset of `self.span()` containing only the","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40636,"byte_end":40710,"line_start":1061,"line_end":1061,"column_start":5,"column_end":79}},{"value":"/ source bytes in range `range`. Returns `None` if the would-be trimmed","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40715,"byte_end":40788,"line_start":1062,"line_end":1062,"column_start":5,"column_end":78}},{"value":"/ span is outside the bounds of `self`.","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":40793,"byte_end":40834,"line_start":1063,"line_end":1063,"column_start":5,"column_end":46}},{"value":"unstable(feature = \"proc_macro_span\", issue = \"54725\")","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":41399,"byte_end":41456,"line_start":1072,"line_end":1072,"column_start":5,"column_end":62}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56913,"byte_end":56918,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56963,"byte_end":56968,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56997,"byte_end":57002,"line_start":17,"line_end":17,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57031,"byte_end":57036,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57125,"byte_end":57130,"line_start":24,"line_end":24,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57285,"byte_end":57290,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57680,"byte_end":57686,"line_start":46,"line_end":46,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57730,"byte_end":57736,"line_start":47,"line_end":47,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57770,"byte_end":57776,"line_start":49,"line_end":49,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57869,"byte_end":57875,"line_start":55,"line_end":55,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58044,"byte_end":58050,"line_start":62,"line_end":62,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58187,"byte_end":58193,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58984,"byte_end":58990,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":59327,"byte_end":59333,"line_start":112,"line_end":112,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":59454,"byte_end":59460,"line_start":119,"line_end":119,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66302,"byte_end":66313,"line_start":181,"line_end":181,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66391,"byte_end":66406,"line_start":187,"line_end":187,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66484,"byte_end":66489,"line_start":193,"line_end":193,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66567,"byte_end":66574,"line_start":199,"line_end":199,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66725,"byte_end":66732,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66857,"byte_end":66867,"line_start":212,"line_end":212,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66950,"byte_end":66954,"line_start":218,"line_end":218,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":68315,"byte_end":68327,"line_start":265,"line_end":265,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":68519,"byte_end":68530,"line_start":274,"line_end":274,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":69177,"byte_end":69183,"line_start":292,"line_end":292,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73064,"byte_end":73070,"line_start":388,"line_end":388,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73521,"byte_end":73527,"line_start":400,"line_end":400,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74610,"byte_end":74619,"line_start":436,"line_end":436,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75834,"byte_end":75841,"line_start":13,"line_end":13,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75880,"byte_end":75887,"line_start":14,"line_end":14,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75955,"byte_end":75962,"line_start":16,"line_end":16,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":76270,"byte_end":76277,"line_start":25,"line_end":25,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":76775,"byte_end":76785,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77128,"byte_end":77138,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77605,"byte_end":77615,"line_start":39,"line_end":39,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77793,"byte_end":77803,"line_start":46,"line_end":46,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":78082,"byte_end":78095,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":82990,"byte_end":83000,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83127,"byte_end":83137,"line_start":166,"line_end":166,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84614,"byte_end":84620,"line_start":237,"line_end":237,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84745,"byte_end":84751,"line_start":243,"line_end":243,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85082,"byte_end":85094,"line_start":257,"line_end":257,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85465,"byte_end":85477,"line_start":269,"line_end":269,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85818,"byte_end":85830,"line_start":282,"line_end":282,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":86080,"byte_end":86092,"line_start":292,"line_end":292,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":86222,"byte_end":86234,"line_start":298,"line_end":298,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86830,"byte_end":86831,"line_start":16,"line_end":16,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87072,"byte_end":87079,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87236,"byte_end":87243,"line_start":29,"line_end":29,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87420,"byte_end":87430,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":88301,"byte_end":88314,"line_start":59,"line_end":59,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94076,"byte_end":94086,"line_start":141,"line_end":141,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94708,"byte_end":94720,"line_start":160,"line_end":160,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":95641,"byte_end":95653,"line_start":195,"line_end":195,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98193,"byte_end":98199,"line_start":278,"line_end":278,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98786,"byte_end":98792,"line_start":298,"line_end":298,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":52129,"byte_end":52135,"line_start":220,"line_end":220,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":52162,"byte_end":52168,"line_start":221,"line_end":221,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53491,"byte_end":53497,"line_start":270,"line_end":270,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53672,"byte_end":53678,"line_start":276,"line_end":276,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":54085,"byte_end":54091,"line_start":295,"line_end":295,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":54251,"byte_end":54257,"line_start":301,"line_end":301,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55512,"byte_end":55521,"line_start":372,"line_end":372,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56042,"byte_end":56051,"line_start":383,"line_end":383,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100167,"byte_end":100171,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100324,"byte_end":100327,"line_start":33,"line_end":33,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102129,"byte_end":102137,"line_start":86,"line_end":86,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102324,"byte_end":102334,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2892},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2134,"byte_end":2145,"line_start":58,"line_end":58,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2220,"byte_end":2231,"line_start":60,"line_end":60,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2470,"byte_end":2478,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2553,"byte_end":2561,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":3510,"byte_end":3521,"line_start":96,"line_end":96,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":3907,"byte_end":3918,"line_start":107,"line_end":107,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4318,"byte_end":4329,"line_start":117,"line_end":117,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4572,"byte_end":4583,"line_start":125,"line_end":125,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4987,"byte_end":4998,"line_start":137,"line_end":137,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":5577,"byte_end":5588,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":5950,"byte_end":5961,"line_start":159,"line_end":159,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6314,"byte_end":6325,"line_start":168,"line_end":168,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6562,"byte_end":6573,"line_start":175,"line_end":175,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7484,"byte_end":7492,"line_start":195,"line_end":195,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":8060,"byte_end":8071,"line_start":209,"line_end":209,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9176,"byte_end":9180,"line_start":242,"line_end":242,"column_start":16,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9256,"byte_end":9260,"line_start":244,"line_end":244,"column_start":16,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9653,"byte_end":9657,"line_start":257,"line_end":257,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13924,"byte_end":13928,"line_start":363,"line_end":363,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14678,"byte_end":14688,"line_start":383,"line_end":383,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14765,"byte_end":14775,"line_start":385,"line_end":385,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14951,"byte_end":14961,"line_start":392,"line_end":392,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16150,"byte_end":16160,"line_start":420,"line_end":420,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16459,"byte_end":16469,"line_start":430,"line_end":430,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16620,"byte_end":16630,"line_start":437,"line_end":437,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17654,"byte_end":17663,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17739,"byte_end":17748,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17758,"byte_end":17767,"line_start":462,"line_end":462,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19019,"byte_end":19028,"line_start":493,"line_end":493,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19560,"byte_end":19569,"line_start":507,"line_end":507,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19724,"byte_end":19733,"line_start":514,"line_end":514,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19888,"byte_end":19897,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20054,"byte_end":20063,"line_start":528,"line_end":528,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20362,"byte_end":20371,"line_start":537,"line_end":537,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20991,"byte_end":21000,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21423,"byte_end":21428,"line_start":566,"line_end":566,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21504,"byte_end":21509,"line_start":568,"line_end":568,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22390,"byte_end":22395,"line_start":592,"line_end":592,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25005,"byte_end":25010,"line_start":667,"line_end":667,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25401,"byte_end":25406,"line_start":677,"line_end":677,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25597,"byte_end":25602,"line_start":684,"line_end":684,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26264,"byte_end":26269,"line_start":703,"line_end":703,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26345,"byte_end":26350,"line_start":705,"line_end":705,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26939,"byte_end":26944,"line_start":721,"line_end":721,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28781,"byte_end":28786,"line_start":764,"line_end":764,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29103,"byte_end":29108,"line_start":773,"line_end":773,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29299,"byte_end":29304,"line_start":780,"line_end":780,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29713,"byte_end":29718,"line_start":795,"line_end":795,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31983,"byte_end":31988,"line_start":843,"line_end":843,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32295,"byte_end":32300,"line_start":852,"line_end":852,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32491,"byte_end":32496,"line_start":859,"line_end":859,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35157,"byte_end":35164,"line_start":918,"line_end":918,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42245,"byte_end":42252,"line_start":1090,"line_end":1090,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42612,"byte_end":42619,"line_start":1099,"line_end":1099,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42810,"byte_end":42817,"line_start":1106,"line_end":1106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/libproc_macro/lib.rs","byte_start":1269,"byte_end":1275,"line_start":34,"line_end":34,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51118,"byte_end":51124,"line_start":188,"line_end":188,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":51311,"byte_end":51317,"line_start":199,"line_end":199,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":411}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56913,"byte_end":56918,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56963,"byte_end":56968,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":56997,"byte_end":57002,"line_start":17,"line_end":17,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1862}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57031,"byte_end":57036,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57125,"byte_end":57130,"line_start":24,"line_end":24,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57285,"byte_end":57290,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2023}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57680,"byte_end":57686,"line_start":46,"line_end":46,"column_start":38,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57730,"byte_end":57736,"line_start":47,"line_end":47,"column_start":38,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57770,"byte_end":57776,"line_start":49,"line_end":49,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":1843}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":57869,"byte_end":57875,"line_start":55,"line_end":55,"column_start":25,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2023}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58044,"byte_end":58050,"line_start":62,"line_end":62,"column_start":28,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2034}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58187,"byte_end":58193,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":58984,"byte_end":58990,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":2906}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":59327,"byte_end":59333,"line_start":112,"line_end":112,"column_start":24,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2045}},{"span":{"file_name":"src/libproc_macro/bridge/buffer.rs","byte_start":59454,"byte_end":59460,"line_start":119,"line_end":119,"column_start":32,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66302,"byte_end":66313,"line_start":181,"line_end":181,"column_start":16,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66391,"byte_end":66406,"line_start":187,"line_end":187,"column_start":16,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66484,"byte_end":66489,"line_start":193,"line_end":193,"column_start":16,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66567,"byte_end":66574,"line_start":199,"line_end":199,"column_start":16,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66725,"byte_end":66732,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66857,"byte_end":66867,"line_start":212,"line_end":212,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":965},"to":{"krate":2,"index":1562}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":66950,"byte_end":66954,"line_start":218,"line_end":218,"column_start":21,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":68315,"byte_end":68327,"line_start":265,"line_end":265,"column_start":38,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":125},"to":{"krate":0,"index":360}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":68519,"byte_end":68530,"line_start":274,"line_end":274,"column_start":6,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":69177,"byte_end":69183,"line_start":292,"line_end":292,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73064,"byte_end":73070,"line_start":388,"line_end":388,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":73521,"byte_end":73527,"line_start":400,"line_end":400,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/client.rs","byte_start":74610,"byte_end":74619,"line_start":436,"line_end":436,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75834,"byte_end":75841,"line_start":13,"line_end":13,"column_start":26,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75880,"byte_end":75887,"line_start":14,"line_end":14,"column_start":26,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":75955,"byte_end":75962,"line_start":16,"line_end":16,"column_start":54,"column_end":61},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/bridge/closure.rs","byte_start":76270,"byte_end":76277,"line_start":25,"line_end":25,"column_start":16,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":76775,"byte_end":76785,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77128,"byte_end":77138,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77605,"byte_end":77615,"line_start":39,"line_end":39,"column_start":27,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2099}},{"span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":77793,"byte_end":77803,"line_start":46,"line_end":46,"column_start":30,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2103}},{"span":{"file_name":"src/libproc_macro/bridge/handle.rs","byte_start":78082,"byte_end":78095,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":78750,"byte_end":78755,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":255}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":78885,"byte_end":78890,"line_start":18,"line_end":18,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":260}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":78988,"byte_end":78993,"line_start":22,"line_end":22,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":265}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":82990,"byte_end":83000,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":2,"index":10617},"to":{"krate":0,"index":255}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":83127,"byte_end":83137,"line_start":166,"line_end":166,"column_start":34,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":2,"index":10617},"to":{"krate":0,"index":265}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84614,"byte_end":84620,"line_start":237,"line_end":237,"column_start":23,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":5,"index":4553},"to":{"krate":0,"index":255}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":84745,"byte_end":84751,"line_start":243,"line_end":243,"column_start":34,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":4553},"to":{"krate":0,"index":265}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85082,"byte_end":85094,"line_start":257,"line_end":257,"column_start":36,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":331},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85465,"byte_end":85477,"line_start":269,"line_end":269,"column_start":36,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":331},"to":{"krate":2,"index":1773}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":85818,"byte_end":85830,"line_start":282,"line_end":282,"column_start":6,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":86080,"byte_end":86092,"line_start":292,"line_end":292,"column_start":23,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":255}},{"span":{"file_name":"src/libproc_macro/bridge/rpc.rs","byte_start":86222,"byte_end":86234,"line_start":298,"line_end":298,"column_start":34,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":265}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86775,"byte_end":86781,"line_start":14,"line_end":14,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":363}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":86830,"byte_end":86831,"line_start":16,"line_end":16,"column_start":41,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":363}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87072,"byte_end":87079,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2023}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87236,"byte_end":87243,"line_start":29,"line_end":29,"column_start":39,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2034}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":87420,"byte_end":87430,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/scoped_cell.rs","byte_start":88301,"byte_end":88314,"line_start":59,"line_end":59,"column_start":39,"column_end":52},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2045}},{"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94076,"byte_end":94086,"line_start":141,"line_end":141,"column_start":28,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":430},"to":{"krate":0,"index":426}},{"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":94708,"byte_end":94720,"line_start":160,"line_end":160,"column_start":28,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":437},"to":{"krate":0,"index":426}},{"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":95641,"byte_end":95653,"line_start":195,"line_end":195,"column_start":28,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":426}},{"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98193,"byte_end":98199,"line_start":278,"line_end":278,"column_start":14,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/server.rs","byte_start":98786,"byte_end":98792,"line_start":298,"line_end":298,"column_start":14,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":52129,"byte_end":52135,"line_start":220,"line_end":220,"column_start":20,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":52162,"byte_end":52168,"line_start":221,"line_end":221,"column_start":20,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53491,"byte_end":53497,"line_start":270,"line_end":270,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2586},"to":{"krate":0,"index":504}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":53672,"byte_end":53678,"line_start":276,"line_end":276,"column_start":23,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2586},"to":{"krate":0,"index":507}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":54085,"byte_end":54091,"line_start":295,"line_end":295,"column_start":24,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":29099},"to":{"krate":0,"index":504}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":54251,"byte_end":54257,"line_start":301,"line_end":301,"column_start":28,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":2,"index":29099},"to":{"krate":0,"index":507}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":55512,"byte_end":55521,"line_start":372,"line_end":372,"column_start":51,"column_end":60},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2780},"to":{"krate":0,"index":504}},{"span":{"file_name":"src/libproc_macro/bridge/mod.rs","byte_start":56042,"byte_end":56051,"line_start":383,"line_end":383,"column_start":61,"column_end":70},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2780},"to":{"krate":0,"index":507}},{"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100167,"byte_end":100171,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2958},"to":{"krate":0,"index":555}},{"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":100324,"byte_end":100327,"line_start":33,"line_end":33,"column_start":20,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":555}},{"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102129,"byte_end":102137,"line_start":86,"line_end":86,"column_start":23,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2872},"to":{"krate":2,"index":4716}},{"span":{"file_name":"src/libproc_macro/diagnostic.rs","byte_start":102324,"byte_end":102334,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2134,"byte_end":2145,"line_start":58,"line_end":58,"column_start":16,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2220,"byte_end":2231,"line_start":60,"line_end":60,"column_start":16,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2470,"byte_end":2478,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2907},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2553,"byte_end":2561,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2907},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":3510,"byte_end":3521,"line_start":96,"line_end":96,"column_start":18,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":7368}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":3907,"byte_end":3918,"line_start":107,"line_end":107,"column_start":19,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2902},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4318,"byte_end":4329,"line_start":117,"line_end":117,"column_start":23,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4572,"byte_end":4583,"line_start":125,"line_end":125,"column_start":21,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":4987,"byte_end":4998,"line_start":137,"line_end":137,"column_start":26,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":5577,"byte_end":5588,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":4620}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":5950,"byte_end":5961,"line_start":159,"line_end":159,"column_start":42,"column_end":53},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":4620}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6314,"byte_end":6325,"line_start":168,"line_end":168,"column_start":28,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":4633}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":6562,"byte_end":6573,"line_start":175,"line_end":175,"column_start":30,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":4633}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":7484,"byte_end":7492,"line_start":195,"line_end":195,"column_start":23,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2911},"to":{"krate":2,"index":4716}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":8060,"byte_end":8071,"line_start":209,"line_end":209,"column_start":27,"column_end":38},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":4624}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9176,"byte_end":9180,"line_start":242,"line_end":242,"column_start":16,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9256,"byte_end":9260,"line_start":244,"line_end":244,"column_start":16,"column_end":20},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":9653,"byte_end":9657,"line_start":257,"line_end":257,"column_start":6,"column_end":10},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":13924,"byte_end":13928,"line_start":363,"line_end":363,"column_start":21,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14678,"byte_end":14688,"line_start":383,"line_end":383,"column_start":16,"column_end":26},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2972},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14765,"byte_end":14775,"line_start":385,"line_end":385,"column_start":16,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2972},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":14951,"byte_end":14961,"line_start":392,"line_end":392,"column_start":6,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16150,"byte_end":16160,"line_start":420,"line_end":420,"column_start":21,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2987},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16459,"byte_end":16469,"line_start":430,"line_end":430,"column_start":20,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2987},"to":{"krate":2,"index":1588}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":16620,"byte_end":16630,"line_start":437,"line_end":437,"column_start":13,"column_end":23},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2987},"to":{"krate":2,"index":1593}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17654,"byte_end":17663,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17739,"byte_end":17748,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":17758,"byte_end":17767,"line_start":462,"line_end":462,"column_start":6,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19019,"byte_end":19028,"line_start":493,"line_end":493,"column_start":21,"column_end":30},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19560,"byte_end":19569,"line_start":507,"line_end":507,"column_start":22,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19724,"byte_end":19733,"line_start":514,"line_end":514,"column_start":22,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":19888,"byte_end":19897,"line_start":521,"line_end":521,"column_start":22,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20054,"byte_end":20063,"line_start":528,"line_end":528,"column_start":24,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":1776}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20362,"byte_end":20371,"line_start":537,"line_end":537,"column_start":19,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2992},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":20991,"byte_end":21000,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21423,"byte_end":21428,"line_start":566,"line_end":566,"column_start":16,"column_end":21},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":21504,"byte_end":21509,"line_start":568,"line_end":568,"column_start":16,"column_end":21},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":22390,"byte_end":22395,"line_start":592,"line_end":592,"column_start":6,"column_end":11},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25005,"byte_end":25010,"line_start":667,"line_end":667,"column_start":19,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3007},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25401,"byte_end":25406,"line_start":677,"line_end":677,"column_start":23,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":25597,"byte_end":25602,"line_start":684,"line_end":684,"column_start":21,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26264,"byte_end":26269,"line_start":703,"line_end":703,"column_start":16,"column_end":21},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26345,"byte_end":26350,"line_start":705,"line_end":705,"column_start":16,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":1864}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":26939,"byte_end":26944,"line_start":721,"line_end":721,"column_start":6,"column_end":11},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":28781,"byte_end":28786,"line_start":764,"line_end":764,"column_start":19,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3032},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29103,"byte_end":29108,"line_start":773,"line_end":773,"column_start":23,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29299,"byte_end":29304,"line_start":780,"line_end":780,"column_start":21,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":29713,"byte_end":29718,"line_start":795,"line_end":795,"column_start":6,"column_end":11},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":31983,"byte_end":31988,"line_start":843,"line_end":843,"column_start":19,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3053},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32295,"byte_end":32300,"line_start":852,"line_end":852,"column_start":23,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3053},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":32491,"byte_end":32496,"line_start":859,"line_end":859,"column_start":21,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3053},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":35157,"byte_end":35164,"line_start":918,"line_end":918,"column_start":6,"column_end":13},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42245,"byte_end":42252,"line_start":1090,"line_end":1090,"column_start":19,"column_end":26},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3058},"to":{"krate":5,"index":3475}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42612,"byte_end":42619,"line_start":1099,"line_end":1099,"column_start":23,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libproc_macro/lib.rs","byte_start":42810,"byte_end":42817,"line_start":1106,"line_end":1106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":5916}}]}