{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":false,"distro_crate":true,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/parallels/Repos/rust","program":"/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc","arguments":["--edition=2018","--crate-name","test","src/libtest/lib.rs","--error-format=json","--json=diagnostic-rendered-ansi","--crate-type","dylib","--crate-type","rlib","--emit=dep-info,link","-C","prefer-dynamic","-C","opt-level=2","-C","debuginfo=0","--cfg","feature=\"backtrace\"","--cfg","feature=\"compiler-builtins-c\"","--cfg","feature=\"panic-unwind\"","-C","metadata=f89d8c6ad191017c","-C","extra-filename=-f89d8c6ad191017c","--out-dir","/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps","--target","x86_64-unknown-linux-gnu","-L","dependency=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps","-L","dependency=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/release/deps","--extern","core=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libcore-151f1d578d47a3f2.rlib","--extern","getopts=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libgetopts-7c5ce78aeb100c38.rlib","--extern","libc=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/liblibc-b0f250f934432b16.rlib","--extern","panic_abort=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libpanic_abort-85e1e8313ca7d0cf.rlib","--extern","panic_unwind=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libpanic_unwind-c4126e5ba90c7e07.rlib","--extern","proc_macro=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libproc_macro-cef68ba883c877ec.rlib","--extern","std=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-2a388c8dece56ad2.so","--extern","std=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-2a388c8dece56ad2.rlib","--extern","term=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libterm-92dcc83ea802396f.rlib","-Zexternal-macro-backtrace","-Clink-args=-Wl,-rpath,$ORIGIN/../lib","-Wrust_2018_idioms","-Wunused_lifetimes","-Dwarnings","-Zsave-analysis","-Cprefer-dynamic","-Zbinary-dep-depinfo","-L","native=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/build/compiler_builtins-24f467101ff50fdb/out","-L","native=/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/build/backtrace-sys-d34d1240ad0e5dd7/out","--sysroot","/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1","-C","debug-assertions=n","-Z","force-unstable-if-unmarked"],"output":"/home/parallels/Repos/rust/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libtest-f89d8c6ad191017c.so"},"prelude":{"crate_id":{"name":"test","disambiguator":[7308433231127542480,11076861208658982278]},"crate_root":"src/libtest","external_crates":[{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":1,"id":{"name":"std","disambiguator":[8351601584793648127,8632876857349748754]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":2,"id":{"name":"core","disambiguator":[2287588329603175230,1743550078670421849]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16198930258126787141,2971708547737336037]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3116599134721608169,2545038524027594738]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[243425455527795567,14247343443062235522]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/helpers/concurrency.rs","num":6,"id":{"name":"libc","disambiguator":[13663888671738731919,13285117080101152490]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14319211042394114398,5961666531870325507]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12941178827736332585,9358125570039724409]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15494534350792829017,10938457346761435199]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[18141683569186961164,7640898060583599078]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[17290228952750182064,17527858984789957720]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8682897892229156887,8286894810744069291]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3628186424607178785,4863834672057698992]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2781593605296020309,1527240366433185842]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/cli.rs","num":15,"id":{"name":"getopts","disambiguator":[15513551660740580830,15442899302826737693]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/cli.rs","num":16,"id":{"name":"rustc_std_workspace_std","disambiguator":[5736809913804780191,6291788149485510486]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/cli.rs","num":17,"id":{"name":"unicode_width","disambiguator":[4092795426227746403,771027745403289006]}},{"file_name":"/home/parallels/Repos/rust/src/libtest/console.rs","num":18,"id":{"name":"term","disambiguator":[4573564615385029882,15383942579144519017]}}],"span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":21676,"line_start":1,"line_end":637,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":735},"span":{"file_name":"src/libtest/lib.rs","byte_start":1345,"byte_end":1354,"line_start":35,"line_end":35,"column_start":23,"column_end":32},"alias_span":null,"name":"black_box","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"src/libtest/lib.rs","byte_start":1356,"byte_end":1363,"line_start":35,"line_end":35,"column_start":34,"column_end":41},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"src/libtest/lib.rs","byte_start":1389,"byte_end":1406,"line_start":36,"line_end":36,"column_start":24,"column_end":41},"alias_span":null,"name":"run_tests_console","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"src/libtest/lib.rs","byte_start":1432,"byte_end":1443,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"alias_span":null,"name":"ColorConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"src/libtest/lib.rs","byte_start":1445,"byte_end":1452,"line_start":37,"line_end":37,"column_start":38,"column_end":45},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"src/libtest/lib.rs","byte_start":1454,"byte_end":1466,"line_start":37,"line_end":37,"column_start":47,"column_end":59},"alias_span":null,"name":"OutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"src/libtest/lib.rs","byte_start":1468,"byte_end":1478,"line_start":37,"line_end":37,"column_start":61,"column_end":71},"alias_span":null,"name":"RunIgnored","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"src/libtest/lib.rs","byte_start":1480,"byte_end":1491,"line_start":37,"line_end":37,"column_start":73,"column_end":84},"alias_span":null,"name":"ShouldPanic","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1525,"byte_end":1526,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1525,"byte_end":1526,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"TDynBenchFn, TestDescAndFn, StaticTestFn, DynTestFn, DynBenchFn, TestFn, TestDesc, StaticBenchFn","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1525,"byte_end":1526,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"src/libtest/lib.rs","byte_start":1595,"byte_end":1603,"line_start":41,"line_end":41,"column_start":14,"column_end":22},"alias_span":null,"name":"TestOpts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"src/libtest/lib.rs","byte_start":1708,"byte_end":1726,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"alias_span":null,"name":"assert_test_result","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"src/libtest/lib.rs","byte_start":1743,"byte_end":1750,"line_start":47,"line_end":47,"column_start":16,"column_end":23},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"src/libtest/lib.rs","byte_start":1766,"byte_end":1776,"line_start":48,"line_end":48,"column_start":15,"column_end":25},"alias_span":null,"name":"parse_opts","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"src/libtest/lib.rs","byte_start":1778,"byte_end":1786,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"alias_span":null,"name":"TestOpts","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"src/libtest/lib.rs","byte_start":1797,"byte_end":1809,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"alias_span":null,"name":"filter_tests","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"src/libtest/lib.rs","byte_start":1838,"byte_end":1844,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"alias_span":null,"name":"Metric","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"src/libtest/lib.rs","byte_start":1846,"byte_end":1855,"line_start":50,"line_end":50,"column_start":36,"column_end":45},"alias_span":null,"name":"MetricMap","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"src/libtest/lib.rs","byte_start":1876,"byte_end":1883,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"src/libtest/lib.rs","byte_start":1885,"byte_end":1895,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"RunIgnored","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"src/libtest/lib.rs","byte_start":1897,"byte_end":1908,"line_start":51,"line_end":51,"column_start":40,"column_end":51},"alias_span":null,"name":"RunStrategy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"src/libtest/lib.rs","byte_start":1910,"byte_end":1921,"line_start":51,"line_end":51,"column_start":53,"column_end":64},"alias_span":null,"name":"ShouldPanic","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"src/libtest/lib.rs","byte_start":1932,"byte_end":1940,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"alias_span":null,"name":"run_test","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"src/libtest/lib.rs","byte_start":1942,"byte_end":1951,"line_start":52,"line_end":52,"column_start":19,"column_end":28},"alias_span":null,"name":"test_main","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"src/libtest/lib.rs","byte_start":1953,"byte_end":1969,"line_start":52,"line_end":52,"column_start":30,"column_end":46},"alias_span":null,"name":"test_main_static","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":869},"span":{"file_name":"src/libtest/lib.rs","byte_start":1993,"byte_end":2003,"line_start":53,"line_end":53,"column_start":23,"column_end":33},"alias_span":null,"name":"TestResult","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"src/libtest/lib.rs","byte_start":2005,"byte_end":2013,"line_start":53,"line_end":53,"column_start":35,"column_end":43},"alias_span":null,"name":"TrFailed","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"src/libtest/lib.rs","byte_start":2015,"byte_end":2026,"line_start":53,"line_end":53,"column_start":45,"column_end":56},"alias_span":null,"name":"TrFailedMsg","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":877},"span":{"file_name":"src/libtest/lib.rs","byte_start":2028,"byte_end":2037,"line_start":53,"line_end":53,"column_start":58,"column_end":67},"alias_span":null,"name":"TrIgnored","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"src/libtest/lib.rs","byte_start":2039,"byte_end":2043,"line_start":53,"line_end":53,"column_start":69,"column_end":73},"alias_span":null,"name":"TrOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"src/libtest/lib.rs","byte_start":2061,"byte_end":2073,"line_start":54,"line_end":54,"column_start":16,"column_end":28},"alias_span":null,"name":"TestExecTime","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"src/libtest/lib.rs","byte_start":2075,"byte_end":2090,"line_start":54,"line_end":54,"column_start":30,"column_end":45},"alias_span":null,"name":"TestTimeOptions","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"src/libtest/lib.rs","byte_start":2122,"byte_end":2131,"line_start":56,"line_end":56,"column_start":13,"column_end":22},"alias_span":null,"name":"DynTestFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"src/libtest/lib.rs","byte_start":2133,"byte_end":2144,"line_start":56,"line_end":56,"column_start":24,"column_end":35},"alias_span":null,"name":"DynTestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"src/libtest/lib.rs","byte_start":2146,"byte_end":2159,"line_start":56,"line_end":56,"column_start":37,"column_end":50},"alias_span":null,"name":"StaticBenchFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"src/libtest/lib.rs","byte_start":2161,"byte_end":2173,"line_start":56,"line_end":56,"column_start":52,"column_end":64},"alias_span":null,"name":"StaticTestFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"src/libtest/lib.rs","byte_start":2175,"byte_end":2189,"line_start":56,"line_end":56,"column_start":66,"column_end":80},"alias_span":null,"name":"StaticTestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"src/libtest/lib.rs","byte_start":2191,"byte_end":2199,"line_start":56,"line_end":56,"column_start":82,"column_end":90},"alias_span":null,"name":"TestDesc","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"src/libtest/lib.rs","byte_start":2213,"byte_end":2226,"line_start":57,"line_end":57,"column_start":13,"column_end":26},"alias_span":null,"name":"TestDescAndFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"src/libtest/lib.rs","byte_start":2228,"byte_end":2236,"line_start":57,"line_end":57,"column_start":28,"column_end":36},"alias_span":null,"name":"TestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"src/libtest/lib.rs","byte_start":2238,"byte_end":2246,"line_start":57,"line_end":57,"column_start":38,"column_end":46},"alias_span":null,"name":"TestType","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":735},"span":{"file_name":"src/libtest/bench.rs","byte_start":21722,"byte_end":21731,"line_start":2,"line_end":2,"column_start":20,"column_end":29},"alias_span":null,"name":"black_box","value":"","parent":{"krate":0,"index":78}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/test_result.rs","byte_start":99329,"byte_end":99330,"line_start":8,"line_end":8,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"TrOk, TrFailed, TrIgnored, TrFailedMsg","parent":{"krate":0,"index":475}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110408,"byte_end":110409,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"PadOnRight, PadNone","parent":{"krate":0,"index":535}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110408,"byte_end":110409,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"StaticTestFn, DynTestFn, DynBenchFn, StaticBenchFn","parent":{"krate":0,"index":535}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110408,"byte_end":110409,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"AlignedTestName, StaticTestName, DynTestName","parent":{"krate":0,"index":535}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":21676,"line_start":1,"line_end":637,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/libtest/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":55},{"krate":0,"index":78},{"krate":0,"index":123},{"krate":0,"index":157},{"krate":0,"index":234},{"krate":0,"index":241},{"krate":0,"index":389},{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":475},{"krate":0,"index":492},{"krate":0,"index":535},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":605},{"krate":0,"index":615},{"krate":0,"index":623},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":642}],"decl_id":null,"docs":" Support code for rustc's built in unit-test and micro-benchmarking\n framework.","sig":null,"attributes":[{"value":"! Support code for rustc's built in unit-test and micro-benchmarking","span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"! framework.","span":{"file_name":"src/libtest/lib.rs","byte_start":71,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"src/libtest/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Almost all user code will only be interested in `Bencher` and","span":{"file_name":"src/libtest/lib.rs","byte_start":90,"byte_end":155,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"! `black_box`. All other interactions (such as writing tests and","span":{"file_name":"src/libtest/lib.rs","byte_start":156,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"! benchmarks themselves) should be done via the `#[test]` and","span":{"file_name":"src/libtest/lib.rs","byte_start":223,"byte_end":286,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"! `#[bench]` attributes.","span":{"file_name":"src/libtest/lib.rs","byte_start":287,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"src/libtest/lib.rs","byte_start":314,"byte_end":317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! See the [Testing Chapter](../book/ch11-00-testing.html) of the book for more details.","span":{"file_name":"src/libtest/lib.rs","byte_start":318,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"crate_name = \"test\"","span":{"file_name":"src/libtest/lib.rs","byte_start":862,"byte_end":885,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"unstable(feature = \"test\", issue = \"50297\")","span":{"file_name":"src/libtest/lib.rs","byte_start":886,"byte_end":933,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"feature(asm)","span":{"file_name":"src/libtest/lib.rs","byte_start":1024,"byte_end":1040,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"feature(libc)","span":{"file_name":"src/libtest/lib.rs","byte_start":1088,"byte_end":1101,"line_start":24,"line_end":24,"column_start":48,"column_end":61}},{"value":"feature(rustc_private)","span":{"file_name":"src/libtest/lib.rs","byte_start":1104,"byte_end":1130,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"feature(nll)","span":{"file_name":"src/libtest/lib.rs","byte_start":1131,"byte_end":1147,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"feature(bool_to_option)","span":{"file_name":"src/libtest/lib.rs","byte_start":1148,"byte_end":1175,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"feature(set_stdio)","span":{"file_name":"src/libtest/lib.rs","byte_start":1176,"byte_end":1198,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"feature(panic_unwind)","span":{"file_name":"src/libtest/lib.rs","byte_start":1199,"byte_end":1224,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"feature(staged_api)","span":{"file_name":"src/libtest/lib.rs","byte_start":1225,"byte_end":1248,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"feature(termination_trait_lib)","span":{"file_name":"src/libtest/lib.rs","byte_start":1249,"byte_end":1283,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"feature(test)","span":{"file_name":"src/libtest/lib.rs","byte_start":1284,"byte_end":1301,"line_start":32,"line_end":32,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"src/libtest/lib.rs","byte_start":1672,"byte_end":1676,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"test","qualname":"::test","value":"src/libtest/lib.rs","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"src/libtest/bench.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bench","qualname":"::bench","value":"src/libtest/bench.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":99},{"krate":0,"index":651},{"krate":0,"index":660},{"krate":0,"index":658},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":121}],"decl_id":null,"docs":" Benchmarking module.\n","sig":null,"attributes":[{"value":"! Benchmarking module.","span":{"file_name":"src/libtest/bench.rs","byte_start":21678,"byte_end":21702,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"src/libtest/bench.rs","byte_start":22261,"byte_end":22268,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::bench::Bencher","value":"Bencher { bytes }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":" Manager of the benchmarking runs.","sig":null,"attributes":[{"value":"/ Manager of the benchmarking runs.","span":{"file_name":"src/libtest/bench.rs","byte_start":22033,"byte_end":22070,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"src/libtest/bench.rs","byte_start":22071,"byte_end":22074,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is fed into functions marked with `#[bench]` to allow for","span":{"file_name":"src/libtest/bench.rs","byte_start":22075,"byte_end":22141,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ set-up & tear-down before running a piece of code repeatedly via a","span":{"file_name":"src/libtest/bench.rs","byte_start":22142,"byte_end":22212,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ call to `iter`.","span":{"file_name":"src/libtest/bench.rs","byte_start":22213,"byte_end":22232,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":648},"span":{"file_name":"src/libtest/bench.rs","byte_start":22337,"byte_end":22342,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bench::Bencher::bytes","value":"u64","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"src/libtest/bench.rs","byte_start":22441,"byte_end":22445,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"fn <T, F> (&mut self, mut inner: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Callback for benchmark functions to run in their body.\n","sig":null,"attributes":[{"value":"/ Callback for benchmark functions to run in their body.","span":{"file_name":"src/libtest/bench.rs","byte_start":22371,"byte_end":22429,"line_start":29,"line_end":29,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"src/libtest/bench.rs","byte_start":22700,"byte_end":22705,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"bench","qualname":"<Bencher>::bench","value":"fn <F> (&mut self, mut f: F) -> Option<stats::Summary>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"src/libtest/bench.rs","byte_start":22897,"byte_end":22909,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"BenchSamples","qualname":"::bench::BenchSamples","value":"BenchSamples { ns_iter_summ, mb_s }","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":652},"span":{"file_name":"src/libtest/bench.rs","byte_start":22920,"byte_end":22932,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"ns_iter_summ","qualname":"::bench::BenchSamples::ns_iter_summ","value":"stats::Summary","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":653},"span":{"file_name":"src/libtest/bench.rs","byte_start":22958,"byte_end":22962,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"mb_s","qualname":"::bench::BenchSamples::mb_s","value":"usize","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"src/libtest/bench.rs","byte_start":22981,"byte_end":22998,"line_start":57,"line_end":57,"column_start":8,"column_end":25},"name":"fmt_bench_samples","qualname":"::bench::fmt_bench_samples","value":"fn (bs: &BenchSamples) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":113},"span":{"file_name":"src/libtest/bench.rs","byte_start":24530,"byte_end":24534,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"iter","qualname":"::bench::iter","value":"fn <T, F> (inner: &mut F) -> stats::Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"src/libtest/bench.rs","byte_start":26714,"byte_end":26723,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"benchmark","qualname":"::bench::benchmark","value":"fn <F> (desc: TestDesc, monitor_ch: Sender<CompletedTest>, nocapture: bool, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"src/libtest/bench.rs","byte_start":28205,"byte_end":28213,"line_start":232,"line_end":232,"column_start":8,"column_end":16},"name":"run_once","qualname":"::bench::run_once","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"src/libtest/cli.rs","byte_start":28642,"byte_end":28650,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"TestOpts","qualname":"::cli::TestOpts","value":"TestOpts { list, filter, filter_exact, force_run_in_process, exclude_should_panic, run_ignored, run_tests, bench_benchmarks, logfile, nocapture, color, format, test_threads, skip, time_options, options }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":663},"span":{"file_name":"src/libtest/cli.rs","byte_start":28661,"byte_end":28665,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"list","qualname":"::cli::TestOpts::list","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":664},"span":{"file_name":"src/libtest/cli.rs","byte_start":28681,"byte_end":28687,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"filter","qualname":"::cli::TestOpts::filter","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":665},"span":{"file_name":"src/libtest/cli.rs","byte_start":28713,"byte_end":28725,"line_start":15,"line_end":15,"column_start":9,"column_end":21},"name":"filter_exact","qualname":"::cli::TestOpts::filter_exact","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":666},"span":{"file_name":"src/libtest/cli.rs","byte_start":28741,"byte_end":28761,"line_start":16,"line_end":16,"column_start":9,"column_end":29},"name":"force_run_in_process","qualname":"::cli::TestOpts::force_run_in_process","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"src/libtest/cli.rs","byte_start":28777,"byte_end":28797,"line_start":17,"line_end":17,"column_start":9,"column_end":29},"name":"exclude_should_panic","qualname":"::cli::TestOpts::exclude_should_panic","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":668},"span":{"file_name":"src/libtest/cli.rs","byte_start":28813,"byte_end":28824,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"name":"run_ignored","qualname":"::cli::TestOpts::run_ignored","value":"options::RunIgnored","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":669},"span":{"file_name":"src/libtest/cli.rs","byte_start":28846,"byte_end":28855,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"run_tests","qualname":"::cli::TestOpts::run_tests","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":670},"span":{"file_name":"src/libtest/cli.rs","byte_start":28871,"byte_end":28887,"line_start":20,"line_end":20,"column_start":9,"column_end":25},"name":"bench_benchmarks","qualname":"::cli::TestOpts::bench_benchmarks","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"src/libtest/cli.rs","byte_start":28903,"byte_end":28910,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"logfile","qualname":"::cli::TestOpts::logfile","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":672},"span":{"file_name":"src/libtest/cli.rs","byte_start":28937,"byte_end":28946,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"nocapture","qualname":"::cli::TestOpts::nocapture","value":"bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"src/libtest/cli.rs","byte_start":28962,"byte_end":28967,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"color","qualname":"::cli::TestOpts::color","value":"options::ColorConfig","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"src/libtest/cli.rs","byte_start":28990,"byte_end":28996,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"format","qualname":"::cli::TestOpts::format","value":"options::OutputFormat","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":675},"span":{"file_name":"src/libtest/cli.rs","byte_start":29020,"byte_end":29032,"line_start":25,"line_end":25,"column_start":9,"column_end":21},"name":"test_threads","qualname":"::cli::TestOpts::test_threads","value":"std::option::Option<usize>","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":676},"span":{"file_name":"src/libtest/cli.rs","byte_start":29057,"byte_end":29061,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"skip","qualname":"::cli::TestOpts::skip","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":677},"span":{"file_name":"src/libtest/cli.rs","byte_start":29084,"byte_end":29096,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"name":"time_options","qualname":"::cli::TestOpts::time_options","value":"std::option::Option<time::TestTimeOptions>","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"src/libtest/cli.rs","byte_start":29131,"byte_end":29138,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"options","qualname":"::cli::TestOpts::options","value":"options::Options","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"src/libtest/cli.rs","byte_start":29179,"byte_end":29188,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"use_color","qualname":"<TestOpts>::use_color","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"src/libtest/cli.rs","byte_start":29470,"byte_end":29476,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"OptRes","qualname":"::cli::OptRes","value":"Result<TestOpts, String>","parent":null,"children":[],"decl_id":null,"docs":" Result of parsing the options.\n","sig":null,"attributes":[{"value":"/ Result of parsing the options.","span":{"file_name":"src/libtest/cli.rs","byte_start":29426,"byte_end":29460,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"src/libtest/cli.rs","byte_start":35370,"byte_end":35380,"line_start":189,"line_end":189,"column_start":8,"column_end":18},"name":"parse_opts","qualname":"::cli::parse_opts","value":"fn (args: &[String]) -> Option<OptRes>","parent":null,"children":[],"decl_id":null,"docs":" Parses command line arguments into test options.\n Returns `None` if help was requested (since we only show help message and don't run tests),\n returns `Some(Err(..))` if provided arguments are incorrect,\n otherwise creates a `TestOpts` object and returns it.\n","sig":null,"attributes":[{"value":"/ Parses command line arguments into test options.","span":{"file_name":"src/libtest/cli.rs","byte_start":35091,"byte_end":35143,"line_start":185,"line_end":185,"column_start":1,"column_end":53}},{"value":"/ Returns `None` if help was requested (since we only show help message and don't run tests),","span":{"file_name":"src/libtest/cli.rs","byte_start":35144,"byte_end":35239,"line_start":186,"line_end":186,"column_start":1,"column_end":96}},{"value":"/ returns `Some(Err(..))` if provided arguments are incorrect,","span":{"file_name":"src/libtest/cli.rs","byte_start":35240,"byte_end":35304,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/ otherwise creates a `TestOpts` object and returns it.","span":{"file_name":"src/libtest/cli.rs","byte_start":35305,"byte_end":35362,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"src/libtest/console.rs","byte_start":43700,"byte_end":43706,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Pretty","qualname":"::console::OutputLocation::Pretty","value":"OutputLocation::Pretty(Box<term::StdoutTerminal>)","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"src/libtest/console.rs","byte_start":43739,"byte_end":43742,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Raw","qualname":"::console::OutputLocation::Raw","value":"OutputLocation::Raw(T)","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":187},"span":{"file_name":"src/libtest/console.rs","byte_start":43676,"byte_end":43690,"line_start":24,"line_end":24,"column_start":10,"column_end":24},"name":"OutputLocation","qualname":"::console::OutputLocation","value":"OutputLocation::{Pretty, Raw}","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":192}],"decl_id":null,"docs":" Generic wrapper over stdout.\n","sig":null,"attributes":[{"value":"/ Generic wrapper over stdout.","span":{"file_name":"src/libtest/console.rs","byte_start":43634,"byte_end":43666,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"src/libtest/console.rs","byte_start":44261,"byte_end":44277,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"ConsoleTestState","qualname":"::console::ConsoleTestState","value":"ConsoleTestState { log_out, total, passed, failed, ignored, allowed_fail, filtered_out, measured, metrics, failures, not_failures, time_failures, options }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":200},"span":{"file_name":"src/libtest/console.rs","byte_start":44288,"byte_end":44295,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"log_out","qualname":"::console::ConsoleTestState::log_out","value":"std::option::Option<std::fs::File>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"src/libtest/console.rs","byte_start":44319,"byte_end":44324,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"total","qualname":"::console::ConsoleTestState::total","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"src/libtest/console.rs","byte_start":44341,"byte_end":44347,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"passed","qualname":"::console::ConsoleTestState::passed","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":203},"span":{"file_name":"src/libtest/console.rs","byte_start":44364,"byte_end":44370,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"failed","qualname":"::console::ConsoleTestState::failed","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":204},"span":{"file_name":"src/libtest/console.rs","byte_start":44387,"byte_end":44394,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"ignored","qualname":"::console::ConsoleTestState::ignored","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":"src/libtest/console.rs","byte_start":44411,"byte_end":44423,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"name":"allowed_fail","qualname":"::console::ConsoleTestState::allowed_fail","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":206},"span":{"file_name":"src/libtest/console.rs","byte_start":44440,"byte_end":44452,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"name":"filtered_out","qualname":"::console::ConsoleTestState::filtered_out","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":"src/libtest/console.rs","byte_start":44469,"byte_end":44477,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"name":"measured","qualname":"::console::ConsoleTestState::measured","value":"usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":208},"span":{"file_name":"src/libtest/console.rs","byte_start":44494,"byte_end":44501,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"metrics","qualname":"::console::ConsoleTestState::metrics","value":"helpers::metrics::MetricMap","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":"src/libtest/console.rs","byte_start":44522,"byte_end":44530,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"failures","qualname":"::console::ConsoleTestState::failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":210},"span":{"file_name":"src/libtest/console.rs","byte_start":44566,"byte_end":44578,"line_start":56,"line_end":56,"column_start":9,"column_end":21},"name":"not_failures","qualname":"::console::ConsoleTestState::not_failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"src/libtest/console.rs","byte_start":44614,"byte_end":44627,"line_start":57,"line_end":57,"column_start":9,"column_end":22},"name":"time_failures","qualname":"::console::ConsoleTestState::time_failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":212},"span":{"file_name":"src/libtest/console.rs","byte_start":44663,"byte_end":44670,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"name":"options","qualname":"::console::ConsoleTestState::options","value":"options::Options","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"src/libtest/console.rs","byte_start":44719,"byte_end":44722,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<ConsoleTestState>::new","value":"fn (opts: &TestOpts) -> io::Result<ConsoleTestState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"src/libtest/console.rs","byte_start":45352,"byte_end":45361,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"write_log","qualname":"<ConsoleTestState>::write_log","value":"fn <F, S> (&mut self, msg: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"src/libtest/console.rs","byte_start":45719,"byte_end":45735,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"write_log_result","qualname":"<ConsoleTestState>::write_log_result","value":"fn (&mut self, test: &TestDesc, result: &TestResult, exec_time: Option<&TestExecTime>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"src/libtest/console.rs","byte_start":46952,"byte_end":46970,"line_start":133,"line_end":133,"column_start":8,"column_end":26},"name":"list_tests_console","qualname":"::console::list_tests_console","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"src/libtest/console.rs","byte_start":50787,"byte_end":50804,"line_start":253,"line_end":253,"column_start":8,"column_end":25},"name":"run_tests_console","qualname":"::console::run_tests_console","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" A simple console test runner.\n Runs provided tests reporting process and results to the stdout.\n","sig":null,"attributes":[{"value":"/ A simple console test runner.","span":{"file_name":"src/libtest/console.rs","byte_start":50677,"byte_end":50710,"line_start":251,"line_end":251,"column_start":1,"column_end":34}},{"value":"/ Runs provided tests reporting process and results to the stdout.","span":{"file_name":"src/libtest/console.rs","byte_start":50711,"byte_end":50779,"line_start":252,"line_end":252,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"src/libtest/event.rs","byte_start":52416,"byte_end":52429,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"CompletedTest","qualname":"::event::CompletedTest","value":"CompletedTest { desc, result, exec_time, stdout }","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"src/libtest/event.rs","byte_start":52440,"byte_end":52444,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"desc","qualname":"::event::CompletedTest::desc","value":"types::TestDesc","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"src/libtest/event.rs","byte_start":52464,"byte_end":52470,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"result","qualname":"::event::CompletedTest::result","value":"test_result::TestResult","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":684},"span":{"file_name":"src/libtest/event.rs","byte_start":52492,"byte_end":52501,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"exec_time","qualname":"::event::CompletedTest::exec_time","value":"std::option::Option<time::TestExecTime>","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":685},"span":{"file_name":"src/libtest/event.rs","byte_start":52533,"byte_end":52539,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"stdout","qualname":"::event::CompletedTest::stdout","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"src/libtest/event.rs","byte_start":52585,"byte_end":52588,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<CompletedTest>::new","value":"fn (desc: TestDesc, result: TestResult, exec_time: Option<TestExecTime>, stdout: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":691},"span":{"file_name":"src/libtest/event.rs","byte_start":52870,"byte_end":52880,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"TeFiltered","qualname":"::event::TestEvent::TeFiltered","value":"TestEvent::TeFiltered(Vec<TestDesc>)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"src/libtest/event.rs","byte_start":52901,"byte_end":52907,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"TeWait","qualname":"::event::TestEvent::TeWait","value":"TestEvent::TeWait(TestDesc)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"src/libtest/event.rs","byte_start":52923,"byte_end":52931,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"TeResult","qualname":"::event::TestEvent::TeResult","value":"TestEvent::TeResult(CompletedTest)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"src/libtest/event.rs","byte_start":52952,"byte_end":52961,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"TeTimeout","qualname":"::event::TestEvent::TeTimeout","value":"TestEvent::TeTimeout(TestDesc)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"src/libtest/event.rs","byte_start":52977,"byte_end":52990,"line_start":35,"line_end":35,"column_start":5,"column_end":18},"name":"TeFilteredOut","qualname":"::event::TestEvent::TeFilteredOut","value":"TestEvent::TeFilteredOut(usize)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":690},"span":{"file_name":"src/libtest/event.rs","byte_start":52854,"byte_end":52863,"line_start":30,"line_end":30,"column_start":10,"column_end":19},"name":"TestEvent","qualname":"::event::TestEvent","value":"TestEvent::{TeFiltered, TeWait, TeResult, TeTimeout, TeFilteredOut}","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54485,"byte_end":54488,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JsonFormatter<T>>::new","value":"fn (out: OutputLocation<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62269,"byte_end":62272,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyFormatter<T>>::new","value":"fn (out: OutputLocation<T>, use_color: bool, max_name_len: usize, is_multithreaded: bool, time_options: Option<time::TestTimeOptions>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62668,"byte_end":62676,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"write_ok","qualname":"<PrettyFormatter<T>>::write_ok","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62784,"byte_end":62796,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"write_failed","qualname":"<PrettyFormatter<T>>::write_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62906,"byte_end":62919,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"write_ignored","qualname":"<PrettyFormatter<T>>::write_ignored","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63033,"byte_end":63051,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"write_allowed_fail","qualname":"<PrettyFormatter<T>>::write_allowed_fail","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63174,"byte_end":63191,"line_start":55,"line_end":55,"column_start":12,"column_end":29},"name":"write_time_failed","qualname":"<PrettyFormatter<T>>::write_time_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63323,"byte_end":63334,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"write_bench","qualname":"<PrettyFormatter<T>>::write_bench","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63438,"byte_end":63456,"line_start":63,"line_end":63,"column_start":12,"column_end":30},"name":"write_short_result","qualname":"<PrettyFormatter<T>>::write_short_result","value":"fn (&mut self, result: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63619,"byte_end":63631,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<PrettyFormatter<T>>::write_pretty","value":"fn (&mut self, word: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":64232,"byte_end":64243,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"write_plain","qualname":"<PrettyFormatter<T>>::write_plain","value":"fn <S> (&mut self, s: S) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66244,"byte_end":66259,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"write_successes","qualname":"<PrettyFormatter<T>>::write_successes","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66396,"byte_end":66410,"line_start":162,"line_end":162,"column_start":12,"column_end":26},"name":"write_failures","qualname":"<PrettyFormatter<T>>::write_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66542,"byte_end":66561,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"write_time_failures","qualname":"<PrettyFormatter<T>>::write_time_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":70994,"byte_end":70997,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TerseFormatter<T>>::new","value":"fn (out: OutputLocation<T>, use_color: bool, max_name_len: usize, is_multithreaded: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71395,"byte_end":71403,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"write_ok","qualname":"<TerseFormatter<T>>::write_ok","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71510,"byte_end":71522,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"write_failed","qualname":"<TerseFormatter<T>>::write_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71627,"byte_end":71640,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"write_ignored","qualname":"<TerseFormatter<T>>::write_ignored","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71748,"byte_end":71766,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"write_allowed_fail","qualname":"<TerseFormatter<T>>::write_allowed_fail","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71874,"byte_end":71885,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"write_bench","qualname":"<TerseFormatter<T>>::write_bench","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71989,"byte_end":72007,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"write_short_result","qualname":"<TerseFormatter<T>>::write_short_result","value":"fn (&mut self, result: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":72625,"byte_end":72637,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<TerseFormatter<T>>::write_pretty","value":"fn (&mut self, word: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":73238,"byte_end":73249,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"write_plain","qualname":"<TerseFormatter<T>>::write_plain","value":"fn <S> (&mut self, s: S) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":73416,"byte_end":73429,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"write_outputs","qualname":"<TerseFormatter<T>>::write_outputs","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":74329,"byte_end":74343,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"write_failures","qualname":"<TerseFormatter<T>>::write_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53367,"byte_end":53382,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"write_run_start","qualname":"::formatters::OutputFormatter::write_run_start","value":"fn (&mut self, test_count: usize) -> io::Result<()>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53439,"byte_end":53455,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"write_test_start","qualname":"::formatters::OutputFormatter::write_test_start","value":"fn (&mut self, desc: &TestDesc) -> io::Result<()>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53510,"byte_end":53523,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"write_timeout","qualname":"::formatters::OutputFormatter::write_timeout","value":"fn (&mut self, desc: &TestDesc) -> io::Result<()>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53578,"byte_end":53590,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"write_result","qualname":"::formatters::OutputFormatter::write_result","value":"fn (&mut self, desc: &TestDesc, result: &TestResult, exec_time: Option<&time::TestExecTime>, stdout: &[u8], state: &ConsoleTestState) -> io::Result<()>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53802,"byte_end":53818,"line_start":30,"line_end":30,"column_start":8,"column_end":24},"name":"write_run_finish","qualname":"::formatters::OutputFormatter::write_run_finish","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<bool>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":390},"span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"concurrency","qualname":"::helpers::concurrency","value":"src/libtest/helpers/concurrency.rs","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Helper module which helps to determine amount of threads to be used\n during tests execution.\n","sig":null,"attributes":[{"value":"! Helper module which helps to determine amount of threads to be used","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":78804,"byte_end":78875,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! during tests execution.","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":78876,"byte_end":78903,"line_start":2,"line_end":2,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":78947,"byte_end":78962,"line_start":6,"line_end":6,"column_start":8,"column_end":23},"name":"get_concurrency","qualname":"::helpers::concurrency::get_concurrency","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":78919,"byte_end":78939,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":394},"span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exit_code","qualname":"::helpers::exit_code","value":"src/libtest/helpers/exit_code.rs","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" Helper module to detect subprocess exit code.\n","sig":null,"attributes":[{"value":"! Helper module to detect subprocess exit code.","span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":82766,"byte_end":82815,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":83030,"byte_end":83043,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"get_exit_code","qualname":"::helpers::exit_code::get_exit_code","value":"fn (status: ExitStatus) -> Result<i32, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":83010,"byte_end":83022,"line_start":10,"line_end":10,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":398},"span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isatty","qualname":"::helpers::isatty","value":"src/libtest/helpers/isatty.rs","parent":null,"children":[{"krate":0,"index":399}],"decl_id":null,"docs":" Helper module which provides a function to test\n if stdout is a tty.\n","sig":null,"attributes":[{"value":"! Helper module which provides a function to test","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83419,"byte_end":83470,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"! if stdout is a tty.","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83471,"byte_end":83494,"line_start":2,"line_end":2,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83788,"byte_end":83801,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"stdout_isatty","qualname":"::helpers::isatty::stdout_isatty","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83768,"byte_end":83780,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":400},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metrics","qualname":"::helpers::metrics","value":"src/libtest/helpers/metrics.rs","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":710},{"krate":0,"index":720},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":714},{"krate":0,"index":713},{"krate":0,"index":402},{"krate":0,"index":722},{"krate":0,"index":729},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":404}],"decl_id":null,"docs":" Benchmark metrics.\n","sig":null,"attributes":[{"value":"! Benchmark metrics.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84372,"byte_end":84394,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84480,"byte_end":84486,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Metric","qualname":"::helpers::metrics::Metric","value":"Metric {  }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84549,"byte_end":84552,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<Metric>::new","value":"fn (value: f64, noise: f64) -> Metric","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84669,"byte_end":84678,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"MetricMap","qualname":"::helpers::metrics::MetricMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84735,"byte_end":84738,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MetricMap>::new","value":"fn () -> MetricMap","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85567,"byte_end":85580,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"insert_metric","qualname":"<MetricMap>::insert_metric","value":"fn (&mut self, name: &str, value: f64, noise: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert a named `value` (+/- `noise`) metric into the map. The value\n must be non-negative. The `noise` indicates the uncertainty of the\n metric, which doubles as the \"noise range\" of acceptable\n pairwise-regressions on this named value, when comparing from one\n metric to the next using `compare_to_old`.","sig":null,"attributes":[{"value":"/ Insert a named `value` (+/- `noise`) metric into the map. The value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84802,"byte_end":84873,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ must be non-negative. The `noise` indicates the uncertainty of the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84878,"byte_end":84948,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ metric, which doubles as the \"noise range\" of acceptable","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84953,"byte_end":85013,"line_start":26,"line_end":26,"column_start":5,"column_end":65}},{"value":"/ pairwise-regressions on this named value, when comparing from one","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85018,"byte_end":85087,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ metric to the next using `compare_to_old`.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85092,"byte_end":85138,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85143,"byte_end":85146,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If `noise` is positive, then it means this metric is of a value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85151,"byte_end":85218,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ you want to see grow smaller, so a change larger than `noise` in the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85223,"byte_end":85295,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ positive direction represents a regression.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85300,"byte_end":85347,"line_start":32,"line_end":32,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85352,"byte_end":85355,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If `noise` is negative, then it means this metric is of a value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85360,"byte_end":85427,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ you want to see grow larger, so a change larger than `noise` in the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85432,"byte_end":85503,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ negative direction represents a regression.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85508,"byte_end":85555,"line_start":36,"line_end":36,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85732,"byte_end":85743,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"fmt_metrics","qualname":"<MetricMap>::fmt_metrics","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":409},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::helpers::sink","value":"src/libtest/helpers/sink.rs","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":421}],"decl_id":null,"docs":" Module providing a helper structure to capture output in subprocesses.\n","sig":null,"attributes":[{"value":"! Module providing a helper structure to capture output in subprocesses.","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":85959,"byte_end":86033,"line_start":1,"line_end":1,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86117,"byte_end":86121,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::helpers::sink::Sink","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86168,"byte_end":86177,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<Sink>::new_boxed","value":"fn (data: &Arc<Mutex<Vec<u8>>>) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":732},"span":{"file_name":"src/libtest/options.rs","byte_start":86648,"byte_end":86651,"line_start":6,"line_end":6,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::Concurrent::Yes","value":"Concurrent::Yes","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":734},"span":{"file_name":"src/libtest/options.rs","byte_start":86657,"byte_end":86659,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"No","qualname":"::options::Concurrent::No","value":"Concurrent::No","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":731},"span":{"file_name":"src/libtest/options.rs","byte_start":86631,"byte_end":86641,"line_start":5,"line_end":5,"column_start":10,"column_end":20},"name":"Concurrent","qualname":"::options::Concurrent","value":"Concurrent::{Yes, No}","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734}],"decl_id":null,"docs":" Whether to execute tests concurrently or not\n","sig":null,"attributes":[{"value":"/ Whether to execute tests concurrently or not","span":{"file_name":"src/libtest/options.rs","byte_start":86528,"byte_end":86576,"line_start":3,"line_end":3,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"src/libtest/options.rs","byte_start":86771,"byte_end":86775,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Auto","qualname":"::options::BenchMode::Auto","value":"BenchMode::Auto","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":750},"span":{"file_name":"src/libtest/options.rs","byte_start":86781,"byte_end":86787,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Single","qualname":"::options::BenchMode::Single","value":"BenchMode::Single","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":747},"span":{"file_name":"src/libtest/options.rs","byte_start":86755,"byte_end":86764,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"BenchMode","qualname":"::options::BenchMode","value":"BenchMode::{Auto, Single}","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":750}],"decl_id":null,"docs":" Number of times to run a benchmarked function\n","sig":null,"attributes":[{"value":"/ Number of times to run a benchmarked function","span":{"file_name":"src/libtest/options.rs","byte_start":86664,"byte_end":86713,"line_start":10,"line_end":10,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":"src/libtest/options.rs","byte_start":86915,"byte_end":86917,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"No","qualname":"::options::ShouldPanic::No","value":"ShouldPanic::No","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"src/libtest/options.rs","byte_start":86923,"byte_end":86926,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::ShouldPanic::Yes","value":"ShouldPanic::Yes","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"src/libtest/options.rs","byte_start":86932,"byte_end":86946,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"YesWithMessage","qualname":"::options::ShouldPanic::YesWithMessage","value":"ShouldPanic::YesWithMessage(&'static str)","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":760},"span":{"file_name":"src/libtest/options.rs","byte_start":86897,"byte_end":86908,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"name":"ShouldPanic","qualname":"::options::ShouldPanic","value":"ShouldPanic::{No, Yes, YesWithMessage}","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" Whether test is expected to panic or not\n","sig":null,"attributes":[{"value":"/ Whether test is expected to panic or not","span":{"file_name":"src/libtest/options.rs","byte_start":86792,"byte_end":86836,"line_start":17,"line_end":17,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"src/libtest/options.rs","byte_start":87074,"byte_end":87083,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"AutoColor","qualname":"::options::ColorConfig::AutoColor","value":"ColorConfig::AutoColor","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":786},"span":{"file_name":"src/libtest/options.rs","byte_start":87089,"byte_end":87100,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"AlwaysColor","qualname":"::options::ColorConfig::AlwaysColor","value":"ColorConfig::AlwaysColor","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"src/libtest/options.rs","byte_start":87106,"byte_end":87116,"line_start":30,"line_end":30,"column_start":5,"column_end":15},"name":"NeverColor","qualname":"::options::ColorConfig::NeverColor","value":"ColorConfig::NeverColor","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":783},"span":{"file_name":"src/libtest/options.rs","byte_start":87056,"byte_end":87067,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"name":"ColorConfig","qualname":"::options::ColorConfig","value":"ColorConfig::{AutoColor, AlwaysColor, NeverColor}","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788}],"decl_id":null,"docs":" Whether should console output be colored or not\n","sig":null,"attributes":[{"value":"/ Whether should console output be colored or not","span":{"file_name":"src/libtest/options.rs","byte_start":86965,"byte_end":87016,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"src/libtest/options.rs","byte_start":87255,"byte_end":87261,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Pretty","qualname":"::options::OutputFormat::Pretty","value":"OutputFormat::Pretty","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Verbose output\n","sig":null,"attributes":[{"value":"/ Verbose output","span":{"file_name":"src/libtest/options.rs","byte_start":87232,"byte_end":87250,"line_start":36,"line_end":36,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":798},"span":{"file_name":"src/libtest/options.rs","byte_start":87288,"byte_end":87293,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"Terse","qualname":"::options::OutputFormat::Terse","value":"OutputFormat::Terse","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Quiet output\n","sig":null,"attributes":[{"value":"/ Quiet output","span":{"file_name":"src/libtest/options.rs","byte_start":87267,"byte_end":87283,"line_start":38,"line_end":38,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":800},"span":{"file_name":"src/libtest/options.rs","byte_start":87319,"byte_end":87323,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Json","qualname":"::options::OutputFormat::Json","value":"OutputFormat::Json","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" JSON output\n","sig":null,"attributes":[{"value":"/ JSON output","span":{"file_name":"src/libtest/options.rs","byte_start":87299,"byte_end":87314,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":795},"span":{"file_name":"src/libtest/options.rs","byte_start":87213,"byte_end":87225,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"OutputFormat","qualname":"::options::OutputFormat","value":"OutputFormat::{Pretty, Terse, Json}","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800}],"decl_id":null,"docs":" Format of the test results output\n","sig":null,"attributes":[{"value":"/ Format of the test results output","span":{"file_name":"src/libtest/options.rs","byte_start":87121,"byte_end":87158,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"src/libtest/options.rs","byte_start":87448,"byte_end":87451,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::RunIgnored::Yes","value":"RunIgnored::Yes","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"src/libtest/options.rs","byte_start":87457,"byte_end":87459,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"No","qualname":"::options::RunIgnored::No","value":"RunIgnored::No","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":818},"span":{"file_name":"src/libtest/options.rs","byte_start":87496,"byte_end":87500,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Only","qualname":"::options::RunIgnored::Only","value":"RunIgnored::Only","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Run only ignored tests\n","sig":null,"attributes":[{"value":"/ Run only ignored tests","span":{"file_name":"src/libtest/options.rs","byte_start":87465,"byte_end":87491,"line_start":49,"line_end":49,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":813},"span":{"file_name":"src/libtest/options.rs","byte_start":87431,"byte_end":87441,"line_start":46,"line_end":46,"column_start":10,"column_end":20},"name":"RunIgnored","qualname":"::options::RunIgnored","value":"RunIgnored::{Yes, No, Only}","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818}],"decl_id":null,"docs":" Whether ignored test should be runned or not\n","sig":null,"attributes":[{"value":"/ Whether ignored test should be runned or not","span":{"file_name":"src/libtest/options.rs","byte_start":87328,"byte_end":87376,"line_start":44,"line_end":44,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":832},"span":{"file_name":"src/libtest/options.rs","byte_start":87662,"byte_end":87671,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"InProcess","qualname":"::options::RunStrategy::InProcess","value":"RunStrategy::InProcess","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":" Runs the test in the current process, and sends the result back over the\n supplied channel.\n","sig":null,"attributes":[{"value":"/ Runs the test in the current process, and sends the result back over the","span":{"file_name":"src/libtest/options.rs","byte_start":87555,"byte_end":87631,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ supplied channel.","span":{"file_name":"src/libtest/options.rs","byte_start":87636,"byte_end":87657,"line_start":56,"line_end":56,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":834},"span":{"file_name":"src/libtest/options.rs","byte_start":87870,"byte_end":87882,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"SpawnPrimary","qualname":"::options::RunStrategy::SpawnPrimary","value":"RunStrategy::SpawnPrimary","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":" Spawns a subprocess to run the test, and sends the result back over the\n supplied channel. Requires `argv[0]` to exist and point to the binary\n that's currently running.\n","sig":null,"attributes":[{"value":"/ Spawns a subprocess to run the test, and sends the result back over the","span":{"file_name":"src/libtest/options.rs","byte_start":87678,"byte_end":87753,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ supplied channel. Requires `argv[0]` to exist and point to the binary","span":{"file_name":"src/libtest/options.rs","byte_start":87758,"byte_end":87831,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that's currently running.","span":{"file_name":"src/libtest/options.rs","byte_start":87836,"byte_end":87865,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":831},"span":{"file_name":"src/libtest/options.rs","byte_start":87537,"byte_end":87548,"line_start":54,"line_end":54,"column_start":10,"column_end":21},"name":"RunStrategy","qualname":"::options::RunStrategy","value":"RunStrategy::{InProcess, SpawnPrimary}","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"src/libtest/options.rs","byte_start":88087,"byte_end":88094,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Options","qualname":"::options::Options","value":"Options { display_output, panic_abort }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" Options for the test run defined by the caller (instead of CLI arguments).\n In case we want to add other options as well, just add them in this struct.\n","sig":null,"attributes":[{"value":"/ Options for the test run defined by the caller (instead of CLI arguments).","span":{"file_name":"src/libtest/options.rs","byte_start":87887,"byte_end":87965,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ In case we want to add other options as well, just add them in this struct.","span":{"file_name":"src/libtest/options.rs","byte_start":87966,"byte_end":88045,"line_start":66,"line_end":66,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"src/libtest/options.rs","byte_start":88105,"byte_end":88119,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"name":"display_output","qualname":"::options::Options::display_output","value":"bool","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"src/libtest/options.rs","byte_start":88135,"byte_end":88146,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"name":"panic_abort","qualname":"::options::Options::panic_abort","value":"bool","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"src/libtest/options.rs","byte_start":88183,"byte_end":88186,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Options>::new","value":"fn () -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"src/libtest/options.rs","byte_start":88282,"byte_end":88296,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"display_output","qualname":"<Options>::display_output","value":"fn (mut self, display_output: bool) -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"src/libtest/options.rs","byte_start":88419,"byte_end":88430,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"panic_abort","qualname":"<Options>::panic_abort","value":"fn (mut self, panic_abort: bool) -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"src/libtest/stats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stats","qualname":"::stats","value":"src/libtest/stats.rs","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":847},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":860},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":473},{"krate":0,"index":474}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"src/libtest/stats.rs","byte_start":88535,"byte_end":88558,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"allow(deprecated)","span":{"file_name":"src/libtest/stats.rs","byte_start":88559,"byte_end":88580,"line_start":2,"line_end":2,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":439},"span":{"file_name":"src/libtest/stats.rs","byte_start":89169,"byte_end":89174,"line_start":30,"line_end":30,"column_start":11,"column_end":16},"name":"Stats","qualname":"::stats::Stats","value":"Stats","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Trait that provides simple descriptive statistics on a univariate set of numeric samples.\n","sig":null,"attributes":[{"value":"/ Trait that provides simple descriptive statistics on a univariate set of numeric samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89065,"byte_end":89158,"line_start":29,"line_end":29,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"src/libtest/stats.rs","byte_start":89565,"byte_end":89568,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"sum","qualname":"::stats::Stats::sum","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Sum of the samples.","sig":null,"attributes":[{"value":"/ Sum of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89181,"byte_end":89204,"line_start":31,"line_end":31,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":89209,"byte_end":89212,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this method sacrifices performance at the altar of accuracy","span":{"file_name":"src/libtest/stats.rs","byte_start":89217,"byte_end":89286,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/ Depends on IEEE-754 arithmetic guarantees. See proof of correctness at:","span":{"file_name":"src/libtest/stats.rs","byte_start":89291,"byte_end":89366,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ [\"Adaptive Precision Floating-Point Arithmetic and Fast Robust Geometric","span":{"file_name":"src/libtest/stats.rs","byte_start":89371,"byte_end":89447,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ Predicates\"][paper]","span":{"file_name":"src/libtest/stats.rs","byte_start":89452,"byte_end":89475,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":89480,"byte_end":89483,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [paper]: http://www.cs.cmu.edu/~quake-papers/robust-arithmetic.ps","span":{"file_name":"src/libtest/stats.rs","byte_start":89488,"byte_end":89557,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"src/libtest/stats.rs","byte_start":89630,"byte_end":89633,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"min","qualname":"::stats::Stats::min","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Minimum value of the samples.\n","sig":null,"attributes":[{"value":"/ Minimum value of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89589,"byte_end":89622,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"src/libtest/stats.rs","byte_start":89695,"byte_end":89698,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"max","qualname":"::stats::Stats::max","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Maximum value of the samples.\n","sig":null,"attributes":[{"value":"/ Maximum value of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89654,"byte_end":89687,"line_start":44,"line_end":44,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"src/libtest/stats.rs","byte_start":89870,"byte_end":89874,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"mean","qualname":"::stats::Stats::mean","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Arithmetic mean (average) of the samples: sum divided by sample-count.","sig":null,"attributes":[{"value":"/ Arithmetic mean (average) of the samples: sum divided by sample-count.","span":{"file_name":"src/libtest/stats.rs","byte_start":89719,"byte_end":89793,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":89798,"byte_end":89801,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Arithmetic_mean>","span":{"file_name":"src/libtest/stats.rs","byte_start":89806,"byte_end":89862,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"src/libtest/stats.rs","byte_start":90100,"byte_end":90106,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"median","qualname":"::stats::Stats::median","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Median of the samples: value separating the lower half of the samples from the higher half.\n Equal to `self.percentile(50.0)`.","sig":null,"attributes":[{"value":"/ Median of the samples: value separating the lower half of the samples from the higher half.","span":{"file_name":"src/libtest/stats.rs","byte_start":89895,"byte_end":89990,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ Equal to `self.percentile(50.0)`.","span":{"file_name":"src/libtest/stats.rs","byte_start":89995,"byte_end":90032,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90037,"byte_end":90040,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Median>","span":{"file_name":"src/libtest/stats.rs","byte_start":90045,"byte_end":90092,"line_start":55,"line_end":55,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"src/libtest/stats.rs","byte_start":90604,"byte_end":90607,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"var","qualname":"::stats::Stats::var","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Variance of the samples: bias-corrected mean of the squares of the differences of each\n sample from the sample mean. Note that this calculates the _sample variance_ rather than the\n population variance, which is assumed to be unknown. It therefore corrects the `(n-1)/n`\n bias that would appear if we calculated a population variance, by dividing by `(n-1)` rather\n than `n`.","sig":null,"attributes":[{"value":"/ Variance of the samples: bias-corrected mean of the squares of the differences of each","span":{"file_name":"src/libtest/stats.rs","byte_start":90127,"byte_end":90217,"line_start":58,"line_end":58,"column_start":5,"column_end":95}},{"value":"/ sample from the sample mean. Note that this calculates the _sample variance_ rather than the","span":{"file_name":"src/libtest/stats.rs","byte_start":90222,"byte_end":90318,"line_start":59,"line_end":59,"column_start":5,"column_end":101}},{"value":"/ population variance, which is assumed to be unknown. It therefore corrects the `(n-1)/n`","span":{"file_name":"src/libtest/stats.rs","byte_start":90323,"byte_end":90415,"line_start":60,"line_end":60,"column_start":5,"column_end":97}},{"value":"/ bias that would appear if we calculated a population variance, by dividing by `(n-1)` rather","span":{"file_name":"src/libtest/stats.rs","byte_start":90420,"byte_end":90516,"line_start":61,"line_end":61,"column_start":5,"column_end":101}},{"value":"/ than `n`.","span":{"file_name":"src/libtest/stats.rs","byte_start":90521,"byte_end":90534,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90539,"byte_end":90542,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Variance>","span":{"file_name":"src/libtest/stats.rs","byte_start":90547,"byte_end":90596,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"src/libtest/stats.rs","byte_start":90917,"byte_end":90924,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"std_dev","qualname":"::stats::Stats::std_dev","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Standard deviation: the square root of the sample variance.","sig":null,"attributes":[{"value":"/ Standard deviation: the square root of the sample variance.","span":{"file_name":"src/libtest/stats.rs","byte_start":90628,"byte_end":90691,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90696,"byte_end":90699,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note: this is not a robust statistic for non-normal distributions. Prefer the","span":{"file_name":"src/libtest/stats.rs","byte_start":90704,"byte_end":90785,"line_start":69,"line_end":69,"column_start":5,"column_end":86}},{"value":"/ `median_abs_dev` for unknown distributions.","span":{"file_name":"src/libtest/stats.rs","byte_start":90790,"byte_end":90837,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90842,"byte_end":90845,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Standard_deviation>","span":{"file_name":"src/libtest/stats.rs","byte_start":90850,"byte_end":90909,"line_start":72,"line_end":72,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"src/libtest/stats.rs","byte_start":91183,"byte_end":91194,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"std_dev_pct","qualname":"::stats::Stats::std_dev_pct","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Standard deviation as a percent of the mean value. See `std_dev` and `mean`.","sig":null,"attributes":[{"value":"/ Standard deviation as a percent of the mean value. See `std_dev` and `mean`.","span":{"file_name":"src/libtest/stats.rs","byte_start":90945,"byte_end":91025,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":91030,"byte_end":91033,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note: this is not a robust statistic for non-normal distributions. Prefer the","span":{"file_name":"src/libtest/stats.rs","byte_start":91038,"byte_end":91119,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"/ `median_abs_dev_pct` for unknown distributions.","span":{"file_name":"src/libtest/stats.rs","byte_start":91124,"byte_end":91175,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"src/libtest/stats.rs","byte_start":91705,"byte_end":91719,"line_start":88,"line_end":88,"column_start":8,"column_end":22},"name":"median_abs_dev","qualname":"::stats::Stats::median_abs_dev","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Scaled median of the absolute deviations of each sample from the sample median. This is a\n robust (distribution-agnostic) estimator of sample variability. Use this in preference to\n `std_dev` if you cannot assume your sample is normally distributed. Note that this is scaled\n by the constant `1.4826` to allow its use as a consistent estimator for the standard\n deviation.","sig":null,"attributes":[{"value":"/ Scaled median of the absolute deviations of each sample from the sample median. This is a","span":{"file_name":"src/libtest/stats.rs","byte_start":91215,"byte_end":91308,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ robust (distribution-agnostic) estimator of sample variability. Use this in preference to","span":{"file_name":"src/libtest/stats.rs","byte_start":91313,"byte_end":91406,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ `std_dev` if you cannot assume your sample is normally distributed. Note that this is scaled","span":{"file_name":"src/libtest/stats.rs","byte_start":91411,"byte_end":91507,"line_start":83,"line_end":83,"column_start":5,"column_end":101}},{"value":"/ by the constant `1.4826` to allow its use as a consistent estimator for the standard","span":{"file_name":"src/libtest/stats.rs","byte_start":91512,"byte_end":91600,"line_start":84,"line_end":84,"column_start":5,"column_end":93}},{"value":"/ deviation.","span":{"file_name":"src/libtest/stats.rs","byte_start":91605,"byte_end":91619,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":91624,"byte_end":91627,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See: <http://en.wikipedia.org/wiki/Median_absolute_deviation>","span":{"file_name":"src/libtest/stats.rs","byte_start":91632,"byte_end":91697,"line_start":87,"line_end":87,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"src/libtest/stats.rs","byte_start":91840,"byte_end":91858,"line_start":91,"line_end":91,"column_start":8,"column_end":26},"name":"median_abs_dev_pct","qualname":"::stats::Stats::median_abs_dev_pct","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Median absolute deviation as a percent of the median. See `median_abs_dev` and `median`.\n","sig":null,"attributes":[{"value":"/ Median absolute deviation as a percent of the median. See `median_abs_dev` and `median`.","span":{"file_name":"src/libtest/stats.rs","byte_start":91740,"byte_end":91832,"line_start":90,"line_end":90,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"src/libtest/stats.rs","byte_start":92238,"byte_end":92248,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"percentile","qualname":"::stats::Stats::percentile","value":"fn (&self, pct: f64) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Percentile: the value below which `pct` percent of the values in `self` fall. For example,\n percentile(95.0) will return the value `v` such that 95% of the samples `s` in `self`\n satisfy `s <= v`.","sig":null,"attributes":[{"value":"/ Percentile: the value below which `pct` percent of the values in `self` fall. For example,","span":{"file_name":"src/libtest/stats.rs","byte_start":91879,"byte_end":91973,"line_start":93,"line_end":93,"column_start":5,"column_end":99}},{"value":"/ percentile(95.0) will return the value `v` such that 95% of the samples `s` in `self`","span":{"file_name":"src/libtest/stats.rs","byte_start":91978,"byte_end":92067,"line_start":94,"line_end":94,"column_start":5,"column_end":94}},{"value":"/ satisfy `s <= v`.","span":{"file_name":"src/libtest/stats.rs","byte_start":92072,"byte_end":92093,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92098,"byte_end":92101,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Calculated by linear interpolation between closest ranks.","span":{"file_name":"src/libtest/stats.rs","byte_start":92106,"byte_end":92167,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92172,"byte_end":92175,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ See: <http://en.wikipedia.org/wiki/Percentile>","span":{"file_name":"src/libtest/stats.rs","byte_start":92180,"byte_end":92230,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"src/libtest/stats.rs","byte_start":92676,"byte_end":92685,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"quartiles","qualname":"::stats::Stats::quartiles","value":"fn (&self) -> (f64, f64, f64)","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Quartiles of the sample: three values that divide the sample into four equal groups, each\n with 1/4 of the data. The middle value is the median. See `median` and `percentile`. This\n function may calculate the 3 quartiles more efficiently than 3 calls to `percentile`, but\n is otherwise equivalent.","sig":null,"attributes":[{"value":"/ Quartiles of the sample: three values that divide the sample into four equal groups, each","span":{"file_name":"src/libtest/stats.rs","byte_start":92279,"byte_end":92372,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/ with 1/4 of the data. The middle value is the median. See `median` and `percentile`. This","span":{"file_name":"src/libtest/stats.rs","byte_start":92377,"byte_end":92470,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ function may calculate the 3 quartiles more efficiently than 3 calls to `percentile`, but","span":{"file_name":"src/libtest/stats.rs","byte_start":92475,"byte_end":92568,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ is otherwise equivalent.","span":{"file_name":"src/libtest/stats.rs","byte_start":92573,"byte_end":92601,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92606,"byte_end":92609,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See also: <https://en.wikipedia.org/wiki/Quartile>","span":{"file_name":"src/libtest/stats.rs","byte_start":92614,"byte_end":92668,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"src/libtest/stats.rs","byte_start":92952,"byte_end":92955,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"iqr","qualname":"::stats::Stats::iqr","value":"fn (&self) -> f64","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Inter-quartile range: the difference between the 25th percentile (1st quartile) and the 75th\n percentile (3rd quartile). See `quartiles`.","sig":null,"attributes":[{"value":"/ Inter-quartile range: the difference between the 25th percentile (1st quartile) and the 75th","span":{"file_name":"src/libtest/stats.rs","byte_start":92718,"byte_end":92814,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ percentile (3rd quartile). See `quartiles`.","span":{"file_name":"src/libtest/stats.rs","byte_start":92819,"byte_end":92866,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92871,"byte_end":92874,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ See also: <https://en.wikipedia.org/wiki/Interquartile_range>","span":{"file_name":"src/libtest/stats.rs","byte_start":92879,"byte_end":92944,"line_start":113,"line_end":113,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"src/libtest/stats.rs","byte_start":93121,"byte_end":93128,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"Summary","qualname":"::stats::Summary","value":"Summary { sum, min, max, mean, median, var, std_dev, std_dev_pct, median_abs_dev, median_abs_dev_pct, quartiles, iqr }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859}],"decl_id":null,"docs":" Extracted collection of all the summary statistics of a sample set.\n","sig":null,"attributes":[{"value":"/ Extracted collection of all the summary statistics of a sample set.","span":{"file_name":"src/libtest/stats.rs","byte_start":92974,"byte_end":93045,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"allow(missing_docs)","span":{"file_name":"src/libtest/stats.rs","byte_start":93087,"byte_end":93109,"line_start":119,"line_end":119,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":848},"span":{"file_name":"src/libtest/stats.rs","byte_start":93139,"byte_end":93142,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"sum","qualname":"::stats::Summary::sum","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":"src/libtest/stats.rs","byte_start":93157,"byte_end":93160,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"name":"min","qualname":"::stats::Summary::min","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":850},"span":{"file_name":"src/libtest/stats.rs","byte_start":93175,"byte_end":93178,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"max","qualname":"::stats::Summary::max","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":851},"span":{"file_name":"src/libtest/stats.rs","byte_start":93193,"byte_end":93197,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"mean","qualname":"::stats::Summary::mean","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"src/libtest/stats.rs","byte_start":93212,"byte_end":93218,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"median","qualname":"::stats::Summary::median","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":853},"span":{"file_name":"src/libtest/stats.rs","byte_start":93233,"byte_end":93236,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"var","qualname":"::stats::Summary::var","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":854},"span":{"file_name":"src/libtest/stats.rs","byte_start":93251,"byte_end":93258,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"name":"std_dev","qualname":"::stats::Summary::std_dev","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"src/libtest/stats.rs","byte_start":93273,"byte_end":93284,"line_start":128,"line_end":128,"column_start":9,"column_end":20},"name":"std_dev_pct","qualname":"::stats::Summary::std_dev_pct","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"src/libtest/stats.rs","byte_start":93299,"byte_end":93313,"line_start":129,"line_end":129,"column_start":9,"column_end":23},"name":"median_abs_dev","qualname":"::stats::Summary::median_abs_dev","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"src/libtest/stats.rs","byte_start":93328,"byte_end":93346,"line_start":130,"line_end":130,"column_start":9,"column_end":27},"name":"median_abs_dev_pct","qualname":"::stats::Summary::median_abs_dev_pct","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"src/libtest/stats.rs","byte_start":93361,"byte_end":93370,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"quartiles","qualname":"::stats::Summary::quartiles","value":"(f64, f64, f64)","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":"src/libtest/stats.rs","byte_start":93397,"byte_end":93400,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"name":"iqr","qualname":"::stats::Summary::iqr","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"src/libtest/stats.rs","byte_start":93485,"byte_end":93488,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<Summary>::new","value":"fn (samples: &[f64]) -> Summary","parent":null,"children":[],"decl_id":null,"docs":" Construct a new summary of a sample set.\n","sig":null,"attributes":[{"value":"/ Construct a new summary of a sample set.","span":{"file_name":"src/libtest/stats.rs","byte_start":93429,"byte_end":93473,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"src/libtest/stats.rs","byte_start":98789,"byte_end":98798,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"winsorize","qualname":"::stats::winsorize","value":"fn (samples: &mut [f64], pct: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Winsorize a set of samples, replacing values above the `100-pct` percentile\n and below the `pct` percentile with those percentiles themselves. This is a\n way of minimizing the effect of outliers, at the cost of biasing the sample.\n It differs from trimming in that it does not change the number of samples,\n just changes the values of those that are outliers.","sig":null,"attributes":[{"value":"/ Winsorize a set of samples, replacing values above the `100-pct` percentile","span":{"file_name":"src/libtest/stats.rs","byte_start":98350,"byte_end":98429,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ and below the `pct` percentile with those percentiles themselves. This is a","span":{"file_name":"src/libtest/stats.rs","byte_start":98430,"byte_end":98509,"line_start":300,"line_end":300,"column_start":1,"column_end":80}},{"value":"/ way of minimizing the effect of outliers, at the cost of biasing the sample.","span":{"file_name":"src/libtest/stats.rs","byte_start":98510,"byte_end":98590,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ It differs from trimming in that it does not change the number of samples,","span":{"file_name":"src/libtest/stats.rs","byte_start":98591,"byte_end":98669,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ just changes the values of those that are outliers.","span":{"file_name":"src/libtest/stats.rs","byte_start":98670,"byte_end":98725,"line_start":303,"line_end":303,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":98726,"byte_end":98729,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ See: <http://en.wikipedia.org/wiki/Winsorising>","span":{"file_name":"src/libtest/stats.rs","byte_start":98730,"byte_end":98781,"line_start":305,"line_end":305,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":482},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99474,"byte_end":99479,"line_start":13,"line_end":13,"column_start":11,"column_end":16},"name":"TR_OK","qualname":"::test_result::TR_OK","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":483},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99501,"byte_end":99510,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"TR_FAILED","qualname":"::test_result::TR_FAILED","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":870},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99584,"byte_end":99588,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"TrOk","qualname":"::test_result::TestResult::TrOk","value":"TestResult::TrOk","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":872},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99594,"byte_end":99602,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"TrFailed","qualname":"::test_result::TestResult::TrFailed","value":"TestResult::TrFailed","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99608,"byte_end":99619,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"TrFailedMsg","qualname":"::test_result::TestResult::TrFailedMsg","value":"TestResult::TrFailedMsg(String)","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99633,"byte_end":99642,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"TrIgnored","qualname":"::test_result::TestResult::TrIgnored","value":"TestResult::TrIgnored","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99648,"byte_end":99661,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"TrAllowedFail","qualname":"::test_result::TestResult::TrAllowedFail","value":"TestResult::TrAllowedFail","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99667,"byte_end":99674,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"TrBench","qualname":"::test_result::TestResult::TrBench","value":"TestResult::TrBench(BenchSamples)","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":884},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99694,"byte_end":99705,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"TrTimedFail","qualname":"::test_result::TestResult::TrTimedFail","value":"TestResult::TrTimedFail","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":869},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99567,"byte_end":99577,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"TestResult","qualname":"::test_result::TestResult","value":"TestResult::{TrOk, TrFailed, TrFailedMsg, TrIgnored, TrAllowedFail, TrBench, TrTimedFail}","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":884}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99851,"byte_end":99862,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"calc_result","qualname":"::test_result::calc_result","value":"fn <'a> (desc: &TestDesc, task_result: Result<(), &'a (dyn Any + 'static + Send)>, time_opts: &Option<time::TestTimeOptions>, exec_time: &Option<time::TestExecTime>) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TestResult` depending on the raw result of test execution\n and assotiated data.\n","sig":null,"attributes":[{"value":"/ Creates a `TestResult` depending on the raw result of test execution","span":{"file_name":"src/libtest/test_result.rs","byte_start":99746,"byte_end":99818,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ and assotiated data.","span":{"file_name":"src/libtest/test_result.rs","byte_start":99819,"byte_end":99843,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"src/libtest/test_result.rs","byte_start":101946,"byte_end":101971,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"get_result_from_exit_code","qualname":"::test_result::get_result_from_exit_code","value":"fn (desc: &TestDesc, code: i32, time_opts: &Option<time::TestTimeOptions>, exec_time: &Option<time::TestExecTime>) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TestResult` depending on the exit code of test subprocess.\n","sig":null,"attributes":[{"value":"/ Creates a `TestResult` depending on the exit code of test subprocess.","span":{"file_name":"src/libtest/test_result.rs","byte_start":101865,"byte_end":101938,"line_start":88,"line_end":88,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":502},"span":{"file_name":"src/libtest/time.rs","byte_start":103196,"byte_end":103215,"line_start":14,"line_end":14,"column_start":11,"column_end":30},"name":"TEST_WARN_TIMEOUT_S","qualname":"::time::TEST_WARN_TIMEOUT_S","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":503},"span":{"file_name":"src/libtest/time.rs","byte_start":103781,"byte_end":103795,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"name":"time_constants","qualname":"::time::time_constants","value":"src/libtest/time.rs","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" This small module contains constants used by `report-time` option.\n Those constants values will be used if corresponding environment variables are not set.","sig":null,"attributes":[{"value":"/ This small module contains constants used by `report-time` option.","span":{"file_name":"src/libtest/time.rs","byte_start":103228,"byte_end":103298,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ Those constants values will be used if corresponding environment variables are not set.","span":{"file_name":"src/libtest/time.rs","byte_start":103299,"byte_end":103390,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":103391,"byte_end":103394,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To override values for unit-tests, use a constant `RUST_TEST_TIME_UNIT`,","span":{"file_name":"src/libtest/time.rs","byte_start":103395,"byte_end":103471,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ To override values for integration tests, use a constant `RUST_TEST_TIME_INTEGRATION`,","span":{"file_name":"src/libtest/time.rs","byte_start":103472,"byte_end":103562,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ To override values for doctests, use a constant `RUST_TEST_TIME_DOCTEST`.","span":{"file_name":"src/libtest/time.rs","byte_start":103563,"byte_end":103640,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":103641,"byte_end":103644,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Example of the expected format is `RUST_TEST_TIME_xxx=100,200`, where 100 means","span":{"file_name":"src/libtest/time.rs","byte_start":103645,"byte_end":103728,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/ warn time, and 200 means critical time.","span":{"file_name":"src/libtest/time.rs","byte_start":103729,"byte_end":103772,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":506},"span":{"file_name":"src/libtest/time.rs","byte_start":103956,"byte_end":103969,"line_start":30,"line_end":30,"column_start":15,"column_end":28},"name":"UNIT_ENV_NAME","qualname":"::time::time_constants::UNIT_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":103868,"byte_end":103941,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":507},"span":{"file_name":"src/libtest/time.rs","byte_start":104067,"byte_end":104076,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"UNIT_WARN","qualname":"::time::time_constants::UNIT_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":508},"span":{"file_name":"src/libtest/time.rs","byte_start":104130,"byte_end":104143,"line_start":34,"line_end":34,"column_start":15,"column_end":28},"name":"UNIT_CRITICAL","qualname":"::time::time_constants::UNIT_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":509},"span":{"file_name":"src/libtest/time.rs","byte_start":104277,"byte_end":104297,"line_start":37,"line_end":37,"column_start":15,"column_end":35},"name":"INTEGRATION_ENV_NAME","qualname":"::time::time_constants::INTEGRATION_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":104189,"byte_end":104262,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":510},"span":{"file_name":"src/libtest/time.rs","byte_start":104436,"byte_end":104452,"line_start":40,"line_end":40,"column_start":15,"column_end":31},"name":"INTEGRATION_WARN","qualname":"::time::time_constants::INTEGRATION_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":511},"span":{"file_name":"src/libtest/time.rs","byte_start":104507,"byte_end":104527,"line_start":41,"line_end":41,"column_start":15,"column_end":35},"name":"INTEGRATION_CRITICAL","qualname":"::time::time_constants::INTEGRATION_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":512},"span":{"file_name":"src/libtest/time.rs","byte_start":104662,"byte_end":104678,"line_start":44,"line_end":44,"column_start":15,"column_end":31},"name":"DOCTEST_ENV_NAME","qualname":"::time::time_constants::DOCTEST_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":104574,"byte_end":104647,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":513},"span":{"file_name":"src/libtest/time.rs","byte_start":104840,"byte_end":104852,"line_start":48,"line_end":48,"column_start":15,"column_end":27},"name":"DOCTEST_WARN","qualname":"::time::time_constants::DOCTEST_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":514},"span":{"file_name":"src/libtest/time.rs","byte_start":104897,"byte_end":104913,"line_start":49,"line_end":49,"column_start":15,"column_end":31},"name":"DOCTEST_CRITICAL","qualname":"::time::time_constants::DOCTEST_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":515},"span":{"file_name":"src/libtest/time.rs","byte_start":105073,"byte_end":105085,"line_start":53,"line_end":53,"column_start":15,"column_end":27},"name":"UNKNOWN_WARN","qualname":"::time::time_constants::UNKNOWN_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":516},"span":{"file_name":"src/libtest/time.rs","byte_start":105154,"byte_end":105170,"line_start":54,"line_end":54,"column_start":15,"column_end":31},"name":"UNKNOWN_CRITICAL","qualname":"::time::time_constants::UNKNOWN_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"src/libtest/time.rs","byte_start":105331,"byte_end":105355,"line_start":59,"line_end":59,"column_start":8,"column_end":32},"name":"get_default_test_timeout","qualname":"::time::get_default_test_timeout","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instance` object denoting when the test should be considered\n timed out.\n","sig":null,"attributes":[{"value":"/ Returns an `Instance` object denoting when the test should be considered","span":{"file_name":"src/libtest/time.rs","byte_start":105232,"byte_end":105308,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ timed out.","span":{"file_name":"src/libtest/time.rs","byte_start":105309,"byte_end":105323,"line_start":58,"line_end":58,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":894},"span":{"file_name":"src/libtest/time.rs","byte_start":105531,"byte_end":105543,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"TestExecTime","qualname":"::time::TestExecTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" The meassured execution time of a unit test.\n","sig":null,"attributes":[{"value":"/ The meassured execution time of a unit test.","span":{"file_name":"src/libtest/time.rs","byte_start":105436,"byte_end":105484,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"src/libtest/time.rs","byte_start":105839,"byte_end":105852,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"TimeThreshold","qualname":"::time::TimeThreshold","value":"TimeThreshold { warn, critical }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" Structure denoting time limits for test execution.\n","sig":null,"attributes":[{"value":"/ Structure denoting time limits for test execution.","span":{"file_name":"src/libtest/time.rs","byte_start":105719,"byte_end":105773,"line_start":73,"line_end":73,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":906},"span":{"file_name":"src/libtest/time.rs","byte_start":105863,"byte_end":105867,"line_start":76,"line_end":76,"column_start":9,"column_end":13},"name":"warn","qualname":"::time::TimeThreshold::warn","value":"std::time::Duration","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":907},"span":{"file_name":"src/libtest/time.rs","byte_start":105887,"byte_end":105895,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"critical","qualname":"::time::TimeThreshold::critical","value":"std::time::Duration","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"src/libtest/time.rs","byte_start":106014,"byte_end":106017,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<TimeThreshold>::new","value":"fn (warn: Duration, critical: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimeThreshold` instance with provided durations.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimeThreshold` instance with provided durations.","span":{"file_name":"src/libtest/time.rs","byte_start":105935,"byte_end":106002,"line_start":81,"line_end":81,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"src/libtest/time.rs","byte_start":106479,"byte_end":106491,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"from_env_var","qualname":"<TimeThreshold>::from_env_var","value":"fn (env_var_name: &str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a `TimeThreshold` instance with values obtained\n from the environment variable, and returns `None` if the variable\n is not set.\n Environment variable format is expected to match `\\d+,\\d+`.","sig":null,"attributes":[{"value":"/ Attempts to create a `TimeThreshold` instance with values obtained","span":{"file_name":"src/libtest/time.rs","byte_start":106107,"byte_end":106177,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ from the environment variable, and returns `None` if the variable","span":{"file_name":"src/libtest/time.rs","byte_start":106182,"byte_end":106251,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ is not set.","span":{"file_name":"src/libtest/time.rs","byte_start":106256,"byte_end":106271,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/ Environment variable format is expected to match `\\d+,\\d+`.","span":{"file_name":"src/libtest/time.rs","byte_start":106276,"byte_end":106339,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":106344,"byte_end":106347,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libtest/time.rs","byte_start":106352,"byte_end":106364,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":106369,"byte_end":106372,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Panics if variable with provided name is set but contains inappropriate","span":{"file_name":"src/libtest/time.rs","byte_start":106377,"byte_end":106452,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"src/libtest/time.rs","byte_start":106457,"byte_end":106467,"line_start":94,"line_end":94,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"src/libtest/time.rs","byte_start":107848,"byte_end":107863,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"TestTimeOptions","qualname":"::time::TestTimeOptions","value":"TestTimeOptions { error_on_excess, colored, unit_threshold, integration_threshold, doctest_threshold }","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"decl_id":null,"docs":" Structure with parameters for calculating test execution time.\n","sig":null,"attributes":[{"value":"/ Structure with parameters for calculating test execution time.","span":{"file_name":"src/libtest/time.rs","byte_start":107716,"byte_end":107782,"line_start":129,"line_end":129,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":923},"span":{"file_name":"src/libtest/time.rs","byte_start":107984,"byte_end":107999,"line_start":134,"line_end":134,"column_start":9,"column_end":24},"name":"error_on_excess","qualname":"::time::TestTimeOptions::error_on_excess","value":"bool","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" Denotes if the test critical execution time limit excess should be considered\n a test failure.\n","sig":null,"attributes":[{"value":"/ Denotes if the test critical execution time limit excess should be considered","span":{"file_name":"src/libtest/time.rs","byte_start":107870,"byte_end":107951,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/ a test failure.","span":{"file_name":"src/libtest/time.rs","byte_start":107956,"byte_end":107975,"line_start":133,"line_end":133,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":924},"span":{"file_name":"src/libtest/time.rs","byte_start":108015,"byte_end":108022,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"colored","qualname":"::time::TestTimeOptions::colored","value":"bool","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"src/libtest/time.rs","byte_start":108038,"byte_end":108052,"line_start":136,"line_end":136,"column_start":9,"column_end":23},"name":"unit_threshold","qualname":"::time::TestTimeOptions::unit_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"src/libtest/time.rs","byte_start":108077,"byte_end":108098,"line_start":137,"line_end":137,"column_start":9,"column_end":30},"name":"integration_threshold","qualname":"::time::TestTimeOptions::integration_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"src/libtest/time.rs","byte_start":108123,"byte_end":108140,"line_start":138,"line_end":138,"column_start":9,"column_end":26},"name":"doctest_threshold","qualname":"::time::TestTimeOptions::doctest_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"src/libtest/time.rs","byte_start":108194,"byte_end":108206,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"new_from_env","qualname":"<TestTimeOptions>::new_from_env","value":"fn (error_on_excess: bool, colored: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"src/libtest/time.rs","byte_start":108833,"byte_end":108840,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"is_warn","qualname":"<TestTimeOptions>::is_warn","value":"fn (&self, test: &TestDesc, exec_time: &TestExecTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"src/libtest/time.rs","byte_start":108963,"byte_end":108974,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"is_critical","qualname":"<TestTimeOptions>::is_critical","value":"fn (&self, test: &TestDesc, exec_time: &TestExecTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"src/libtest/types.rs","byte_start":110716,"byte_end":110724,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"UnitTest","qualname":"::types::TestType::UnitTest","value":"TestType::UnitTest","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Unit-tests are expected to be in the `src` folder of the crate.\n","sig":null,"attributes":[{"value":"/ Unit-tests are expected to be in the `src` folder of the crate.","span":{"file_name":"src/libtest/types.rs","byte_start":110644,"byte_end":110711,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"src/libtest/types.rs","byte_start":110817,"byte_end":110832,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"IntegrationTest","qualname":"::types::TestType::IntegrationTest","value":"TestType::IntegrationTest","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Integration-style tests are expected to be in the `tests` folder of the crate.\n","sig":null,"attributes":[{"value":"/ Integration-style tests are expected to be in the `tests` folder of the crate.","span":{"file_name":"src/libtest/types.rs","byte_start":110730,"byte_end":110812,"line_start":19,"line_end":19,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"src/libtest/types.rs","byte_start":110931,"byte_end":110938,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"DocTest","qualname":"::types::TestType::DocTest","value":"TestType::DocTest","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Doctests are created by the `librustdoc` manually, so it's a different type of test.\n","sig":null,"attributes":[{"value":"/ Doctests are created by the `librustdoc` manually, so it's a different type of test.","span":{"file_name":"src/libtest/types.rs","byte_start":110838,"byte_end":110926,"line_start":21,"line_end":21,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"src/libtest/types.rs","byte_start":111105,"byte_end":111112,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::types::TestType::Unknown","value":"TestType::Unknown","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Tests for the sources that don't follow the project layout convention\n (e.g. tests in raw `main.rs` compiled by calling `rustc --test` directly).\n","sig":null,"attributes":[{"value":"/ Tests for the sources that don't follow the project layout convention","span":{"file_name":"src/libtest/types.rs","byte_start":110944,"byte_end":111017,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ (e.g. tests in raw `main.rs` compiled by calling `rustc --test` directly).","span":{"file_name":"src/libtest/types.rs","byte_start":111022,"byte_end":111100,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":942},"span":{"file_name":"src/libtest/types.rs","byte_start":110629,"byte_end":110637,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"TestType","qualname":"::types::TestType","value":"TestType::{UnitTest, IntegrationTest, DocTest, Unknown}","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949}],"decl_id":null,"docs":" Type of the test according to the [rust book](https://doc.rust-lang.org/cargo/guide/tests.html)\n conventions.\n","sig":null,"attributes":[{"value":"/ Type of the test according to the [rust book](https://doc.rust-lang.org/cargo/guide/tests.html)","span":{"file_name":"src/libtest/types.rs","byte_start":110452,"byte_end":110551,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ conventions.","span":{"file_name":"src/libtest/types.rs","byte_start":110552,"byte_end":110568,"line_start":14,"line_end":14,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"src/libtest/types.rs","byte_start":111195,"byte_end":111202,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"PadNone","qualname":"::types::NamePadding::PadNone","value":"NamePadding::PadNone","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"src/libtest/types.rs","byte_start":111208,"byte_end":111218,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"PadOnRight","qualname":"::types::NamePadding::PadOnRight","value":"NamePadding::PadOnRight","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":965},"span":{"file_name":"src/libtest/types.rs","byte_start":111177,"byte_end":111188,"line_start":29,"line_end":29,"column_start":10,"column_end":21},"name":"NamePadding","qualname":"::types::NamePadding","value":"NamePadding::{PadNone, PadOnRight}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"src/libtest/types.rs","byte_start":111527,"byte_end":111541,"line_start":40,"line_end":40,"column_start":5,"column_end":19},"name":"StaticTestName","qualname":"::types::TestName::StaticTestName","value":"TestName::StaticTestName(&'static str)","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"src/libtest/types.rs","byte_start":111561,"byte_end":111572,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"DynTestName","qualname":"::types::TestName::DynTestName","value":"TestName::DynTestName(String)","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"src/libtest/types.rs","byte_start":111586,"byte_end":111601,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"name":"AlignedTestName","qualname":"::types::TestName::AlignedTestName","value":"TestName::AlignedTestName(Cow<'static, str>, NamePadding)","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":984},"span":{"file_name":"src/libtest/types.rs","byte_start":111512,"byte_end":111520,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"TestName","qualname":"::types::TestName","value":"TestName::{StaticTestName, DynTestName, AlignedTestName}","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"src/libtest/types.rs","byte_start":111665,"byte_end":111673,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<TestName>::as_slice","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"src/libtest/types.rs","byte_start":111860,"byte_end":111867,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"padding","qualname":"<TestName>::padding","value":"fn (&self) -> NamePadding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"src/libtest/types.rs","byte_start":112008,"byte_end":112020,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"with_padding","qualname":"<TestName>::with_padding","value":"fn (&self, padding: NamePadding) -> TestName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"src/libtest/types.rs","byte_start":112574,"byte_end":112585,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"TDynBenchFn","qualname":"::types::TDynBenchFn","value":"TDynBenchFn: Send","parent":null,"children":[{"krate":0,"index":550}],"decl_id":null,"docs":" Represents a benchmark function.\n","sig":null,"attributes":[{"value":"/ Represents a benchmark function.","span":{"file_name":"src/libtest/types.rs","byte_start":112527,"byte_end":112563,"line_start":77,"line_end":77,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"src/libtest/types.rs","byte_start":112601,"byte_end":112604,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"run","qualname":"::types::TDynBenchFn::run","value":"fn (&self, harness: &mut Bencher) -> ()","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":552},"span":{"file_name":"src/libtest/types.rs","byte_start":112917,"byte_end":112929,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"StaticTestFn","qualname":"::types::TestFn::StaticTestFn","value":"TestFn::StaticTestFn(fn())","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"src/libtest/types.rs","byte_start":112941,"byte_end":112954,"line_start":88,"line_end":88,"column_start":5,"column_end":18},"name":"StaticBenchFn","qualname":"::types::TestFn::StaticBenchFn","value":"TestFn::StaticBenchFn(fn(&mut Bencher))","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"src/libtest/types.rs","byte_start":112978,"byte_end":112987,"line_start":89,"line_end":89,"column_start":5,"column_end":14},"name":"DynTestFn","qualname":"::types::TestFn::DynTestFn","value":"TestFn::DynTestFn(Box<dyn FnOnce() + Send>)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"src/libtest/types.rs","byte_start":113019,"byte_end":113029,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"DynBenchFn","qualname":"::types::TestFn::DynBenchFn","value":"TestFn::DynBenchFn(Box<dyn TDynBenchFn + 'static>)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":551},"span":{"file_name":"src/libtest/types.rs","byte_start":112904,"byte_end":112910,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"TestFn","qualname":"::types::TestFn","value":"TestFn::{StaticTestFn, StaticBenchFn, DynTestFn, DynBenchFn}","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"src/libtest/types.rs","byte_start":113091,"byte_end":113098,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"padding","qualname":"<TestFn>::padding","value":"fn (&self) -> NamePadding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"src/libtest/types.rs","byte_start":113811,"byte_end":113819,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"TestDesc","qualname":"::types::TestDesc","value":"TestDesc { name, ignore, should_panic, allow_fail, test_type }","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1010},"span":{"file_name":"src/libtest/types.rs","byte_start":113830,"byte_end":113834,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"name","qualname":"::types::TestDesc::name","value":"types::TestName","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1011},"span":{"file_name":"src/libtest/types.rs","byte_start":113854,"byte_end":113860,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"ignore","qualname":"::types::TestDesc::ignore","value":"bool","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1012},"span":{"file_name":"src/libtest/types.rs","byte_start":113876,"byte_end":113888,"line_start":121,"line_end":121,"column_start":9,"column_end":21},"name":"should_panic","qualname":"::types::TestDesc::should_panic","value":"options::ShouldPanic","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1013},"span":{"file_name":"src/libtest/types.rs","byte_start":113920,"byte_end":113930,"line_start":122,"line_end":122,"column_start":9,"column_end":19},"name":"allow_fail","qualname":"::types::TestDesc::allow_fail","value":"bool","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1014},"span":{"file_name":"src/libtest/types.rs","byte_start":113946,"byte_end":113955,"line_start":123,"line_end":123,"column_start":9,"column_end":18},"name":"test_type","qualname":"::types::TestDesc::test_type","value":"types::TestType","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"src/libtest/types.rs","byte_start":113997,"byte_end":114008,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"padded_name","qualname":"<TestDesc>::padded_name","value":"fn (&self, column_count: usize, align: NamePadding) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"src/libtest/types.rs","byte_start":114422,"byte_end":114435,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"TestDescAndFn","qualname":"::types::TestDescAndFn","value":"TestDescAndFn { desc, testfn }","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1030},"span":{"file_name":"src/libtest/types.rs","byte_start":114446,"byte_end":114450,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"name":"desc","qualname":"::types::TestDescAndFn::desc","value":"types::TestDesc","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1031},"span":{"file_name":"src/libtest/types.rs","byte_start":114470,"byte_end":114476,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"testfn","qualname":"::types::TestDescAndFn::testfn","value":"types::TestFn","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"src/libtest/lib.rs","byte_start":3213,"byte_end":3222,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"test_main","qualname":"::test_main","value":"fn (args: &[String], tests: Vec<TestDescAndFn>, options: Option<Options>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":"src/libtest/lib.rs","byte_start":4385,"byte_end":4401,"line_start":138,"line_end":138,"column_start":8,"column_end":24},"name":"test_main_static","qualname":"::test_main_static","value":"fn (tests: &[&TestDescAndFn]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A variant optimized for invocation with a static test vector.\n This will panic (intentionally) when fed any dynamic tests.","sig":null,"attributes":[{"value":"/ A variant optimized for invocation with a static test vector.","span":{"file_name":"src/libtest/lib.rs","byte_start":4143,"byte_end":4208,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ This will panic (intentionally) when fed any dynamic tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4209,"byte_end":4272,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4273,"byte_end":4276,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ This is the entry point for the main function generated by `rustc --test`","span":{"file_name":"src/libtest/lib.rs","byte_start":4277,"byte_end":4354,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/ when panic=unwind.","span":{"file_name":"src/libtest/lib.rs","byte_start":4355,"byte_end":4377,"line_start":137,"line_end":137,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"src/libtest/lib.rs","byte_start":4929,"byte_end":4951,"line_start":152,"line_end":152,"column_start":8,"column_end":30},"name":"test_main_static_abort","qualname":"::test_main_static_abort","value":"fn (tests: &[&TestDescAndFn]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A variant optimized for invocation with a static test vector.\n This will panic (intentionally) when fed any dynamic tests.","sig":null,"attributes":[{"value":"/ A variant optimized for invocation with a static test vector.","span":{"file_name":"src/libtest/lib.rs","byte_start":4596,"byte_end":4661,"line_start":144,"line_end":144,"column_start":1,"column_end":66}},{"value":"/ This will panic (intentionally) when fed any dynamic tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4662,"byte_end":4725,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4726,"byte_end":4729,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Runs tests in panic=abort mode, which involves spawning subprocesses for","span":{"file_name":"src/libtest/lib.rs","byte_start":4730,"byte_end":4806,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4807,"byte_end":4817,"line_start":148,"line_end":148,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4818,"byte_end":4821,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This is the entry point for the main function generated by `rustc --test`","span":{"file_name":"src/libtest/lib.rs","byte_start":4822,"byte_end":4899,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ when panic=abort.","span":{"file_name":"src/libtest/lib.rs","byte_start":4900,"byte_end":4921,"line_start":151,"line_end":151,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"src/libtest/lib.rs","byte_start":6680,"byte_end":6698,"line_start":191,"line_end":191,"column_start":8,"column_end":26},"name":"assert_test_result","qualname":"::assert_test_result","value":"fn <T> (result: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invoked when unit tests terminate. Should panic if the unit\n Tests is considered a failure. By default, invokes `report()`\n and checks for a `0` result.\n","sig":null,"attributes":[{"value":"/ Invoked when unit tests terminate. Should panic if the unit","span":{"file_name":"src/libtest/lib.rs","byte_start":6510,"byte_end":6573,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/ Tests is considered a failure. By default, invokes `report()`","span":{"file_name":"src/libtest/lib.rs","byte_start":6574,"byte_end":6639,"line_start":189,"line_end":189,"column_start":1,"column_end":66}},{"value":"/ and checks for a `0` result.","span":{"file_name":"src/libtest/lib.rs","byte_start":6640,"byte_end":6672,"line_start":190,"line_end":190,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"src/libtest/lib.rs","byte_start":6942,"byte_end":6951,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"run_tests","qualname":"::run_tests","value":"fn <F> (opts: &TestOpts, tests: Vec<TestDescAndFn>, mut notify_about_test_event: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"src/libtest/lib.rs","byte_start":12229,"byte_end":12241,"line_start":353,"line_end":353,"column_start":8,"column_end":20},"name":"filter_tests","qualname":"::filter_tests","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> Vec<TestDescAndFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"src/libtest/lib.rs","byte_start":13577,"byte_end":13604,"line_start":395,"line_end":395,"column_start":8,"column_end":35},"name":"convert_benchmarks_to_tests","qualname":"::convert_benchmarks_to_tests","value":"fn (tests: Vec<TestDescAndFn>) -> Vec<TestDescAndFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":623},"span":{"file_name":"src/libtest/lib.rs","byte_start":14296,"byte_end":14304,"line_start":414,"line_end":414,"column_start":8,"column_end":16},"name":"run_test","qualname":"::run_test","value":"fn (opts: &TestOpts, force_ignore: bool, test: TestDescAndFn, strategy: RunStrategy, monitor_ch: Sender<CompletedTest>, concurrency: Concurrent) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":625},"span":{"file_name":"src/libtest/lib.rs","byte_start":15008,"byte_end":15016,"line_start":436,"line_end":436,"column_start":13,"column_end":21},"name":"strategy","qualname":"::run_test::TestRunOpts::strategy","value":"options::RunStrategy","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":626},"span":{"file_name":"src/libtest/lib.rs","byte_start":15043,"byte_end":15052,"line_start":437,"line_end":437,"column_start":13,"column_end":22},"name":"nocapture","qualname":"::run_test::TestRunOpts::nocapture","value":"bool","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":627},"span":{"file_name":"src/libtest/lib.rs","byte_start":15072,"byte_end":15083,"line_start":438,"line_end":438,"column_start":13,"column_end":24},"name":"concurrency","qualname":"::run_test::TestRunOpts::concurrency","value":"options::Concurrent","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":628},"span":{"file_name":"src/libtest/lib.rs","byte_start":15109,"byte_end":15113,"line_start":439,"line_end":439,"column_start":13,"column_end":17},"name":"time","qualname":"::run_test::TestRunOpts::time","value":"std::option::Option<time::TestTimeOptions>","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"src/libtest/bench.rs","byte_start":22357,"byte_end":22364,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"src/libtest/cli.rs","byte_start":29157,"byte_end":29165,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"src/libtest/console.rs","byte_start":43775,"byte_end":43789,"line_start":29,"line_end":29,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"src/libtest/console.rs","byte_start":44689,"byte_end":44705,"line_start":61,"line_end":61,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"src/libtest/event.rs","byte_start":52558,"byte_end":52571,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"src/libtest/event.rs","byte_start":52803,"byte_end":52816,"line_start":27,"line_end":27,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54455,"byte_end":54468,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":55717,"byte_end":55730,"line_start":59,"line_end":59,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":59841,"byte_end":59854,"line_start":185,"line_end":185,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62237,"byte_end":62252,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66976,"byte_end":66991,"line_start":178,"line_end":178,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":70963,"byte_end":70977,"line_start":27,"line_end":27,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":75495,"byte_end":75509,"line_start":167,"line_end":167,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84529,"byte_end":84535,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84712,"byte_end":84721,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86150,"byte_end":86154,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86282,"byte_end":86286,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"src/libtest/options.rs","byte_start":88162,"byte_end":88169,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"src/libtest/stats.rs","byte_start":93415,"byte_end":93422,"line_start":135,"line_end":135,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"src/libtest/test_result.rs","byte_start":99731,"byte_end":99741,"line_start":27,"line_end":27,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"src/libtest/time.rs","byte_start":105582,"byte_end":105594,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"src/libtest/time.rs","byte_start":105915,"byte_end":105928,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"src/libtest/time.rs","byte_start":108165,"byte_end":108180,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":111643,"byte_end":111651,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"src/libtest/types.rs","byte_start":112398,"byte_end":112406,"line_start":71,"line_end":71,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":113071,"byte_end":113077,"line_start":93,"line_end":93,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"src/libtest/types.rs","byte_start":113350,"byte_end":113356,"line_start":104,"line_end":104,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":113975,"byte_end":113983,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/libtest/lib.rs","byte_start":2543,"byte_end":2548,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78724,"byte_end":78735,"line_start":4,"line_end":4,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":390}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78745,"byte_end":78754,"line_start":5,"line_end":5,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":394}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78764,"byte_end":78770,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":398}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78780,"byte_end":78787,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":400}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78797,"byte_end":78801,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":409}},{"kind":"Mod","span":{"file_name":"src/libtest/lib.rs","byte_start":2633,"byte_end":2638,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":429}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/libtest/bench.rs","byte_start":22357,"byte_end":22364,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/cli.rs","byte_start":29157,"byte_end":29165,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/console.rs","byte_start":43775,"byte_end":43789,"line_start":29,"line_end":29,"column_start":26,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":187},"to":{"krate":1,"index":2906}},{"span":{"file_name":"src/libtest/console.rs","byte_start":44689,"byte_end":44705,"line_start":61,"line_end":61,"column_start":6,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/event.rs","byte_start":52558,"byte_end":52571,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/event.rs","byte_start":52803,"byte_end":52816,"line_start":27,"line_end":27,"column_start":22,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54455,"byte_end":54468,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":55717,"byte_end":55730,"line_start":59,"line_end":59,"column_start":36,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":265},"to":{"krate":0,"index":382}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":59841,"byte_end":59854,"line_start":185,"line_end":185,"column_start":45,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62237,"byte_end":62252,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66976,"byte_end":66991,"line_start":178,"line_end":178,"column_start":36,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":382}},{"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":70963,"byte_end":70977,"line_start":27,"line_end":27,"column_start":16,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":75495,"byte_end":75509,"line_start":167,"line_end":167,"column_start":36,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":349},"to":{"krate":0,"index":382}},{"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84529,"byte_end":84535,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84712,"byte_end":84721,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86150,"byte_end":86154,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86282,"byte_end":86286,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":416},"to":{"krate":1,"index":2906}},{"span":{"file_name":"src/libtest/options.rs","byte_start":88162,"byte_end":88169,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/stats.rs","byte_start":93415,"byte_end":93422,"line_start":135,"line_end":135,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/test_result.rs","byte_start":99731,"byte_end":99741,"line_start":27,"line_end":27,"column_start":22,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":1852}},{"span":{"file_name":"src/libtest/time.rs","byte_start":105582,"byte_end":105594,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libtest/time.rs","byte_start":105915,"byte_end":105928,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/time.rs","byte_start":108165,"byte_end":108180,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":111643,"byte_end":111651,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":112398,"byte_end":112406,"line_start":71,"line_end":71,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":5921}},{"span":{"file_name":"src/libtest/types.rs","byte_start":112587,"byte_end":112591,"line_start":78,"line_end":78,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":549}},{"span":{"file_name":"src/libtest/types.rs","byte_start":113071,"byte_end":113077,"line_start":93,"line_end":93,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":113350,"byte_end":113356,"line_start":104,"line_end":104,"column_start":21,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":5916}},{"span":{"file_name":"src/libtest/types.rs","byte_start":113975,"byte_end":113983,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1009},"to":{"krate":4294967295,"index":4294967295}}]}